---
title: "semmcci: Methods (MI)"
author: "Ivan Jacob Agaloos Pesigan"
date: "`r Sys.Date()`"
bibliography: "vignettes.bib"
csl: https://raw.githubusercontent.com/citation-style-language/styles/master/apa.csl
nocite: |
  @Pesigan-Cheung-2023
output:
  rmarkdown::html_vignette:
    toc: true
vignette: >
  %\VignetteIndexEntry{semmcci: Methods (MI)}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

<!-- vignettes/methods-mc-mi.Rmd is generated from .setup/vignettes/methods-mc-mi.Rmd.orig. Please edit that file -->

```{r}
#| include = FALSE
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

```{r}
#| include = FALSE
set.seed(42)
```

```{r}
#| message = FALSE
library(semmcci)
library(lavaan)
```

## Data

```{r}
#| echo = FALSE
n <- 1000
a <- 0.50
b <- 0.50
cp <- 0.25
sigmasqem <- 1 - a^2
sigmasqey <- 1 - cp^2 - a^2 * b^2 - b^2 * (1 - a^2) - 2 * cp * a * b
em <- rnorm(n = n, mean = 0, sd = sqrt(sigmasqem))
ey <- rnorm(n = n, mean = 0, sd = sqrt(sigmasqey))
X <- rnorm(n = n)
M <- a * X + em
Y <- cp * X + b * M + ey
df <- data.frame(X, M, Y)

# Create data set with missing values.

miss <- sample(seq_len(dim(df)[1]), 300)
df[miss[1:100], "X"] <- NA
df[miss[101:200], "M"] <- NA
df[miss[201:300], "Y"] <- NA
```

```{r}
summary(df)
```

## Multiple Imputation

Perform the appropriate multiple imputation approach to deal with missing values.
In this example, we impute multivariate missing data under the normal model.

```{r}
mi <- mice::mice(
  df,
  method = "norm",
  m = 100,
  print = FALSE,
  seed = 42
)
```

## Model Specification

```{r}
model <- "
  Y ~ cp * X + b * M
  M ~ a * X
  X ~~ X
  indirect := a * b
  direct := cp
  total := cp + (a * b)
"
```

## Model Fitting

```{r}
fit <- sem(data = df, model = model)
```

## Monte Carlo Confidence Intervals

```{r}
unstd <- MCMI(fit, mi = mi, R = 20000L, alpha = 0.05)
```

## Methods

### print

```{r}
print(unstd)
```

### summary

```{r}
summary(unstd)
```

### coef

```{r}
coef(unstd)
```

### vcov

```{r}
vcov(unstd)
```

### confint

```{r}
confint(unstd, level = 0.95)
```

## Standardized Monte Carlo Confidence Intervals

```{r}
fit <- sem(data = df, model = model, fixed.x = FALSE)
unstd <- MCMI(fit, mi = mi, R = 20000L, alpha = 0.05)
```

```{r}
std <- MCStd(unstd, alpha = 0.05)
```

## Methods

### print

```{r}
print(std)
```

### summary

```{r}
summary(std)
```

### coef

```{r}
coef(std)
```

### vcov

```{r}
vcov(std)
```

### confint

```{r}
confint(std, level = 0.95)
```

## References

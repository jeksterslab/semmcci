---
title: "MCStd Function Use Case 4: Difference of Standardized Regression Coefficients in Multiple Groups"
author: "Ivan Jacob Agaloos Pesigan"
date: "`r Sys.Date()`"
bibliography: "vignettes.bib"
csl: https://raw.githubusercontent.com/citation-style-language/styles/master/apa.csl
nocite: |
  @Pesigan-Cheung-2023
output:
  rmarkdown::html_vignette:
    toc: true
vignette: >
  %\VignetteIndexEntry{MCStd Function Use Case 4: Difference of Standardized Regression Coefficients in Multiple Groups}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

<!-- vignettes/mcstd-4-difference-regression-coefficients-multigroup.Rmd is generated from .setup/vignettes/mcstd-4-difference-regression-coefficients-multigroup.Rmd.orig. Please edit that file -->

```{r}
#| include = FALSE
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

```{r}
#| include = FALSE
set.seed(42)
```

The `MCStd()` function is used
to generate Monte Carlo confidence intervals
for differences between standardized regression coefficients
in multiple groups.

```{r}
#| message = FALSE
library(semmcci)
library(lavaan)
```

## Data

In this example,
we use data from @Kwan-Chan-2014
with three groups (Hong Kong, Japan, and Korea)
where child's reading ability ($Y_{1}$)
is regressed on
parental occupational status ($X_{1}$),
parental educational level ($X_{2}$), and
child's home possession ($X_{3}$)

\begin{equation}
    Y_{1}
    =
    \alpha_{1}
    +
    \gamma_{1}
    X_{1}
    +
    \gamma_{2}
    X_{2}
    +
    \gamma_{3}
    X_{3}
    +
    \zeta_{1} .
\end{equation}

\noindent Note that $\zeta_{1}$ is the stochastic error term
with expected value of zero
and finite variance $\psi_{1}$,
$\alpha_{1}$ is the intercept,
and $\gamma_{1}$, $\gamma_{2}$, and $\gamma_{3}$
are regression coefficients.

![A Three-Regressor Multiple Regression Model (Covariance Structure)](https://raw.githubusercontent.com/jeksterslab/semmcci/main/.setup/latex/figures/png/kwan-2011-example-1.png)

```{r}
#| echo = FALSE
varnames <- c("Y1", "X1", "X2", "X3")
nobs_hongkong <- 4625
covs_hongkong <- matrix(
  data = c(
    8176.0021, 27.3990, 28.2320, 31.2722,
    27.3990, 0.9451, 0.6006, 0.4326,
    28.2320, 0.6006, 0.7977, 0.3779,
    31.2722, 0.4326, 0.3779, 0.8956
  ),
  nrow = 4
)
colnames(covs_hongkong) <- rownames(covs_hongkong) <- varnames
```

```{r}
knitr::kable(
  x = covs_hongkong, digits = 4,
  caption = "Covariance Matrix for Hong Kong"
)
nobs_hongkong
```

```{r}
#| echo = FALSE
nobs_japan <- 5943
covs_japan <- matrix(
  data = c(
    9666.8658, 34.2501, 35.2189, 30.6472,
    34.2501, 1.0453, 0.6926, 0.5027,
    35.2189, 0.6926, 1.0777, 0.4524,
    30.6472, 0.5027, 0.4524, 0.9583
  ),
  nrow = 4
)
colnames(covs_japan) <- rownames(covs_japan) <- varnames
```

```{r}
knitr::kable(
  x = covs_japan, digits = 4,
  caption = "Covariance Matrix for Japan"
)
nobs_japan
```

```{r}
#| echo = FALSE
nobs_korea <- 5151
covs_korea <- matrix(
  data = c(
    8187.6921, 31.6266, 37.3062, 30.9021,
    31.6266, 0.9271, 0.6338, 0.4088,
    37.3062, 0.6338, 1.0007, 0.3902,
    30.9021, 0.4088, 0.3902, 0.8031
  ),
  nrow = 4
)
colnames(covs_korea) <- rownames(covs_korea) <- varnames
```

```{r}
knitr::kable(
  x = covs_korea, digits = 4,
  caption = "Covariance Matrix for Korea"
)
nobs_korea
```

## Model Specification

We regress `Y1` on `X1`, `X2`, and `X3`.
We label the regression coefficient
$\gamma_{1}$
for the three groups as
`gamma1.g1`, `gamma1.g2`, and `gamma1.g3`,
$\gamma_{2}$
for the three groups as
`gamma2.g1`, `gamma2.g2`, and `gamma2.g3`, and
$\gamma_{3}$
for the three groups as
`gamma3.g1`, `gamma3.g2`, and `gamma3.g3`.

```{r}
model <- "
  Y1 ~ c(gamma1.g1, gamma1.g2, gamma1.g3) * X1
  Y1 ~ c(gamma2.g1, gamma2.g2, gamma2.g3) * X2
  Y1 ~ c(gamma3.g1, gamma3.g2, gamma3.g3) * X3
  gamma1.g12 := gamma1.g1 - gamma1.g2
  gamma1.g13 := gamma1.g1 - gamma1.g3
  gamma1.g23 := gamma1.g2 - gamma1.g3
  gamma2.g12 := gamma2.g1 - gamma2.g2
  gamma2.g13 := gamma2.g1 - gamma2.g3
  gamma2.g23 := gamma2.g2 - gamma2.g3
  gamma3.g12 := gamma3.g1 - gamma3.g2
  gamma3.g13 := gamma3.g1 - gamma3.g3
  gamma3.g23 := gamma3.g2 - gamma3.g3
"
```

## Model Fitting

We can now fit the model using the `sem()` function from `lavaan`
with `mimic = "eqs"`
to ensure compatibility with results from @Kwan-Chan-2011.

> **Note:** We recommend setting `fixed.x = FALSE`
> when generating standardized estimates and confidence intervals
> to model the variances and covariances of the exogenous observed variables
> if they are assumed to be random.
> If `fixed.x = TRUE`, which is the default setting in `lavaan`,
> `MC()` will fix the variances and the covariances
> of the exogenous observed variables to the sample values.

```{r}
fit <- sem(
  model = model, mimic = "eqs", fixed.x = FALSE,
  sample.cov = list(covs_hongkong, covs_japan, covs_korea),
  sample.nobs = list(nobs_hongkong, nobs_japan, nobs_korea)
)
```

## Standardized Monte Carlo Confidence Intervals

Standardized Monte Carlo Confidence intervals can be generated by passing the result of the `MC()` function to the `MCStd()` function.

```{r}
unstd <- MC(fit, R = 20000L, alpha = 0.05)
MCStd(unstd, alpha = 0.05)
```

## References

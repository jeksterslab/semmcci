% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/std.R
\name{std}
\alias{std}
\title{Standardized Monte Carlo Confidence Intervals}
\usage{
std(
  object,
  type = "std.all",
  alpha = c(0.001, 0.01, 0.05),
  par = FALSE,
  ncores = NULL
)
}
\arguments{
\item{object}{object of class \code{semmcci}.
The output of \code{semmcci::mc}.}

\item{type}{If \code{"std.lv"}, the standardized estimates are
on the variances of the (continuous) latent variables only.
If \code{"std.all"}, the standardized estimates are based
on both the variances of both (continuous) observed and latent variables.
If \code{"std.nox"}, the standardized estimates are based
on both the variances of both (continuous) observed and latent variables, 
but not the variances of exogenous covariates.}

\item{alpha}{Numeric vector.
Significance level \eqn{\alpha}.
Default value is \code{alpha = c(0.001, 0.01, 0.05)}.}

\item{par}{Logical.
If \code{par = TRUE}, use multiple cores.}

\item{ncores}{Integer.
Number of cores to use if \code{par = TRUE}.
If unspecified, uses the output of \code{parallel::detectCores()}.}
}
\description{
Calculates standardized Monte Carlo confidence intervals.
}
\details{
The empirical sampling distribution
of parameter estimates from the argument \code{object} are standardized.
Confidence intervals are generated
using the standardized empirical sampling distribution.
}
\examples{
library(semmcci)
library(lavaan)

# Generate Data ------------------------------------------------------------
n <- 1000
x <- rnorm(n = n)
m <- 0.50 * x + rnorm(n = n)
y <- 0.25 * x + 0.50 * m + rnorm(n = n)
data <- data.frame(x, m, y)

# Fit Model in lavaan ------------------------------------------------------
model <- "
  y ~ cp * x + b * m
  m ~ a * x
  ab := a * b
"
fit <- sem(
  data = data,
  model = model,
  fixed.x = FALSE
)

# Monte Carlo --------------------------------------------------------------
mc <- mc(
  fit,
  R = 100L, # use a large value e.g., 20000L for actual research
  alpha = c(0.001, 0.01, 0.05)
)

# Standardized Monte Carlo -------------------------------------------------
std <- std(mc)
print(std)
}
\author{
Ivan Jacob Agaloos Pesigan
}

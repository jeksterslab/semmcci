% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/semmcci-methods.R
\name{print.semmcci}
\alias{print.semmcci}
\title{Print Method for Object of Class \code{semmcci}}
\usage{
\method{print}{semmcci}(x, digits = 4, ...)
}
\arguments{
\item{x}{an object of class \code{semmcci}.}

\item{digits}{Integer indicating the number of decimal places to display.}

\item{...}{further arguments.}
}
\value{
Returns a matrix of estimates, standard errors,
number of Monte Carlo replications, and confidence intervals.
}
\description{
Print Method for Object of Class \code{semmcci}
}
\examples{
library(semmcci)
library(lavaan)

# Data ---------------------------------------------------------------------
data("Tal.Or", package = "psych")
df <- mice::ampute(Tal.Or)$amp

# Monte Carlo --------------------------------------------------------------
## Fit Model in lavaan -----------------------------------------------------
model <- "
  reaction ~ cp * cond + b * pmi
  pmi ~ a * cond
  cond ~~ cond
  indirect := a * b
  direct := cp
  total := cp + (a * b)
"
fit <- sem(data = df, model = model, missing = "fiml")

## MC() --------------------------------------------------------------------
unstd <- MC(
  fit,
  R = 100L, # use a large value e.g., 20000L for actual research
  alpha = 0.05
)

## Standardized Monte Carlo ------------------------------------------------
std <- MCStd(unstd, alpha = 0.05)
print(unstd)
print(std)

# Monte Carlo (Multiple Imputation) ----------------------------------------
## Multiple Imputation -----------------------------------------------------
mi <- mice::mice(
  data = df,
  print = FALSE,
  m = 5L, # use a large value e.g., 100L for actual research,
  seed = 42
)

## Fit Model in lavaan -----------------------------------------------------
fit <- sem(data = df, model = model) # use default listwise deletion

## MCMI() ------------------------------------------------------------------
unstd <- MCMI(
  fit,
  mi = mi,
  R = 100L, # use a large value e.g., 20000L for actual research
  alpha = 0.05
)

## Standardized Monte Carlo ------------------------------------------------
std <- MCStd(unstd, alpha = 0.05)
print(unstd)
print(std)

}
\author{
Ivan Jacob Agaloos Pesigan
}
\keyword{method}

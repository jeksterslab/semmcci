[{"path":"https://github.com/jeksterslab/semmcci/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Ivan Jacob Agaloos Pesigan Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"n <- 1000 a <- 0.50 b <- 0.50 cp <- 0.25 s2_em <- 1 - a^2 s2_ey <- 1 - cp^2 - a^2 * b^2 - b^2 * s2_em - 2 * cp * a * b em <- rnorm(n = n, mean = 0, sd = sqrt(s2_em)) ey <- rnorm(n = n, mean = 0, sd = sqrt(s2_ey)) X <- rnorm(n = n) M <- a * X + em Y <- cp * X + b * M + ey df <- data.frame(X, M, Y)"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"can now fit model using sem() function lavaan.","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"fit lavaan object can passed MC() function semmcci generate Monte Carlo confidence intervals.","code":"MC(fit, R = 100L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>             est     se   R   2.5%  97.5% #> cp       0.2333 0.0271 100 0.1804 0.2786 #> b        0.5082 0.0227 100 0.4604 0.5475 #> a        0.4820 0.0263 100 0.4218 0.5240 #> X~~X     1.0590 0.0505 100 0.9704 1.1428 #> Y~~Y     0.5462 0.0256 100 0.4899 0.5911 #> M~~M     0.7527 0.0308 100 0.6929 0.8057 #> indirect 0.2449 0.0174 100 0.2100 0.2783 #> direct   0.2333 0.0271 100 0.1804 0.2786 #> total    0.4782 0.0284 100 0.4106 0.5273"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"nonparametric-bootstrap-confidence-intervals","dir":"Articles","previous_headings":"","what":"Nonparametric Bootstrap Confidence Intervals","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"Nonparametric bootstrap confidence intervals can generated lavaan using following.","code":"parameterEstimates(   sem(     data = df,     model = model,     se = \"bootstrap\",     bootstrap = 100L   ) ) #>        lhs op      rhs    label   est    se      z pvalue ci.lower ci.upper #> 1        Y  ~        X       cp 0.233 0.030  7.825      0    0.179    0.300 #> 2        Y  ~        M        b 0.508 0.028 17.963      0    0.448    0.558 #> 3        M  ~        X        a 0.482 0.027 17.558      0    0.426    0.535 #> 4        X ~~        X          1.059 0.041 25.573      0    0.970    1.153 #> 5        Y ~~        Y          0.546 0.023 23.493      0    0.499    0.594 #> 6        M ~~        M          0.753 0.031 23.956      0    0.684    0.820 #> 7 indirect :=      a*b indirect 0.245 0.020 12.058      0    0.205    0.282 #> 8   direct :=       cp   direct 0.233 0.030  7.786      0    0.179    0.300 #> 9    total := cp+(a*b)    total 0.478 0.031 15.652      0    0.413    0.542"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"arguments","dir":"Articles","previous_headings":"Benchmark","what":"Arguments","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"benchmark_complete_01 <- microbenchmark(   MC = {     fit <- sem(       data = df,       model = model     )     MC(       fit,       R = R,       decomposition = \"chol\",       pd = FALSE     )   },   NB = sem(     data = df,     model = model,     se = \"bootstrap\",     bootstrap = B   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"summary-of-benchmark-results","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"summary(benchmark_complete_01, unit = \"ms\") #>   expr        min         lq        mean      median         uq        max #> 1   MC    62.1595    64.6281    66.08792    66.30465    68.1709    68.6846 #> 2   NB 12046.9715 12245.3039 12323.76434 12314.43660 12441.1210 12608.3138 #>   neval #> 1    10 #> 2    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"summary-of-benchmark-results-relative-to-the-faster-method","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"summary(benchmark_complete_01, unit = \"relative\") #>   expr      min       lq     mean   median      uq      max neval #> 1   MC   1.0000   1.0000   1.0000   1.0000   1.000   1.0000    10 #> 2   NB 193.8074 189.4734 186.4753 185.7251 182.499 183.5683    10"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"benchmark---monte-carlo-method-with-precalculated-estimates","dir":"Articles","previous_headings":"","what":"Benchmark - Monte Carlo Method with Precalculated Estimates","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"fit <- sem(   data = df,   model = model ) benchmark_complete_02 <- microbenchmark(   MC = MC(     fit,     R = R,     decomposition = \"chol\",     pd = FALSE   ),   NB = sem(     data = df,     model = model,     se = \"bootstrap\",     bootstrap = B   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"summary-of-benchmark-results-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"summary(benchmark_complete_02, unit = \"ms\") #>   expr        min         lq        mean     median         uq        max neval #> 1   MC    18.8038    19.2114    21.17623    19.8383    22.8205    25.6665    10 #> 2   NB 12013.4015 12039.9347 12149.07130 12115.9460 12237.8532 12424.2130    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"summary-of-benchmark-results-relative-to-the-faster-method-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"summary(benchmark_complete_02, unit = \"relative\") #>   expr      min       lq     mean   median       uq      max neval #> 1   MC   1.0000   1.0000   1.0000   1.0000   1.0000   1.0000    10 #> 2   NB 638.8816 626.7078 573.7127 610.7351 536.2658 484.0634    10"},{"path":[]},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"n <- 1000 a <- 0.50 b <- 0.50 cp <- 0.25 s2_em <- 1 - a^2 s2_ey <- 1 - cp^2 - a^2 * b^2 - b^2 * s2_em - 2 * cp * a * b em <- rnorm(n = n, mean = 0, sd = sqrt(s2_em)) ey <- rnorm(n = n, mean = 0, sd = sqrt(s2_ey)) X <- rnorm(n = n) M <- a * X + em Y <- cp * X + b * M + ey df <- data.frame(X, M, Y)  # Create data set with missing values.  miss <- sample(1:dim(df)[1], 300) df[miss[1:100], \"X\"] <- NA df[miss[101:200], \"M\"] <- NA df[miss[201:300], \"Y\"] <- NA"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"can now fit model using sem() function lavaan. using missing = \"fiml\" handle missing data lavaan.","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"fit lavaan object can passed MC() function semmcci generate Monte Carlo confidence intervals.","code":"MC(fit, R = 100L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>             est     se   R   2.5%  97.5% #> cp       0.2419 0.0299 100 0.1833 0.2884 #> b        0.5166 0.0319 100 0.4646 0.5771 #> a        0.4989 0.0345 100 0.4284 0.5787 #> X~~X     1.0951 0.0620 100 0.9815 1.2298 #> Y~~Y     0.5796 0.0310 100 0.5219 0.6379 #> M~~M     0.8045 0.0404 100 0.7175 0.8759 #> indirect 0.2577 0.0239 100 0.2145 0.3007 #> direct   0.2419 0.0299 100 0.1833 0.2884 #> total    0.4996 0.0315 100 0.4468 0.5589"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"nonparametric-bootstrap-confidence-intervals","dir":"Articles","previous_headings":"","what":"Nonparametric Bootstrap Confidence Intervals","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"Nonparametric bootstrap confidence intervals can generated lavaan using following.","code":"parameterEstimates(   sem(     data = df,     model = model,     missing = \"fiml\",     se = \"bootstrap\",     bootstrap = 100L   ) ) #>         lhs op      rhs    label    est    se      z pvalue ci.lower ci.upper #> 1         Y  ~        X       cp  0.234 0.035  6.689  0.000    0.166    0.309 #> 2         Y  ~        M        b  0.511 0.035 14.751  0.000    0.439    0.580 #> 3         M  ~        X        a  0.481 0.027 17.786  0.000    0.415    0.534 #> 4         X ~~        X           1.059 0.051 20.908  0.000    0.954    1.157 #> 5         Y ~~        Y           0.554 0.027 20.420  0.000    0.491    0.603 #> 6         M ~~        M           0.756 0.032 23.927  0.000    0.691    0.823 #> 7         Y ~1                   -0.013 0.026 -0.488  0.625   -0.075    0.037 #> 8         M ~1                   -0.022 0.033 -0.683  0.495   -0.087    0.054 #> 9         X ~1                    0.002 0.036  0.069  0.945   -0.073    0.071 #> 10 indirect :=      a*b indirect  0.246 0.020 12.173  0.000    0.204    0.283 #> 11   direct :=       cp   direct  0.234 0.035  6.655  0.000    0.166    0.309 #> 12    total := cp+(a*b)    total  0.479 0.035 13.741  0.000    0.414    0.555"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"arguments","dir":"Articles","previous_headings":"Benchmark","what":"Arguments","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"benchmark_fiml_01 <- microbenchmark(   MC = {     fit <- sem(       data = df,       model = model,       missing = \"fiml\"     )     MC(       fit,       R = R,       decomposition = \"chol\",       pd = FALSE     )   },   NB = sem(     data = df,     model = model,     missing = \"fiml\",     se = \"bootstrap\",     bootstrap = B   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"summary-of-benchmark-results","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"summary(benchmark_fiml_01, unit = \"ms\") #>   expr        min         lq       mean     median         uq        max neval #> 1   MC    97.7213   100.8283   103.8861   102.7732   106.8408   114.3055    10 #> 2   NB 26415.5082 26460.4433 26590.2341 26540.0973 26658.8428 26980.2636    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"summary-of-benchmark-results-relative-to-the-faster-method","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"summary(benchmark_fiml_01, unit = \"relative\") #>   expr      min       lq     mean   median       uq      max neval #> 1   MC   1.0000   1.0000   1.0000   1.0000   1.0000   1.0000    10 #> 2   NB 270.3147 262.4307 255.9556 258.2395 249.5193 236.0364    10"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"benchmark---monte-carlo-method-with-precalculated-estimates","dir":"Articles","previous_headings":"","what":"Benchmark - Monte Carlo Method with Precalculated Estimates","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"fit <- sem(   data = df,   model = model,   missing = \"fiml\" ) benchmark_fiml_02 <- microbenchmark(   MC = MC(     fit,     R = R,     decomposition = \"chol\",     pd = FALSE   ),   NB = sem(     data = df,     model = model,     missing = \"fiml\",     se = \"bootstrap\",     bootstrap = B   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"summary-of-benchmark-results-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"summary(benchmark_fiml_02, unit = \"ms\") #>   expr        min         lq        mean     median         uq        max neval #> 1   MC    18.7725    19.0044    20.23174    19.9793    21.5044    22.4249    10 #> 2   NB 25000.8559 26129.7164 26052.12314 26165.7069 26359.4396 26602.1268    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"summary-of-benchmark-results-relative-to-the-faster-method-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"summary(benchmark_fiml_02, unit = \"relative\") #>   expr      min      lq     mean   median      uq      max neval #> 1   MC    1.000    1.00    1.000    1.000    1.00    1.000    10 #> 2   NB 1331.781 1374.93 1287.686 1309.641 1225.77 1186.276    10"},{"path":[]},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"n <- 1000 a <- 0.50 b <- 0.50 cp <- 0.25 s2_em <- 1 - a^2 s2_ey <- 1 - cp^2 - a^2 * b^2 - b^2 * s2_em - 2 * cp * a * b em <- rnorm(n = n, mean = 0, sd = sqrt(s2_em)) ey <- rnorm(n = n, mean = 0, sd = sqrt(s2_ey)) X <- rnorm(n = n) M <- a * X + em Y <- cp * X + b * M + ey df <- data.frame(X, M, Y)  # Create data set with missing values.  miss <- sample(1:dim(df)[1], 300) df[miss[1:100], \"X\"] <- NA df[miss[101:200], \"M\"] <- NA df[miss[201:300], \"Y\"] <- NA"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"multiple-imputation","dir":"Articles","previous_headings":"","what":"Multiple Imputation","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"Perform appropriate multiple imputation approach deal missing values. example, impute multivariate missing data normal model.","code":"mi <- amelia(   x = df,   m = 5L,   p2s = 0 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"can now fit model using sem() function lavaan. need deal missing values stage.","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"monte-carlo-confidence-intervals-multiple-imputation","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals (Multiple Imputation)","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"fit lavaan object mi mids object can passed MCMI() function semmcci generate Monte Carlo confidence intervals using multiple imputation described Pesigan Cheung (2023).","code":"MCMI(fit, R = 100L, alpha = 0.05, mi = mi) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>             est     se   R   2.5%  97.5% #> cp       0.2274 0.0300 100 0.1794 0.2931 #> b        0.5192 0.0309 100 0.4506 0.5700 #> a        0.4790 0.0316 100 0.4129 0.5259 #> X~~X     1.0613 0.0531 100 0.9516 1.1674 #> Y~~Y     0.5439 0.0306 100 0.4847 0.5926 #> M~~M     0.7642 0.0417 100 0.6833 0.8485 #> indirect 0.2486 0.0197 100 0.2072 0.2855 #> direct   0.2274 0.0300 100 0.1794 0.2931 #> total    0.4760 0.0272 100 0.4276 0.5319"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"nonparametric-bootstrap-confidence-intervals-multiple-imputation","dir":"Articles","previous_headings":"","what":"Nonparametric Bootstrap Confidence Intervals (Multiple Imputation)","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"Nonparametric bootstrap confidence intervals can generated bmemLavaan using following.","code":"summary(   bmemLavaan::bmem(data = df, model = model, method = \"mi\", boot = 100L, m = 5L) ) #>  #> Estimate method:                          multiple imputation #> Sample size:                              1000       #> Number of request bootstrap draws:        100        #> Number of successful bootstrap draws:     100        #> Type of confidence interval:              perc #>  #> Values of statistics: #>  #>                      Value      SE      2.5%     97.5% #>   chisq               0.000    0.000    0.000    0.000    #>   GFI                 1.000    0.000    1.000    1.000    #>   AGFI                1.000    0.000    1.000    1.000    #>   RMSEA               0.000    0.000    0.000    0.000    #>   NFI                 1.000    0.000    1.000    1.000    #>   NNFI                1.000    0.000    1.000    1.000    #>   CFI                 1.000    0.000    1.000    1.000    #>   BIC                 7743.556 81.240   7580.008 7892.470 #>   SRMR                0.000    0.000    0.000    0.000    #>  #> Estimation of parameters: #>  #>                      Estimate   SE      2.5%     97.5% #> Regressions: #>   Y ~ #>     X        (cp)     0.233    0.030    0.172    0.294 #>     M         (b)     0.515    0.033    0.452    0.568 #>   M ~ #>     X         (a)     0.471    0.029    0.427    0.546 #>  #> Variances: #>     X                 1.060    0.047    0.974    1.158 #>     Y                 0.553    0.027    0.505    0.615 #>     M                 0.758    0.036    0.689    0.815 #>  #>  #>  #> Defined parameters: #>     a*b    (indr)     0.243    0.021    0.212    0.286 #>     cp     (drct)     0.233    0.030    0.172    0.294 #>     cp+(*) (totl)     0.476    0.026    0.430    0.525"},{"path":[]},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"benchmark-1","dir":"Articles","previous_headings":"","what":"Benchmark","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"benchmark_mi_01 <- microbenchmark(   MC = {     fit <- sem(       data = df,       model = model     )     mi <- Amelia::amelia(       x = df,       m = m,       p2s = 0     )     MCMI(       fit,       R = R,       decomposition = \"chol\",       pd = FALSE,       mi = mi     )   },   NB = bmemLavaan::bmem(     data = df,     model = model,     method = \"mi\",     boot = B,     m = m   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"summary-of-benchmark-results","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"summary(benchmark_mi_01, unit = \"ms\") #>   expr        min         lq      mean     median         uq        max neval #> 1   MC   317.1231   318.7643   329.505   328.5946   337.2843   348.0482    10 #> 2   NB 32127.9862 32355.3726 32588.880 32530.0621 32874.1932 33340.5005    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"summary-of-benchmark-results-relative-to-the-faster-method","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"summary(benchmark_mi_01, unit = \"relative\") #>   expr      min       lq     mean   median       uq      max neval #> 1   MC   1.0000   1.0000  1.00000  1.00000  1.00000  1.00000    10 #> 2   NB 101.3108 101.5025 98.90255 98.99756 97.46731 95.79277    10"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"benchmark---monte-carlo-method-with-precalculated-estimates-and-multiple-imputation","dir":"Articles","previous_headings":"","what":"Benchmark - Monte Carlo Method with Precalculated Estimates and Multiple Imputation","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"fit <- sem(   data = df,   model = model ) mi <- Amelia::amelia(   x = df,   m = m,   p2s = 0 ) benchmark_mi_02 <- microbenchmark(   MC = MCMI(     fit,     R = R,     decomposition = \"chol\",     pd = FALSE,     mi = mi   ),   NB = bmemLavaan::bmem(     data = df,     model = model,     method = \"mi\",     boot = B,     m = m   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"summary-of-benchmark-results-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates and Multiple Imputation","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"summary(benchmark_mi_02, unit = \"ms\") #>   expr        min         lq       mean     median         uq        max neval #> 1   MC   211.2006   216.4222   224.6055   221.9282   225.6835   262.3087    10 #> 2   NB 32205.8410 32555.7322 32726.2929 32817.0628 32920.8268 33069.5342    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"summary-of-benchmark-results-relative-to-the-faster-method-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates and Multiple Imputation","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"summary(benchmark_mi_02, unit = \"relative\") #>   expr      min      lq     mean   median       uq      max neval #> 1   MC   1.0000   1.000   1.0000   1.0000   1.0000   1.0000    10 #> 2   NB 152.4893 150.427 145.7056 147.8724 145.8717 126.0711    10"},{"path":[]},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/example-1-simple.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Example 1: The Simple Mediation Model","text":"","code":"summary(df) #>        X                   M                   Y            #>  Min.   :-3.199558   Min.   :-3.371276   Min.   :-3.61432   #>  1st Qu.:-0.636035   1st Qu.:-0.692640   1st Qu.:-0.66146   #>  Median : 0.011377   Median : 0.007125   Median :-0.04726   #>  Mean   :-0.003207   Mean   :-0.023968   Mean   :-0.01677   #>  3rd Qu.: 0.651951   3rd Qu.: 0.647363   3rd Qu.: 0.62640   #>  Max.   : 3.470910   Max.   : 2.963216   Max.   : 3.09950 colMeans(df) #>            X            M            Y  #> -0.003206987 -0.023968103 -0.016774294 var(df) #>           X         M         Y #> X 1.0600162 0.5108780 0.5069458 #> M 0.5108780 0.9996606 0.6272104 #> Y 0.5069458 0.6272104 0.9837255"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-1-simple.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 1: The Simple Mediation Model","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example-1-simple.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 1: The Simple Mediation Model","text":"can now fit model using sem() function lavaan.","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-1-simple.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Example 1: The Simple Mediation Model","text":"fit lavaan object can passed MC() function generate Monte Carlo confidence intervals.","code":"MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2333 0.0261 20000 0.1817 0.2839 #> b        0.5082 0.0268 20000 0.4554 0.5604 #> a        0.4820 0.0267 20000 0.4288 0.5336 #> Y~~Y     0.5462 0.0245 20000 0.4980 0.5947 #> M~~M     0.7527 0.0337 20000 0.6870 0.8198 #> X~~X     1.0590 0.0000 20000 1.0590 1.0590 #> indirect 0.2449 0.0188 20000 0.2086 0.2831 #> direct   0.2333 0.0261 20000 0.1817 0.2839 #> total    0.4782 0.0266 20000 0.4252 0.5297"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-1-simple.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"Example 1: The Simple Mediation Model","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function. Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(data = df, model = model, fixed.x = FALSE) unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2422 0.0267 20000 0.1899 0.2944 #> b        0.5123 0.0244 20000 0.4630 0.5595 #> a        0.4963 0.0239 20000 0.4487 0.5420 #> Y~~Y     0.5558 0.0233 20000 0.5102 0.6010 #> M~~M     0.7537 0.0236 20000 0.7063 0.7987 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> indirect 0.2542 0.0176 20000 0.2202 0.2889 #> direct   0.2422 0.0267 20000 0.1899 0.2944 #> total    0.4964 0.0237 20000 0.4485 0.5415"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-1-simple.html","id":"standardized-monte-carlo-confidence-intervals---an-alternative-approach","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals - An Alternative Approach","title":"Example 1: The Simple Mediation Model","text":"example, confidence intervals standardized indirect effect generated specifying standardized indirect effect derived parameter using := operator. standardized indirect effect simple mediation model involves paths \\(\\) \\(b\\), standard deviations \\(X\\) \\(Y\\). given \\[   b   \\frac{s_X}{s_Y} \\] \\[   s_X   =   \\sqrt{     s_{X}^{2}   } \\] \\[   s_Y   =   \\sqrt{     c^{\\prime 2} s_{X}^{2}     + ^2 b^2 s_{X}^{2}     + b^2 s_{e_{M}}^{2}     + 2 c^{\\prime} b s_{X}^{2}     + s_{e_{Y}}^{2}   } \\] \\(s_{e_{Y}}^{2}\\) \\(s_{e_{M}}^{2}\\) residual variances regression equations. standardized indirect effect can defined using := operator named parameters model. row indirect_std corresponds confidence intervals standardized indirect effect.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ s2_X * X   M ~~ s2_em * M   Y ~~ s2_ey * Y   indirect_std := a * b * (     sqrt(s2_X) / sqrt(       (         cp^2 * s2_X + a^2 * b^2 * s2_X       ) + (         b^2 * s2_em       ) + (         2 * cp * b * a * s2_X       ) + s2_ey     )   ) \" fit <- sem(data = df, model = model, fixed.x = FALSE) MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>                 est     se     R   2.5%  97.5% #> cp           0.2333 0.0262 20000 0.1824 0.2851 #> b            0.5082 0.0270 20000 0.4548 0.5605 #> a            0.4820 0.0266 20000 0.4299 0.5347 #> s2_X         1.0590 0.0473 20000 0.9661 1.1520 #> s2_em        0.7527 0.0337 20000 0.6861 0.8179 #> s2_ey        0.5462 0.0244 20000 0.4987 0.5944 #> indirect_std 0.2542 0.0174 20000 0.2200 0.2882"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/example-2-serial.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Example 2: The Serial Mediation Model","text":"","code":"summary(df) #>        X                  M1                 M2                 Y            #>  Min.   :-3.37174   Min.   :-3.22690   Min.   :-4.33590   Min.   :-4.29019   #>  1st Qu.:-0.67546   1st Qu.:-0.73709   1st Qu.:-0.82188   1st Qu.:-0.86035   #>  Median :-0.01313   Median :-0.01651   Median :-0.03903   Median :-0.02704   #>  Mean   :-0.02582   Mean   :-0.01823   Mean   :-0.01620   Mean   :-0.03338   #>  3rd Qu.: 0.66400   3rd Qu.: 0.72825   3rd Qu.: 0.80016   3rd Qu.: 0.81721   #>  Max.   : 3.49530   Max.   : 3.69001   Max.   : 3.65147   Max.   : 4.05239 colMeans(df) #>           X          M1          M2           Y  #> -0.02582443 -0.01823021 -0.01619576 -0.03337865 var(df) #>            X        M1        M2         Y #> X  1.0050488 0.5123920 0.3848638 0.3333458 #> M1 0.5123920 1.2334461 0.6645408 0.5108946 #> M2 0.3848638 0.6645408 1.4321822 0.8012638 #> Y  0.3333458 0.5108946 0.8012638 1.4504417"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-2-serial.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 2: The Serial Mediation Model","text":"can define several indirect effects example: \\(X \\rightarrow M1 \\rightarrow M2 \\rightarrow Y\\) \\(X \\rightarrow M1 \\rightarrow M2\\) \\(X \\rightarrow M1 \\rightarrow Y\\) \\(M1 \\rightarrow M2 \\rightarrow Y\\) indirect effects defined using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b1 * M1 + b2 * M2   M2 ~ a2 * X + k * M1   M1 ~ a1 * X   # X -> M1 -> M2 -> Y   a1kb2 := a1 * k * b2   # X -> M1 -> M2   a1k := a1 * k   # X -> M1 -> Y   a2b2 := a2 * b2   # M1 -> M2 -> Y   kb2 := k * b2 \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example-2-serial.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 2: The Serial Mediation Model","text":"","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-2-serial.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Example 2: The Serial Mediation Model","text":"fit lavaan object can passed MC() function semmcci generate Monte Carlo confidence intervals.","code":"MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>           est     se     R   2.5%  97.5% #> cp     0.0868 0.0354 20000 0.0173 0.1564 #> b1     0.1190 0.0348 20000 0.0516 0.1872 #> b2     0.4809 0.0302 20000 0.4219 0.5412 #> a2     0.1373 0.0368 20000 0.0651 0.2100 #> k      0.4817 0.0333 20000 0.4164 0.5478 #> a1     0.5098 0.0309 20000 0.4499 0.5715 #> Y~~Y   0.9744 0.0436 20000 0.8896 1.0598 #> M2~~M2 1.0581 0.0474 20000 0.9653 1.1505 #> M1~~M1 0.9712 0.0431 20000 0.8871 1.0561 #> X~~X   1.0040 0.0000 20000 1.0040 1.0040 #> a1kb2  0.1181 0.0131 20000 0.0938 0.1453 #> a1k    0.2456 0.0225 20000 0.2035 0.2911 #> a2b2   0.0660 0.0182 20000 0.0309 0.1024 #> kb2    0.2317 0.0217 20000 0.1909 0.2756"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-2-serial.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"Example 2: The Serial Mediation Model","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function. Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(data = df, model = model, fixed.x = FALSE) unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>           est     se     R   2.5%  97.5% #> cp     0.0723 0.0293 20000 0.0148 0.1295 #> b1     0.1098 0.0320 20000 0.0467 0.1717 #> b2     0.4779 0.0274 20000 0.4233 0.5312 #> a2     0.1151 0.0305 20000 0.0549 0.1746 #> k      0.4470 0.0282 20000 0.3908 0.5011 #> a1     0.4602 0.0252 20000 0.4101 0.5088 #> Y~~Y   0.6725 0.0242 20000 0.6236 0.7185 #> M2~~M2 0.7396 0.0239 20000 0.6911 0.7840 #> M1~~M1 0.7882 0.0231 20000 0.7412 0.8318 #> X~~X   1.0000 0.0000 20000 1.0000 1.0000 #> a1kb2  0.0983 0.0104 20000 0.0789 0.1196 #> a1k    0.2057 0.0177 20000 0.1720 0.2412 #> a2b2   0.0550 0.0149 20000 0.0259 0.0847 #> kb2    0.2136 0.0187 20000 0.1775 0.2505"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/example-3-latent.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 3: The Latent Variable Simple Mediation Model","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   X =~ x1 + x2 + x3   M =~ x4 + x5 + x6   Y =~ x7 + x8 + x9   M ~ a * X   Y ~ b * M   indirect := a * b \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example-3-latent.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 3: The Latent Variable Simple Mediation Model","text":"can now fit model using sem() function lavaan using Holzinger Swineford (1939) data set.","code":"df <- lavaan::HolzingerSwineford1939 fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-3-latent.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Example 3: The Latent Variable Simple Mediation Model","text":"fit lavaan object can passed MC() function semmcci generate Monte Carlo confidence intervals.","code":"MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> X=~x1    1.0000 0.0000 20000 1.0000 1.0000 #> X=~x2    0.5554 0.1041 20000 0.3520 0.7610 #> X=~x3    0.7045 0.1166 20000 0.4733 0.9342 #> M=~x4    1.0000 0.0000 20000 1.0000 1.0000 #> M=~x5    1.1106 0.0651 20000 0.9823 1.2372 #> M=~x6    0.9268 0.0553 20000 0.8179 1.0344 #> Y=~x7    1.0000 0.0000 20000 1.0000 1.0000 #> Y=~x8    1.1482 0.1633 20000 0.8251 1.4643 #> Y=~x9    0.8854 0.1229 20000 0.6464 1.1275 #> a        0.5107 0.0957 20000 0.3263 0.6994 #> b        0.1884 0.0514 20000 0.0874 0.2904 #> x1~~x1   0.5320 0.1286 20000 0.2807 0.7840 #> x2~~x2   1.1269 0.1029 20000 0.9246 1.3280 #> x3~~x3   0.8647 0.0951 20000 0.6765 1.0505 #> x4~~x4   0.3714 0.0474 20000 0.2781 0.4642 #> x5~~x5   0.4519 0.0580 20000 0.3387 0.5665 #> x6~~x6   0.3551 0.0431 20000 0.2702 0.4394 #> x7~~x7   0.7309 0.0833 20000 0.5680 0.8947 #> x8~~x8   0.4257 0.0831 20000 0.2624 0.5894 #> x9~~x9   0.6605 0.0711 20000 0.5227 0.7999 #> X~~X     0.8264 0.1566 20000 0.5176 1.1309 #> M~~M     0.7638 0.0969 20000 0.5766 0.9565 #> Y~~Y     0.4175 0.0888 20000 0.2457 0.5922 #> indirect 0.0962 0.0315 20000 0.0410 0.1641"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-3-latent.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"Example 3: The Latent Variable Simple Mediation Model","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function.","code":"fit <- sem(data = df, model = model) unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> X=~x1    0.7800 0.0637 20000 0.6411 0.8914 #> X=~x2    0.4295 0.0621 20000 0.2944 0.5377 #> X=~x3    0.5672 0.0597 20000 0.4335 0.6699 #> M=~x4    0.8515 0.0230 20000 0.8016 0.8928 #> M=~x5    0.8531 0.0225 20000 0.8041 0.8932 #> M=~x6    0.8385 0.0234 20000 0.7887 0.8804 #> Y=~x7    0.6183 0.0553 20000 0.4962 0.7122 #> Y=~x8    0.7639 0.0557 20000 0.6408 0.8588 #> Y=~x9    0.5910 0.0548 20000 0.4728 0.6889 #> a        0.4691 0.0651 20000 0.3277 0.5832 #> b        0.2772 0.0696 20000 0.1393 0.4114 #> x1~~x1   0.3917 0.0975 20000 0.2055 0.5889 #> x2~~x2   0.8155 0.0519 20000 0.7108 0.9134 #> x3~~x3   0.6783 0.0659 20000 0.5513 0.8121 #> x4~~x4   0.2750 0.0390 20000 0.2030 0.3574 #> x5~~x5   0.2722 0.0383 20000 0.2022 0.3534 #> x6~~x6   0.2969 0.0390 20000 0.2249 0.3779 #> x7~~x7   0.6177 0.0668 20000 0.4928 0.7538 #> x8~~x8   0.4165 0.0835 20000 0.2624 0.5894 #> x9~~x9   0.6507 0.0638 20000 0.5255 0.7764 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> M~~M     0.7799 0.0596 20000 0.6599 0.8926 #> Y~~Y     0.9231 0.0389 20000 0.8308 0.9806 #> indirect 0.1301 0.0376 20000 0.0590 0.2063"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-1-simple-miss-fiml.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Example 4.1: The Simple Mediation Model with Missing Data (FIML)","text":"","code":"summary(df) #>        X                  M                  Y            #>  Min.   :-3.19956   Min.   :-3.37128   Min.   :-3.61432   #>  1st Qu.:-0.63268   1st Qu.:-0.70516   1st Qu.:-0.66921   #>  Median : 0.02823   Median : 0.02825   Median :-0.04833   #>  Mean   : 0.00269   Mean   :-0.01992   Mean   :-0.01538   #>  3rd Qu.: 0.65754   3rd Qu.: 0.65240   3rd Qu.: 0.65293   #>  Max.   : 3.47091   Max.   : 2.93497   Max.   : 3.09950   #>  NA's   :100        NA's   :100        NA's   :100"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-1-simple-miss-fiml.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 4.1: The Simple Mediation Model with Missing Data (FIML)","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-1-simple-miss-fiml.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 4.1: The Simple Mediation Model with Missing Data (FIML)","text":"can now fit model using sem() function lavaan. using missing = \"fiml\" handle missing data lavaan.","code":"fit <- sem(data = df, model = model, missing = \"fiml\")"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-1-simple-miss-fiml.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Example 4.1: The Simple Mediation Model with Missing Data (FIML)","text":"fit lavaan object can passed MC() function semmcci generate Monte Carlo confidence intervals.","code":"MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>              est     se     R    2.5%  97.5% #> cp        0.2335 0.0296 20000  0.1754 0.2927 #> b         0.5113 0.0296 20000  0.4536 0.5699 #> a         0.4809 0.0283 20000  0.4247 0.5371 #> X~~X      1.0591 0.0499 20000  0.9620 1.1571 #> Y~~Y      0.5542 0.0268 20000  0.5021 0.6071 #> M~~M      0.7564 0.0359 20000  0.6857 0.8269 #> Y~1      -0.0127 0.0254 20000 -0.0621 0.0372 #> M~1      -0.0223 0.0290 20000 -0.0792 0.0353 #> X~1       0.0025 0.0337 20000 -0.0632 0.0681 #> indirect  0.2458 0.0203 20000  0.2073 0.2866 #> direct    0.2335 0.0296 20000  0.1754 0.2927 #> total     0.4794 0.0287 20000  0.4231 0.5363"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-1-simple-miss-fiml.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"Example 4.1: The Simple Mediation Model with Missing Data (FIML)","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function.","code":"fit <- sem(data = df, model = model, missing = \"fiml\") unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>              est     se     R   2.5%  97.5% #> cp        0.2409 0.0296 20000 0.1814 0.2984 #> b         0.5128 0.0267 20000 0.4604 0.5643 #> a         0.4946 0.0255 20000 0.4431 0.5432 #> X~~X      1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y      0.5568 0.0251 20000 0.5074 0.6061 #> M~~M      0.7554 0.0252 20000 0.7050 0.8037 #> indirect -0.0128 0.0187 20000 0.2176 0.2909 #> direct   -0.0222 0.0296 20000 0.1814 0.2984 #> total     0.0024 0.0257 20000 0.4424 0.5429"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-2-simple-miss-mi.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"","code":"summary(df) #>        X                  M                  Y            #>  Min.   :-3.19956   Min.   :-3.37128   Min.   :-3.61432   #>  1st Qu.:-0.63268   1st Qu.:-0.70516   1st Qu.:-0.66921   #>  Median : 0.02823   Median : 0.02825   Median :-0.04833   #>  Mean   : 0.00269   Mean   :-0.01992   Mean   :-0.01538   #>  3rd Qu.: 0.65754   3rd Qu.: 0.65240   3rd Qu.: 0.65293   #>  Max.   : 3.47091   Max.   : 2.93497   Max.   : 3.09950   #>  NA's   :100        NA's   :100        NA's   :100"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-2-simple-miss-mi.html","id":"multiple-imputation","dir":"Articles","previous_headings":"","what":"Multiple Imputation","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"Perform appropriate multiple imputation approach deal missing values. example, impute multivariate missing data normal model.","code":"mi <- mice::mice(   df,   method = \"norm\",   m = 100,   print = FALSE,   seed = 42 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-2-simple-miss-mi.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-2-simple-miss-mi.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"can now fit model using sem() function lavaan. need deal missing values stage.","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-2-simple-miss-mi.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"fit lavaan object mi mids object can passed MCMI() function semmcci generate Monte Carlo confidence intervals using multiple imputation described Pesigan Cheung (2023).","code":"MCMI(fit, mi = mi, R = 20000L, alpha = 0.05, seed = 42) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>             est     se     R   2.5%  97.5% #> cp       0.2328 0.0299 20000 0.1741 0.2917 #> b        0.5113 0.0301 20000 0.4529 0.5701 #> a        0.4811 0.0287 20000 0.4241 0.5374 #> X~~X     1.0617 0.0495 20000 0.9650 1.1591 #> Y~~Y     0.5533 0.0272 20000 0.5005 0.6069 #> M~~M     0.7568 0.0361 20000 0.6856 0.8278 #> indirect 0.2460 0.0204 20000 0.2070 0.2864 #> direct   0.2328 0.0299 20000 0.1741 0.2917 #> total    0.4788 0.0285 20000 0.4236 0.5349"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-2-simple-miss-mi.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"Standardized Monte Carlo Confidence intervals can generated passing result MCMI() function MCStd() function.","code":"fit <- sem(data = df, model = model) unstd <- MCMI(fit, mi = mi, R = 20000L, alpha = 0.05, seed = 42) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2450 0.0307 20000 0.1802 0.3000 #> b        0.5189 0.0277 20000 0.4587 0.5663 #> a        0.5031 0.0260 20000 0.4429 0.5454 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y     0.5429 0.0250 20000 0.5071 0.6053 #> M~~M     0.7469 0.0258 20000 0.7026 0.8038 #> indirect 0.2610 0.0190 20000 0.2168 0.2915 #> direct   0.2450 0.0307 20000 0.1802 0.3000 #> total    0.5060 0.0261 20000 0.4416 0.5444"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/example-5-composite-reliability.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 5: Composite Reliability","text":"Assuming latent variable variance constrained one, omega total reliability coefficient given \\[   \\omega_{\\mathrm{total}}   =   \\frac{   \\left(   \\sum_{= 1}^{k}   \\lambda_{}   \\right)^2   }{   \\left(   \\sum_{= 1}^{k}   \\lambda_{}   \\right)^2   +   \\sum_{= 1}^{k}   \\theta_{\\varepsilon_{ii}}   } \\] \\(\\lambda_{}\\) factor loading item \\(\\), \\(\\theta_{\\varepsilon_{ii}}\\) residual variance item \\(\\), \\(k\\) number items particular latent variable. model specification , variances latent variables eta1, eta2, eta3 constrained one, relevant parameters labeled particularly factor loadings error variances, omega total reliability coefficient per latent variable defined using := operator.","code":"model <- \"   # fix latent variable variances to 1   eta1 ~~ 1 * eta1   eta2 ~~ 1 * eta2   eta3 ~~ 1 * eta3   # factor loadings   eta1 =~ NA * x1 + l11 * x1 + l12 * x2 + l13 * x3   eta2 =~ NA * x4 + l24 * x4 + l25 * x5 + l26 * x6   eta3 =~ NA * x7 + l37 * x7 + l38 * x8 + l39 * x9   # error variances   x1 ~~ t1 * x1   x2 ~~ t2 * x2   x3 ~~ t3 * x3   x4 ~~ t4 * x4   x5 ~~ t5 * x5   x6 ~~ t6 * x6   x7 ~~ t7 * x7   x8 ~~ t8 * x8   x9 ~~ t9 * x9   # composite reliability   omega1 := (l11 + l12 + l13)^2 / ((l11 + l12 + l13)^2 + (t1 + t2 + t3))   omega2 := (l24 + l25 + l26)^2 / ((l24 + l25 + l26)^2 + (t4 + t5 + t6))   omega3 := (l37 + l38 + l39)^2 / ((l37 + l38 + l39)^2 + (t7 + t8 + t9)) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example-5-composite-reliability.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 5: Composite Reliability","text":"can now fit model using cfa() function lavaan.","code":"fit <- cfa(model = model, data = HolzingerSwineford1939)"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-5-composite-reliability.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"Model Fitting","what":"Monte Carlo Confidence Intervals","title":"Example 5: Composite Reliability","text":"fit lavaan object can passed MC() function generate Monte Carlo confidence intervals.","code":"MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>               est     se     R   2.5%  97.5% #> eta1~~eta1 1.0000 0.0000 20000 1.0000 1.0000 #> eta2~~eta2 1.0000 0.0000 20000 1.0000 1.0000 #> eta3~~eta3 1.0000 0.0000 20000 1.0000 1.0000 #> l11        0.8996 0.0810 20000 0.7407 1.0565 #> l12        0.4979 0.0776 20000 0.3465 0.6476 #> l13        0.6562 0.0738 20000 0.5097 0.7990 #> l24        0.9897 0.0564 20000 0.8782 1.1004 #> l25        1.1016 0.0624 20000 0.9807 1.2251 #> l26        0.9166 0.0539 20000 0.8114 1.0227 #> l37        0.6195 0.0692 20000 0.4844 0.7536 #> l38        0.7309 0.0659 20000 0.6019 0.8599 #> l39        0.6700 0.0646 20000 0.5425 0.7961 #> t1         0.5491 0.1130 20000 0.3269 0.7685 #> t2         1.1338 0.1025 20000 0.9325 1.3343 #> t3         0.8443 0.0902 20000 0.6703 1.0221 #> t4         0.3712 0.0482 20000 0.2776 0.4668 #> t5         0.4463 0.0584 20000 0.3332 0.5606 #> t6         0.3562 0.0429 20000 0.2725 0.4410 #> t7         0.7994 0.0807 20000 0.6430 0.9566 #> t8         0.4877 0.0744 20000 0.3410 0.6330 #> t9         0.5661 0.0705 20000 0.4271 0.7021 #> eta1~~eta2 0.4585 0.0637 20000 0.3336 0.5837 #> eta1~~eta3 0.4705 0.0726 20000 0.3284 0.6126 #> eta2~~eta3 0.2830 0.0688 20000 0.1477 0.4173 #> omega1     0.6253 0.0368 20000 0.5465 0.6910 #> omega2     0.8852 0.0116 20000 0.8602 0.9058 #> omega3     0.6878 0.0313 20000 0.6219 0.7432"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-1-std-regression.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MCStd Function Use Case 1: Standardized Regression Coefficients","text":"example, use data Kwan & Chan (2011) child’s reading ability (\\(Y_{1}\\)) regressed parental occupational status (\\(X_{1}\\)), parental educational level (\\(X_{2}\\)), child’s home possession (\\(X_{3}\\)) \\[     Y_{1}     =     \\alpha_{1}     +     \\gamma_{1}     X_{1}     +     \\gamma_{2}     X_{2}     +     \\gamma_{3}     X_{3}     +     \\zeta_{1} . \\] Note \\(\\zeta_{1}\\) stochastic error term expected value zero finite variance \\(\\psi_{1}\\), \\(\\alpha_{1}\\) intercept, \\(\\gamma_{1}\\), \\(\\gamma_{2}\\), \\(\\gamma_{3}\\) regression coefficients. Three-Regressor Multiple Regression Model (Covariance Structure)","code":"covs #>           Y1       X1      X2      X3 #> Y1 6088.8281 271.1429 49.5848 20.0337 #> X1  271.1429 226.2577 29.9232  4.8812 #> X2   49.5848  29.9232  9.0692  1.0312 #> X3   20.0337   4.8812  1.0312  0.8371 nobs #> [1] 200"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-1-std-regression.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"MCStd Function Use Case 1: Standardized Regression Coefficients","text":"regress Y1 X1, X2, X3.","code":"model <- \"   Y1 ~ X1 + X2 + X3 \""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-1-std-regression.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"MCStd Function Use Case 1: Standardized Regression Coefficients","text":"can now fit model using sem() function lavaan mimic = \"eqs\" ensure compatibility results Kwan & Chan (2011). Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(   model = model, mimic = \"eqs\", fixed.x = FALSE,   sample.cov = covs, sample.nobs = nobs )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-1-std-regression.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"MCStd Function Use Case 1: Standardized Regression Coefficients","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function.","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>           est     se     R    2.5%  97.5% #> Y1~X1  0.1207 0.0904 20000 -0.0572 0.2967 #> Y1~X2  0.0491 0.0911 20000 -0.1306 0.2272 #> Y1~X3  0.2194 0.0712 20000  0.0764 0.3544 #> Y1~~Y1 0.9002 0.0405 20000  0.8022 0.9585 #> X1~~X1 1.0000 0.0000 20000  1.0000 1.0000 #> X1~~X2 0.6606 0.0403 20000  0.5756 0.7341 #> X1~~X3 0.3547 0.0628 20000  0.2258 0.4738 #> X2~~X2 1.0000 0.0000 20000  1.0000 1.0000 #> X2~~X3 0.3743 0.0619 20000  0.2494 0.4918 #> X3~~X3 1.0000 0.0000 20000  1.0000 1.0000"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-2-difference-regression-coefficients.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MCStd Function Use Case 2: Difference of Standardized Regression Coefficients","text":"example, use data Kwan & Chan (2011) child’s reading ability (\\(Y_{1}\\)) regressed parental occupational status (\\(X_{1}\\)), parental educational level (\\(X_{2}\\)), child’s home possession (\\(X_{3}\\)) \\[     Y_{1}     =     \\alpha_{1}     +     \\gamma_{1}     X_{1}     +     \\gamma_{2}     X_{2}     +     \\gamma_{3}     X_{3}     +     \\zeta_{1} . \\] Note \\(\\zeta_{1}\\) stochastic error term expected value zero finite variance \\(\\psi_{1}\\), \\(\\alpha_{1}\\) intercept, \\(\\gamma_{1}\\), \\(\\gamma_{2}\\), \\(\\gamma_{3}\\) regression coefficients. Three-Regressor Multiple Regression Model (Covariance Structure)","code":"#>           Y1       X1      X2      X3 #> Y1 6088.8281 271.1429 49.5848 20.0337 #> X1  271.1429 226.2577 29.9232  4.8812 #> X2   49.5848  29.9232  9.0692  1.0312 #> X3   20.0337   4.8812  1.0312  0.8371 covs #>           Y1       X1      X2      X3 #> Y1 6088.8281 271.1429 49.5848 20.0337 #> X1  271.1429 226.2577 29.9232  4.8812 #> X2   49.5848  29.9232  9.0692  1.0312 #> X3   20.0337   4.8812  1.0312  0.8371 nobs #> [1] 200"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-2-difference-regression-coefficients.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"MCStd Function Use Case 2: Difference of Standardized Regression Coefficients","text":"regress Y1 X1, X2, X3. label regression coefficients gamma1, gamma2, gamma3. specify difference coefficients using := operator.","code":"model <- \"   Y1 ~ gamma1 * X1 + gamma2 * X2 + gamma3 * X3   gamma12 := gamma1 - gamma2   gamma13 := gamma1 - gamma3   gamma23 := gamma2 - gamma3 \""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-2-difference-regression-coefficients.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"MCStd Function Use Case 2: Difference of Standardized Regression Coefficients","text":"can now fit model using sem() function lavaan mimic = \"eqs\" ensure compatibility results Kwan & Chan (2011). Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(   model = model, mimic = \"eqs\", fixed.x = FALSE,   sample.cov = covs, sample.nobs = nobs )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-2-difference-regression-coefficients.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"MCStd Function Use Case 2: Difference of Standardized Regression Coefficients","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function.","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R    2.5%  97.5% #> gamma1   0.1207 0.0894 20000 -0.0570 0.2933 #> gamma2   0.0491 0.0908 20000 -0.1312 0.2246 #> gamma3   0.2194 0.0717 20000  0.0758 0.3563 #> Y1~~Y1   0.9002 0.0405 20000  0.8012 0.9588 #> X1~~X1   1.0000 0.0000 20000  1.0000 1.0000 #> X1~~X2   0.6606 0.0409 20000  0.5743 0.7343 #> X1~~X3   0.3547 0.0629 20000  0.2276 0.4732 #> X2~~X2   1.0000 0.0000 20000  1.0000 1.0000 #> X2~~X3   0.3743 0.0614 20000  0.2479 0.4882 #> X3~~X3   1.0000 0.0000 20000  1.0000 1.0000 #> gamma12  0.0716 0.1614 20000 -0.2436 0.3866 #> gamma13 -0.0987 0.1246 20000 -0.3425 0.1460 #> gamma23 -0.1703 0.1277 20000 -0.4193 0.0820"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-3-rsqr.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MCStd Function Use Case 3: R-Squared and Adjusted R-Squared","text":"example, use data Kwan & Chan (2011) child’s reading ability (\\(Y_{1}\\)) regressed home educational resources home educational resources (\\(Y_{2}\\)) regressed parental occupational status (\\(X_{1}\\)), parental educational level (\\(X_{2}\\)), child’s home possession (\\(X_{3}\\)) \\[     Y_{1}     =     \\alpha_{1}     +     \\beta_{1}     Y_{2}     +     \\zeta_{1} , \\] \\[     Y_{2}     =     \\alpha_{2}     +     \\gamma_{1}     X_{1}     +     \\gamma_{2}     X_{2}     +     \\gamma_{3}     X_{3}     +     \\zeta_{2} . \\] Note \\(\\zeta_{1}\\) \\(\\zeta_{2}\\) stochastic error terms expected value zero finite variance \\(\\psi_{1}\\) \\(\\psi_{2}\\), \\(\\alpha_{1}\\) \\(\\alpha_{2}\\) intercepts, \\(\\beta_{1}\\), \\(\\gamma_{1}\\), \\(\\gamma_{2}\\), \\(\\gamma_{3}\\) regression coefficients. Mediation Model (Covariance Structure)","code":"covs #>           Y1      Y2       X1      X2      X3 #> Y1 6088.8281 15.7012 271.1429 49.5848 20.0337 #> Y2   15.7012  0.7084   1.9878  1.0043  0.2993 #> X1  271.1429  1.9878 226.2577 29.9232  4.8812 #> X2   49.5848  1.0043  29.9232  9.0692  1.0312 #> X3   20.0337  0.2993   4.8812  1.0312  0.8371 nobs #> [1] 200"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-3-rsqr.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"MCStd Function Use Case 3: R-Squared and Adjusted R-Squared","text":"regress Y1 Y2 Y2 X1, X2, X3. label error variances psi1 psi2. \\(R^{2}\\) \\(\\bar{R}^{2}\\) defined using := operator lavaan model syntax using following equations \\[     R^{2}     =     1 - \\psi^{\\ast} \\] \\[     \\bar{R}^{2}     =     1     -     \\left(     \\frac{n - 1}{n - p + 1}     \\right)     \\left(     1 - R^2     \\right) \\] \\(\\psi^{\\ast}\\) standardized error variance, \\(n\\) sample size, \\(p\\) number regressor variables.","code":"model <- \"   Y1 ~ Y2   Y2 ~ X1 + X2 + X3   Y1 ~~ psi1 * Y1   Y2 ~~ psi2 * Y2   rsq1 := 1 - psi1   rsqbar1 := 1 - (     (200 - 1) / (200 - 1 + 1)   ) * (     1 - rsq1   )   rsq2 := 1 - psi2   rsqbar2 := 1 - (     (200 - 1) / (200 - 3 + 1)   ) * (     1 - rsq2   ) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-3-rsqr.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"MCStd Function Use Case 3: R-Squared and Adjusted R-Squared","text":"can now fit model using sem() function lavaan mimic = \"eqs\" ensure compatibility results Kwan & Chan (2011). Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(   model = model, mimic = \"eqs\", fixed.x = FALSE,   sample.cov = covs, sample.nobs = nobs )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-3-rsqr.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"MCStd Function Use Case 3: R-Squared and Adjusted R-Squared","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function. Note: parameterization \\(R^{2}\\) \\(\\bar{R}^{2}\\) interpreted using output MCStd() function since input functions defined := require standardized estimates.","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R    2.5%   97.5% #> Y1~Y2    0.2391 0.0673 20000  0.1045  0.3692 #> Y2~X1   -0.2449 0.0813 20000 -0.4027 -0.0823 #> Y2~X2    0.4419 0.0791 20000  0.2831  0.5913 #> Y2~X3    0.3101 0.0641 20000  0.1817  0.4322 #> psi1     0.9428 0.0326 20000  0.8637  0.9891 #> psi2     0.7428 0.0534 20000  0.6258  0.8352 #> X1~~X1   1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2   0.6606 0.0410 20000  0.5741  0.7349 #> X1~~X3   0.3547 0.0629 20000  0.2262  0.4737 #> X2~~X2   1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3   0.3743 0.0619 20000  0.2484  0.4901 #> X3~~X3   1.0000 0.0000 20000  1.0000  1.0000 #> rsq1     0.0572 0.0326 20000  0.0109  0.1363 #> rsqbar1  0.0619 0.0324 20000  0.0159  0.1406 #> rsq2     0.2572 0.0534 20000  0.1648  0.3742 #> rsqbar2  0.2534 0.0536 20000  0.1606  0.3710"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-4-difference-regression-coefficients-multigroup.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MCStd Function Use Case 4: Difference of Standardized Regression Coefficients in Multiple Groups","text":"example, use data Kwan & Chan (2014) three groups (Hong Kong, Japan, Korea) child’s reading ability (\\(Y_{1}\\)) regressed parental occupational status (\\(X_{1}\\)), parental educational level (\\(X_{2}\\)), child’s home possession (\\(X_{3}\\)) \\[     Y_{1}     =     \\alpha_{1}     +     \\gamma_{1}     X_{1}     +     \\gamma_{2}     X_{2}     +     \\gamma_{3}     X_{3}     +     \\zeta_{1} . \\] Note \\(\\zeta_{1}\\) stochastic error term expected value zero finite variance \\(\\psi_{1}\\), \\(\\alpha_{1}\\) intercept, \\(\\gamma_{1}\\), \\(\\gamma_{2}\\), \\(\\gamma_{3}\\) regression coefficients. Three-Regressor Multiple Regression Model (Covariance Structure) Covariance Matrix Hong Kong Covariance Matrix Japan Covariance Matrix Korea","code":"knitr::kable(   x = covs_hongkong, digits = 4,   caption = \"Covariance Matrix for Hong Kong\" ) nobs_hongkong #> [1] 4625 knitr::kable(   x = covs_japan, digits = 4,   caption = \"Covariance Matrix for Japan\" ) nobs_japan #> [1] 5943 knitr::kable(   x = covs_korea, digits = 4,   caption = \"Covariance Matrix for Korea\" ) nobs_korea #> [1] 5151"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-4-difference-regression-coefficients-multigroup.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"MCStd Function Use Case 4: Difference of Standardized Regression Coefficients in Multiple Groups","text":"regress Y1 X1, X2, X3. label regression coefficient \\(\\gamma_{1}\\) three groups gamma1.g1, gamma1.g2, gamma1.g3, \\(\\gamma_{2}\\) three groups gamma2.g1, gamma2.g2, gamma2.g3, \\(\\gamma_{3}\\) three groups gamma3.g1, gamma3.g2, gamma3.g3.","code":"model <- \"   Y1 ~ c(gamma1.g1, gamma1.g2, gamma1.g3) * X1   Y1 ~ c(gamma2.g1, gamma2.g2, gamma2.g3) * X2   Y1 ~ c(gamma3.g1, gamma3.g2, gamma3.g3) * X3   gamma1.g12 := gamma1.g1 - gamma1.g2   gamma1.g13 := gamma1.g1 - gamma1.g3   gamma1.g23 := gamma1.g2 - gamma1.g3   gamma2.g12 := gamma2.g1 - gamma2.g2   gamma2.g13 := gamma2.g1 - gamma2.g3   gamma2.g23 := gamma2.g2 - gamma2.g3   gamma3.g12 := gamma3.g1 - gamma3.g2   gamma3.g13 := gamma3.g1 - gamma3.g3   gamma3.g23 := gamma3.g2 - gamma3.g3 \""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-4-difference-regression-coefficients-multigroup.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"MCStd Function Use Case 4: Difference of Standardized Regression Coefficients in Multiple Groups","text":"can now fit model using sem() function lavaan mimic = \"eqs\" ensure compatibility results Kwan & Chan (2011). Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(   model = model, mimic = \"eqs\", fixed.x = FALSE,   sample.cov = list(covs_hongkong, covs_japan, covs_korea),   sample.nobs = list(nobs_hongkong, nobs_japan, nobs_korea) )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-4-difference-regression-coefficients-multigroup.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"MCStd Function Use Case 4: Difference of Standardized Regression Coefficients in Multiple Groups","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function.","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>                est     se     R    2.5%   97.5% #> gamma1.g1   0.0568 0.0192 20000  0.0193  0.0945 #> gamma2.g1   0.1985 0.0186 20000  0.1623  0.2350 #> gamma3.g1   0.2500 0.0152 20000  0.2200  0.2800 #> Y1~~Y1      0.8215 0.0103 20000  0.8009  0.8409 #> X1~~X1      1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2      0.6917 0.0077 20000  0.6762  0.7067 #> X1~~X3      0.4702 0.0114 20000  0.4478  0.4927 #> X2~~X2      1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3      0.4471 0.0118 20000  0.4240  0.4702 #> X3~~X3      1.0000 0.0000 20000  1.0000  1.0000 #> gamma1.g2   0.1390 0.0164 20000  0.1069  0.1713 #> gamma2.g2   0.1792 0.0157 20000  0.1485  0.2102 #> gamma3.g2   0.1688 0.0139 20000  0.1415  0.1963 #> Y1~~Y1.g2   0.8371 0.0089 20000  0.8190  0.8540 #> X1~~X1.g2   1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2.g2   0.6525 0.0074 20000  0.6379  0.6669 #> X1~~X3.g2   0.5023 0.0097 20000  0.4829  0.5210 #> X2~~X2.g2   1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3.g2   0.4452 0.0104 20000  0.4246  0.4654 #> X3~~X3.g2   1.0000 0.0000 20000  1.0000  1.0000 #> gamma1.g3   0.0863 0.0169 20000  0.0527  0.1192 #> gamma2.g3   0.2557 0.0162 20000  0.2235  0.2873 #> gamma3.g3   0.2289 0.0139 20000  0.2017  0.2559 #> Y1~~Y1.g3   0.7761 0.0102 20000  0.7554  0.7951 #> X1~~X1.g3   1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2.g3   0.6580 0.0079 20000  0.6423  0.6732 #> X1~~X3.g3   0.4738 0.0108 20000  0.4521  0.4945 #> X2~~X2.g3   1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3.g3   0.4353 0.0113 20000  0.4127  0.4572 #> X3~~X3.g3   1.0000 0.0000 20000  1.0000  1.0000 #> gamma1.g12 -0.0821 0.0251 20000 -0.1314 -0.0327 #> gamma1.g13 -0.0294 0.0258 20000 -0.0793  0.0215 #> gamma1.g23  0.0527 0.0235 20000  0.0064  0.0989 #> gamma2.g12  0.0193 0.0243 20000 -0.0279  0.0669 #> gamma2.g13 -0.0572 0.0248 20000 -0.1062 -0.0088 #> gamma2.g23 -0.0765 0.0227 20000 -0.1207 -0.0323 #> gamma3.g12  0.0811 0.0205 20000  0.0408  0.1219 #> gamma3.g13  0.0211 0.0205 20000 -0.0190  0.0613 #> gamma3.g23 -0.0601 0.0196 20000 -0.0991 -0.0218"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-5-difference-rsq-multigroup.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MCStd Function Use Case 5: Difference of R-Squared in Multiple Groups","text":"example, use data Kwan & Chan (2014) three groups (Hong Kong, Japan, Korea) child’s reading ability (\\(Y_{1}\\)) regressed parental occupational status (\\(X_{1}\\)), parental educational level (\\(X_{2}\\)), child’s home possession (\\(X_{3}\\)) \\[     Y_{1}     =     \\alpha_{1}     +     \\gamma_{1}     X_{1}     +     \\gamma_{2}     X_{2}     +     \\gamma_{3}     X_{3}     +     \\zeta_{1} . \\] Note \\(\\zeta_{1}\\) stochastic error term expected value zero finite variance \\(\\psi_{1}\\), \\(\\alpha_{1}\\) intercept, \\(\\gamma_{1}\\), \\(\\gamma_{2}\\), \\(\\gamma_{3}\\) regression coefficients. Three-Regressor Multiple Regression Model (Covariance Structure) Covariance Matrix Hong Kong Covariance Matrix Japan Covariance Matrix Korea","code":"knitr::kable(   x = covs_hongkong, digits = 4,   caption = \"Covariance Matrix for Hong Kong\" ) nobs_hongkong #> [1] 4625 knitr::kable(   x = covs_japan, digits = 4,   caption = \"Covariance Matrix for Japan\" ) nobs_japan #> [1] 5943 nobs_korea <- 5151 covs_korea <- matrix(   data = c(     8187.6921, 31.6266, 37.3062, 30.9021,     31.6266, 0.9271, 0.6338, 0.4088,     37.3062, 0.6338, 1.0007, 0.3902,     30.9021, 0.4088, 0.3902, 0.8031   ),   nrow = 4 ) colnames(covs_korea) <- rownames(covs_korea) <- varnames knitr::kable(   x = covs_korea, digits = 4,   caption = \"Covariance Matrix for Korea\" )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-5-difference-rsq-multigroup.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"MCStd Function Use Case 5: Difference of R-Squared in Multiple Groups","text":"regress Y1 X1, X2, X3. label error variance \\(\\zeta_{1}\\) three groups psi1.g1, psi1.g2, psi1.g3. \\(R^{2}\\) defined using := operator lavaan model syntax using following equation \\[     R^{2}     =     1 - \\psi^{\\ast} \\] \\(\\psi^{\\ast}\\) standardized error variance.","code":"model <- \"   Y1 ~ X1 + X2 + X3   Y1 ~~ c(psi1.g1, psi1.g2, psi1.g3) * Y1   rsq.g1 := 1 - psi1.g1   rsq.g2 := 1 - psi1.g2   rsq.g3 := 1 - psi1.g3   rsq.g12 := rsq.g1 - rsq.g2   rsq.g13 := rsq.g1 - rsq.g3   rsq.g23 := rsq.g2 - rsq.g3 \""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-5-difference-rsq-multigroup.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"MCStd Function Use Case 5: Difference of R-Squared in Multiple Groups","text":"can now fit model using sem() function lavaan mimic = \"eqs\" ensure compatibility results Kwan & Chan (2014). Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(   model = model, mimic = \"eqs\", fixed.x = FALSE,   sample.cov = list(covs_hongkong, covs_japan, covs_korea),   sample.nobs = list(nobs_hongkong, nobs_japan, nobs_korea) )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-5-difference-rsq-multigroup.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"MCStd Function Use Case 5: Difference of R-Squared in Multiple Groups","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function. Note: parameterization \\(R^{2}\\) interpreted using output MCStd() function since input functions defined := require standardized estimates.","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>               est     se     R    2.5%   97.5% #> Y1~X1      0.0568 0.0191 20000  0.0191  0.0946 #> Y1~X2      0.1985 0.0186 20000  0.1619  0.2345 #> Y1~X3      0.2500 0.0150 20000  0.2207  0.2794 #> psi1.g1    0.8215 0.0102 20000  0.8009  0.8409 #> X1~~X1     1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2     0.6917 0.0077 20000  0.6761  0.7066 #> X1~~X3     0.4702 0.0115 20000  0.4471  0.4924 #> X2~~X2     1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3     0.4471 0.0119 20000  0.4235  0.4699 #> X3~~X3     1.0000 0.0000 20000  1.0000  1.0000 #> Y1~X1.g2   0.1390 0.0163 20000  0.1066  0.1705 #> Y1~X2.g2   0.1792 0.0158 20000  0.1483  0.2102 #> Y1~X3.g2   0.1688 0.0138 20000  0.1419  0.1959 #> psi1.g2    0.8371 0.0087 20000  0.8194  0.8536 #> X1~~X1.g2  1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2.g2  0.6525 0.0074 20000  0.6378  0.6669 #> X1~~X3.g2  0.5023 0.0097 20000  0.4829  0.5212 #> X2~~X2.g2  1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3.g2  0.4452 0.0104 20000  0.4246  0.4653 #> X3~~X3.g2  1.0000 0.0000 20000  1.0000  1.0000 #> Y1~X1.g3   0.0863 0.0170 20000  0.0530  0.1197 #> Y1~X2.g3   0.2557 0.0163 20000  0.2242  0.2877 #> Y1~X3.g3   0.2289 0.0139 20000  0.2011  0.2560 #> psi1.g3    0.7761 0.0101 20000  0.7558  0.7953 #> X1~~X1.g3  1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2.g3  0.6580 0.0079 20000  0.6421  0.6733 #> X1~~X3.g3  0.4738 0.0108 20000  0.4525  0.4946 #> X2~~X2.g3  1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3.g3  0.4353 0.0113 20000  0.4129  0.4570 #> X3~~X3.g3  1.0000 0.0000 20000  1.0000  1.0000 #> rsq.g1     0.1785 0.0102 20000  0.1591  0.1991 #> rsq.g2     0.1629 0.0087 20000  0.1464  0.1806 #> rsq.g3     0.2239 0.0101 20000  0.2047  0.2442 #> rsq.g12    0.0155 0.0134 20000 -0.0107  0.0417 #> rsq.g13   -0.0455 0.0144 20000 -0.0735 -0.0173 #> rsq.g23   -0.0610 0.0133 20000 -0.0870 -0.0349"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"semmcci: Methods (MI)","text":"","code":"summary(df) #>        X                  M                  Y            #>  Min.   :-3.19956   Min.   :-3.37128   Min.   :-3.61432   #>  1st Qu.:-0.63268   1st Qu.:-0.70516   1st Qu.:-0.66921   #>  Median : 0.02823   Median : 0.02825   Median :-0.04833   #>  Mean   : 0.00269   Mean   :-0.01992   Mean   :-0.01538   #>  3rd Qu.: 0.65754   3rd Qu.: 0.65240   3rd Qu.: 0.65293   #>  Max.   : 3.47091   Max.   : 2.93497   Max.   : 3.09950   #>  NA's   :100        NA's   :100        NA's   :100"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"multiple-imputation","dir":"Articles","previous_headings":"","what":"Multiple Imputation","title":"semmcci: Methods (MI)","text":"Perform appropriate multiple imputation approach deal missing values. example, impute multivariate missing data normal model.","code":"mi <- mice::mice(   df,   method = \"norm\",   m = 100,   print = FALSE,   seed = 42 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"semmcci: Methods (MI)","text":"","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"semmcci: Methods (MI)","text":"","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"semmcci: Methods (MI)","text":"","code":"unstd <- MCMI(fit, mi = mi, R = 20000L, alpha = 0.05)"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"print","dir":"Articles","previous_headings":"Methods","what":"print","title":"semmcci: Methods (MI)","text":"","code":"print(unstd) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>             est     se     R   2.5%  97.5% #> cp       0.2328 0.0297 20000 0.1748 0.2913 #> b        0.5113 0.0298 20000 0.4528 0.5701 #> a        0.4811 0.0288 20000 0.4246 0.5379 #> X~~X     1.0617 0.0494 20000 0.9654 1.1593 #> Y~~Y     0.5533 0.0272 20000 0.4998 0.6071 #> M~~M     0.7568 0.0365 20000 0.6856 0.8295 #> indirect 0.2460 0.0203 20000 0.2077 0.2874 #> direct   0.2328 0.0297 20000 0.1748 0.2913 #> total    0.4788 0.0284 20000 0.4231 0.5349"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"summary","dir":"Articles","previous_headings":"Methods","what":"summary","title":"semmcci: Methods (MI)","text":"","code":"summary(unstd) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>             est     se     R   2.5%  97.5% #> cp       0.2328 0.0297 20000 0.1748 0.2913 #> b        0.5113 0.0298 20000 0.4528 0.5701 #> a        0.4811 0.0288 20000 0.4246 0.5379 #> X~~X     1.0617 0.0494 20000 0.9654 1.1593 #> Y~~Y     0.5533 0.0272 20000 0.4998 0.6071 #> M~~M     0.7568 0.0365 20000 0.6856 0.8295 #> indirect 0.2460 0.0203 20000 0.2077 0.2874 #> direct   0.2328 0.0297 20000 0.1748 0.2913 #> total    0.4788 0.0284 20000 0.4231 0.5349"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"coef","dir":"Articles","previous_headings":"Methods","what":"coef","title":"semmcci: Methods (MI)","text":"","code":"coef(unstd) #>        cp         b         a      X~~X      Y~~Y      M~~M  indirect    direct  #> 0.2328242 0.5113353 0.4810732 1.0617011 0.5533052 0.7567771 0.2459664 0.2328242  #>     total  #> 0.4787907"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"vcov","dir":"Articles","previous_headings":"Methods","what":"vcov","title":"semmcci: Methods (MI)","text":"","code":"vcov(unstd) #>                     cp             b             a          X~~X          Y~~Y #> cp        8.795534e-04 -4.745443e-04 -2.872587e-05  1.927078e-05 -1.914381e-05 #> b        -4.745443e-04  8.882796e-04 -2.476958e-05 -2.107759e-05 -2.857715e-05 #> a        -2.872587e-05 -2.476958e-05  8.313573e-04 -3.850428e-05  3.098397e-05 #> X~~X      1.927078e-05 -2.107759e-05 -3.850428e-05  2.439055e-03 -1.306592e-05 #> Y~~Y     -1.914381e-05 -2.857715e-05  3.098397e-05 -1.306592e-05  7.378979e-04 #> M~~M     -1.123208e-05 -1.063276e-05 -5.684545e-05  8.044242e-06 -4.636373e-06 #> indirect -2.432728e-04  4.151121e-04  4.134516e-04 -2.950108e-05  2.403538e-06 #> direct    8.795534e-04 -4.745443e-04 -2.872587e-05  1.927078e-05 -1.914381e-05 #> total     6.362806e-04 -5.943222e-05  3.847258e-04 -1.023030e-05 -1.674027e-05 #>                   M~~M      indirect        direct         total #> cp       -1.123208e-05 -2.432728e-04  8.795534e-04  6.362806e-04 #> b        -1.063276e-05  4.151121e-04 -4.745443e-04 -5.943222e-05 #> a        -5.684545e-05  4.134516e-04 -2.872587e-05  3.847258e-04 #> X~~X      8.044242e-06 -2.950108e-05  1.927078e-05 -1.023030e-05 #> Y~~Y     -4.636373e-06  2.403538e-06 -1.914381e-05 -1.674027e-05 #> M~~M      1.332845e-03 -3.397134e-05 -1.123208e-05 -4.520342e-05 #> indirect -3.397134e-05  4.122025e-04 -2.432728e-04  1.689296e-04 #> direct   -1.123208e-05 -2.432728e-04  8.795534e-04  6.362806e-04 #> total    -4.520342e-05  1.689296e-04  6.362806e-04  8.052102e-04"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"confint","dir":"Articles","previous_headings":"Methods","what":"confint","title":"semmcci: Methods (MI)","text":"","code":"confint(unstd, level = 0.95) #>              2.5 %    97.5 % #> cp       0.1747951 0.2913280 #> b        0.4528088 0.5700870 #> a        0.4245864 0.5378834 #> X~~X     0.9654118 1.1593089 #> Y~~Y     0.4997698 0.6070620 #> M~~M     0.6856329 0.8294769 #> indirect 0.2077228 0.2873562 #> direct   0.1747951 0.2913280 #> total    0.4231250 0.5349287"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"semmcci: Methods (MI)","text":"","code":"fit <- sem(data = df, model = model, fixed.x = FALSE) unstd <- MCMI(fit, mi = mi, R = 20000L, alpha = 0.05) std <- MCStd(unstd, alpha = 0.05)"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"print-1","dir":"Articles","previous_headings":"Methods","what":"print","title":"semmcci: Methods (MI)","text":"","code":"print(std) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2450 0.0303 20000 0.1812 0.2997 #> b        0.5189 0.0273 20000 0.4583 0.5660 #> a        0.5031 0.0260 20000 0.4429 0.5448 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y     0.5429 0.0250 20000 0.5077 0.6047 #> M~~M     0.7469 0.0257 20000 0.7032 0.8038 #> indirect 0.2610 0.0189 20000 0.2174 0.2914 #> direct   0.2450 0.0303 20000 0.1812 0.2997 #> total    0.5060 0.0260 20000 0.4426 0.5439"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"summary-1","dir":"Articles","previous_headings":"Methods","what":"summary","title":"semmcci: Methods (MI)","text":"","code":"summary(std) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2450 0.0303 20000 0.1812 0.2997 #> b        0.5189 0.0273 20000 0.4583 0.5660 #> a        0.5031 0.0260 20000 0.4429 0.5448 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y     0.5429 0.0250 20000 0.5077 0.6047 #> M~~M     0.7469 0.0257 20000 0.7032 0.8038 #> indirect 0.2610 0.0189 20000 0.2174 0.2914 #> direct   0.2450 0.0303 20000 0.1812 0.2997 #> total    0.5060 0.0260 20000 0.4426 0.5439"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"coef-1","dir":"Articles","previous_headings":"Methods","what":"coef","title":"semmcci: Methods (MI)","text":"","code":"coef(std) #>        cp         b         a      X~~X      Y~~Y      M~~M  indirect    direct  #> 0.2449797 0.5188628 0.5030687 1.0000000 0.5428754 0.7469219 0.2610236 0.2449797  #>     total  #> 0.5060033"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"vcov-1","dir":"Articles","previous_headings":"Methods","what":"vcov","title":"semmcci: Methods (MI)","text":"","code":"vcov(std) #>                     cp             b             a          X~~X          Y~~Y #> cp        9.172584e-04 -6.001070e-04 -7.568631e-06 -1.687445e-20 -1.466540e-04 #> b        -6.001070e-04  7.480012e-04 -5.993571e-06  8.207087e-21 -3.493555e-04 #> a        -7.568631e-06 -5.993571e-06  6.747215e-04  8.532505e-21 -1.502979e-04 #> X~~X     -1.687445e-20  8.207087e-21  8.532505e-21  1.201224e-32  3.837692e-21 #> Y~~Y     -1.466540e-04 -3.493555e-04 -1.502979e-04  3.837692e-21  6.235588e-04 #> M~~M      7.462487e-06  6.060263e-06 -6.667339e-04 -8.502722e-21  1.483439e-04 #> indirect -3.010485e-04  3.670905e-04  3.432578e-04  7.819800e-21 -2.496572e-04 #> direct    9.172584e-04 -6.001070e-04 -7.568631e-06 -1.687445e-20 -1.466540e-04 #> total     6.162099e-04 -2.330165e-04  3.356892e-04 -9.054645e-21 -3.963112e-04 #>                   M~~M      indirect        direct         total #> cp        7.462487e-06 -3.010485e-04  9.172584e-04  6.162099e-04 #> b         6.060263e-06  3.670905e-04 -6.001070e-04 -2.330165e-04 #> a        -6.667339e-04  3.432578e-04 -7.568631e-06  3.356892e-04 #> X~~X     -8.502722e-21  7.819800e-21 -1.687445e-20 -9.054645e-21 #> Y~~Y      1.483439e-04 -2.496572e-04 -1.466540e-04 -3.963112e-04 #> M~~M      6.597352e-04 -3.391228e-04  7.462487e-06 -3.316603e-04 #> indirect -3.391228e-04  3.583029e-04 -3.010485e-04  5.725441e-05 #> direct    7.462487e-06 -3.010485e-04  9.172584e-04  6.162099e-04 #> total    -3.316603e-04  5.725441e-05  6.162099e-04  6.734643e-04"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"confint-1","dir":"Articles","previous_headings":"Methods","what":"confint","title":"semmcci: Methods (MI)","text":"","code":"confint(std, level = 0.95) #>              2.5 %    97.5 % #> cp       0.1811866 0.2997474 #> b        0.4583326 0.5659804 #> a        0.4429476 0.5447860 #> X~~X     1.0000000 1.0000000 #> Y~~Y     0.5076835 0.6046677 #> M~~M     0.7032082 0.8037975 #> indirect 0.2173634 0.2914329 #> direct   0.1811866 0.2997474 #> total    0.4425617 0.5439356"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"semmcci: Methods (MC)","text":"","code":"summary(df) #>        X                   M                   Y            #>  Min.   :-3.199558   Min.   :-3.371276   Min.   :-3.61432   #>  1st Qu.:-0.636035   1st Qu.:-0.692640   1st Qu.:-0.66146   #>  Median : 0.011377   Median : 0.007125   Median :-0.04726   #>  Mean   :-0.003207   Mean   :-0.023968   Mean   :-0.01677   #>  3rd Qu.: 0.651951   3rd Qu.: 0.647363   3rd Qu.: 0.62640   #>  Max.   : 3.470910   Max.   : 2.963216   Max.   : 3.09950 colMeans(df) #>            X            M            Y  #> -0.003206987 -0.023968103 -0.016774294 var(df) #>           X         M         Y #> X 1.0600162 0.5108780 0.5069458 #> M 0.5108780 0.9996606 0.6272104 #> Y 0.5069458 0.6272104 0.9837255"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"semmcci: Methods (MC)","text":"","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"semmcci: Methods (MC)","text":"","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"semmcci: Methods (MC)","text":"","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05)"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"print","dir":"Articles","previous_headings":"Methods","what":"print","title":"semmcci: Methods (MC)","text":"","code":"print(unstd) #> Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2333 0.0260 20000 0.1818 0.2838 #> b        0.5082 0.0270 20000 0.4553 0.5610 #> a        0.4820 0.0268 20000 0.4297 0.5351 #> Y~~Y     0.5462 0.0244 20000 0.4984 0.5939 #> M~~M     0.7527 0.0337 20000 0.6857 0.8181 #> X~~X     1.0590 0.0000 20000 1.0590 1.0590 #> indirect 0.2449 0.0188 20000 0.2093 0.2826 #> direct   0.2333 0.0260 20000 0.1818 0.2838 #> total    0.4782 0.0262 20000 0.4265 0.5293"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"summary","dir":"Articles","previous_headings":"Methods","what":"summary","title":"semmcci: Methods (MC)","text":"","code":"summary(unstd) #> Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2333 0.0260 20000 0.1818 0.2838 #> b        0.5082 0.0270 20000 0.4553 0.5610 #> a        0.4820 0.0268 20000 0.4297 0.5351 #> Y~~Y     0.5462 0.0244 20000 0.4984 0.5939 #> M~~M     0.7527 0.0337 20000 0.6857 0.8181 #> X~~X     1.0590 0.0000 20000 1.0590 1.0590 #> indirect 0.2449 0.0188 20000 0.2093 0.2826 #> direct   0.2333 0.0260 20000 0.1818 0.2838 #> total    0.4782 0.0262 20000 0.4265 0.5293"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"coef","dir":"Articles","previous_headings":"Methods","what":"coef","title":"semmcci: Methods (MC)","text":"","code":"coef(unstd) #>        cp         b         a      Y~~Y      M~~M      X~~X  indirect    direct  #> 0.2333230 0.5081833 0.4819530 0.5461589 0.7526879 1.0589562 0.2449205 0.2333230  #>     total  #> 0.4782435"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"vcov","dir":"Articles","previous_headings":"Methods","what":"vcov","title":"semmcci: Methods (MC)","text":"","code":"vcov(unstd) #>                     cp             b             a          Y~~Y          M~~M #> cp        6.757769e-04 -3.520016e-04 -4.321199e-06  1.383993e-06 -1.892754e-06 #> b        -3.520016e-04  7.266877e-04 -1.745212e-06 -5.260851e-06  3.603916e-06 #> a        -4.321199e-06 -1.745212e-06  7.168222e-04  5.918555e-06 -9.575957e-06 #> Y~~Y      1.383993e-06 -5.260851e-06  5.918555e-06  5.944920e-04  4.638930e-06 #> M~~M     -1.892754e-06  3.603916e-06 -9.575957e-06  4.638930e-06  1.136194e-03 #> X~~X      0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00 #> indirect -1.717711e-04  3.491551e-04  3.633339e-04  5.939050e-07 -2.993933e-06 #> direct    6.757769e-04 -3.520016e-04 -4.321199e-06  1.383993e-06 -1.892754e-06 #> total     5.040058e-04 -2.846513e-06  3.590127e-04  1.977898e-06 -4.886686e-06 #>          X~~X      indirect        direct         total #> cp          0 -1.717711e-04  6.757769e-04  5.040058e-04 #> b           0  3.491551e-04 -3.520016e-04 -2.846513e-06 #> a           0  3.633339e-04 -4.321199e-06  3.590127e-04 #> Y~~Y        0  5.939050e-07  1.383993e-06  1.977898e-06 #> M~~M        0 -2.993933e-06 -1.892754e-06 -4.886686e-06 #> X~~X        0  0.000000e+00  0.000000e+00  0.000000e+00 #> indirect    0  3.533088e-04 -1.717711e-04  1.815378e-04 #> direct      0 -1.717711e-04  6.757769e-04  5.040058e-04 #> total       0  1.815378e-04  5.040058e-04  6.855436e-04"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"confint","dir":"Articles","previous_headings":"Methods","what":"confint","title":"semmcci: Methods (MC)","text":"","code":"confint(unstd, level = 0.95) #>              2.5 %    97.5 % #> cp       0.1818105 0.2837885 #> b        0.4553083 0.5609936 #> a        0.4297123 0.5351099 #> Y~~Y     0.4984432 0.5939260 #> M~~M     0.6857066 0.8180873 #> X~~X     1.0589562 1.0589562 #> indirect 0.2092978 0.2826376 #> direct   0.1818105 0.2837885 #> total    0.4265010 0.5292830"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"semmcci: Methods (MC)","text":"","code":"fit <- sem(data = df, model = model, fixed.x = FALSE) unstd <- MC(fit, R = 20000L, alpha = 0.05) std <- MCStd(unstd, alpha = 0.05)"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"print-1","dir":"Articles","previous_headings":"Methods","what":"print","title":"semmcci: Methods (MC)","text":"","code":"print(std) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2422 0.0268 20000 0.1890 0.2940 #> b        0.5123 0.0246 20000 0.4631 0.5595 #> a        0.4963 0.0237 20000 0.4483 0.5419 #> Y~~Y     0.5558 0.0235 20000 0.5091 0.6018 #> M~~M     0.7537 0.0235 20000 0.7063 0.7990 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> indirect 0.2542 0.0174 20000 0.2206 0.2883 #> direct   0.2422 0.0268 20000 0.1890 0.2940 #> total    0.4964 0.0239 20000 0.4477 0.5419"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"summary-1","dir":"Articles","previous_headings":"Methods","what":"summary","title":"semmcci: Methods (MC)","text":"","code":"summary(std) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2422 0.0268 20000 0.1890 0.2940 #> b        0.5123 0.0246 20000 0.4631 0.5595 #> a        0.4963 0.0237 20000 0.4483 0.5419 #> Y~~Y     0.5558 0.0235 20000 0.5091 0.6018 #> M~~M     0.7537 0.0235 20000 0.7063 0.7990 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> indirect 0.2542 0.0174 20000 0.2206 0.2883 #> direct   0.2422 0.0268 20000 0.1890 0.2940 #> total    0.4964 0.0239 20000 0.4477 0.5419"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"coef-1","dir":"Articles","previous_headings":"Methods","what":"coef","title":"semmcci: Methods (MC)","text":"","code":"coef(std) #>        cp         b         a      Y~~Y      M~~M      X~~X  indirect    direct  #> 0.2422015 0.5122827 0.4962890 0.5557501 0.7536972 1.0000000 0.2542403 0.2422015  #>     total  #> 0.4964418"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"vcov-1","dir":"Articles","previous_headings":"Methods","what":"vcov","title":"semmcci: Methods (MC)","text":"","code":"vcov(std) #>                     cp             b             a          Y~~Y          M~~M #> cp        7.199870e-04 -4.648581e-04  1.056842e-05 -1.286767e-04 -1.070880e-05 #> b        -4.648581e-04  6.028984e-04  1.064840e-05 -3.030471e-04 -1.047933e-05 #> a         1.056842e-05  1.064840e-05  5.615477e-04 -1.627348e-04 -5.559287e-04 #> Y~~Y     -1.286767e-04 -3.030471e-04 -1.627348e-04  5.508118e-04  1.612867e-04 #> M~~M     -1.070880e-05 -1.047933e-05 -5.559287e-04  1.612867e-04  5.509976e-04 #> X~~X     -1.143630e-20 -1.828915e-20 -2.191676e-20  3.983358e-20  2.196039e-20 #> indirect -2.252942e-04  3.045084e-04  2.926370e-04 -2.333817e-04 -2.896939e-04 #> direct    7.199870e-04 -4.648581e-04  1.056842e-05 -1.286767e-04 -1.070880e-05 #> total     4.946928e-04 -1.603496e-04  3.032054e-04 -3.620584e-04 -3.004027e-04 #>                   X~~X      indirect        direct         total #> cp       -1.143630e-20 -2.252942e-04  7.199870e-04  4.946928e-04 #> b        -1.828915e-20  3.045084e-04 -4.648581e-04 -1.603496e-04 #> a        -2.191676e-20  2.926370e-04  1.056842e-05  3.032054e-04 #> Y~~Y      3.983358e-20 -2.333817e-04 -1.286767e-04 -3.620584e-04 #> M~~M      2.196039e-20 -2.896939e-04 -1.070880e-05 -3.004027e-04 #> X~~X      1.183351e-32 -2.019471e-20 -1.143630e-20 -3.163101e-20 #> indirect -2.019471e-20  3.011326e-04 -2.252942e-04  7.583834e-05 #> direct   -1.143630e-20 -2.252942e-04  7.199870e-04  4.946928e-04 #> total    -3.163101e-20  7.583834e-05  4.946928e-04  5.705311e-04"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"confint-1","dir":"Articles","previous_headings":"Methods","what":"confint","title":"semmcci: Methods (MC)","text":"","code":"confint(std, level = 0.95) #>              2.5 %    97.5 % #> cp       0.1890023 0.2939695 #> b        0.4630623 0.5595158 #> a        0.4483469 0.5419195 #> Y~~Y     0.5091026 0.6017803 #> M~~M     0.7063232 0.7989851 #> X~~X     1.0000000 1.0000000 #> indirect 0.2205638 0.2882612 #> direct   0.1890023 0.2939695 #> total    0.4477338 0.5419092"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/semmcci.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"can install CRAN release semmcci : can install development version semmcci GitHub :","code":"install.packages(\"semmcci\") if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"jeksterslab/semmcci\")"},{"path":"https://github.com/jeksterslab/semmcci/articles/semmcci.html","id":"the-monte-carlo-method","dir":"Articles","previous_headings":"","what":"The Monte Carlo Method","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"Monte Carlo method, sampling distribution parameter estimates \\(\\hat{\\boldsymbol{\\theta}}^{\\ast}\\) generated multivariate normal distribution using parameter estimates \\(\\hat{\\boldsymbol{\\theta}}\\) corresponding sampling variance-covariance matrix \\(\\widehat{\\mathrm{Var}} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\). \\[\\begin{equation}     \\hat{\\boldsymbol{\\theta}}^{\\ast}     \\sim     \\mathcal{N}     \\left(     \\hat{\\boldsymbol{\\theta}},     \\widehat{\\mathrm{Var}}     \\left(     \\hat{\\boldsymbol{\\theta}}     \\right)     \\right) \\end{equation}\\] Confidence intervals defined parameters \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) generated obtaining percentiles corresponding \\(100(1 - \\alpha)\\%\\) generated sampling distribution, \\(\\alpha\\) significance level.","code":""},{"path":"https://github.com/jeksterslab/semmcci/articles/semmcci.html","id":"semmcci","dir":"Articles","previous_headings":"","what":"semmcci","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"Monte Carlo confidence intervals free defined parameters Monte Carlo confidence intervals free defined parameters models fitted structural equation modeling package lavaan can generated using semmcci package. package three main functions, namely, MC(), MCMI(), MCStd(). output lavaan passed first argument MC() function MCMI() function generate Monte Carlo confidence intervals. Monte Carlo confidence intervals standardized estimates can also generated passing output MC() function MCMI() function MCStd() function. description package code examples presented Pesigan Cheung (2023: https://doi.org/10.3758/s13428-023-02114-4).","code":""},{"path":"https://github.com/jeksterslab/semmcci/articles/semmcci.html","id":"citation","dir":"Articles","previous_headings":"","what":"Citation","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"cite semmcci publications, please cite Pesigan & Cheung (2023).","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/session/session.html","id":"session","dir":"Articles > Session","previous_headings":"","what":"Session","title":"semmcci: Session","text":"","code":"sessionInfo() #> R version 4.3.1 (2023-06-16) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] semmcci_1.1.2.9000 #>  #> loaded via a namespace (and not attached): #>  [1] vctrs_0.6.3       cli_3.6.1         knitr_1.43        rlang_1.1.1       #>  [5] xfun_0.40         stringi_1.7.12    purrr_1.0.1       textshaping_0.3.6 #>  [9] jsonlite_1.8.7    glue_1.6.2        rprojroot_2.0.3   htmltools_0.5.5   #> [13] ragg_1.2.5        sass_0.4.7        rmarkdown_2.23    evaluate_0.21     #> [17] jquerylib_0.1.4   fastmap_1.1.1     yaml_2.3.7        lifecycle_1.0.3   #> [21] memoise_2.0.1     stringr_1.5.0     compiler_4.3.1    fs_1.6.3          #> [25] systemfonts_1.0.4 digest_0.6.33     R6_2.5.1          magrittr_2.0.3    #> [29] bslib_0.5.0       tools_4.3.1       pkgdown_2.0.7     cachem_1.0.8      #> [33] desc_1.4.2"},{"path":"https://github.com/jeksterslab/semmcci/articles/session/session.html","id":"packages","dir":"Articles > Session","previous_headings":"","what":"Packages","title":"semmcci: Session","text":"","code":"installed.packages() #>              Package        LibPath                           Version      #> abind        \"abind\"        \"/home/runner/work/_temp/Library\" \"1.4-5\"      #> Amelia       \"Amelia\"       \"/home/runner/work/_temp/Library\" \"1.8.1\"      #> arm          \"arm\"          \"/home/runner/work/_temp/Library\" \"1.13-1\"     #> askpass      \"askpass\"      \"/home/runner/work/_temp/Library\" \"1.1\"        #> backports    \"backports\"    \"/home/runner/work/_temp/Library\" \"1.4.1\"      #> base64enc    \"base64enc\"    \"/home/runner/work/_temp/Library\" \"0.1-3\"      #> bit          \"bit\"          \"/home/runner/work/_temp/Library\" \"4.0.5\"      #> bit64        \"bit64\"        \"/home/runner/work/_temp/Library\" \"4.0.5\"      #> bmemLavaan   \"bmemLavaan\"   \"/home/runner/work/_temp/Library\" \"0.5\"        #> brio         \"brio\"         \"/home/runner/work/_temp/Library\" \"1.1.3\"      #> broom        \"broom\"        \"/home/runner/work/_temp/Library\" \"1.0.5\"      #> bslib        \"bslib\"        \"/home/runner/work/_temp/Library\" \"0.5.0\"      #> cachem       \"cachem\"       \"/home/runner/work/_temp/Library\" \"1.0.8\"      #> callr        \"callr\"        \"/home/runner/work/_temp/Library\" \"3.7.3\"      #> cli          \"cli\"          \"/home/runner/work/_temp/Library\" \"3.6.1\"      #> clipr        \"clipr\"        \"/home/runner/work/_temp/Library\" \"0.8.0\"      #> coda         \"coda\"         \"/home/runner/work/_temp/Library\" \"0.19-4\"     #> covr         \"covr\"         \"/home/runner/work/_temp/Library\" \"3.6.2\"      #> crayon       \"crayon\"       \"/home/runner/work/_temp/Library\" \"1.5.2\"      #> curl         \"curl\"         \"/home/runner/work/_temp/Library\" \"5.0.1\"      #> cyclocomp    \"cyclocomp\"    \"/home/runner/work/_temp/Library\" \"1.1.0\"      #> desc         \"desc\"         \"/home/runner/work/_temp/Library\" \"1.4.2\"      #> diffobj      \"diffobj\"      \"/home/runner/work/_temp/Library\" \"0.3.5\"      #> digest       \"digest\"       \"/home/runner/work/_temp/Library\" \"0.6.33\"     #> downlit      \"downlit\"      \"/home/runner/work/_temp/Library\" \"0.4.3\"      #> dplyr        \"dplyr\"        \"/home/runner/work/_temp/Library\" \"1.1.2\"      #> ellipsis     \"ellipsis\"     \"/home/runner/work/_temp/Library\" \"0.3.2\"      #> evaluate     \"evaluate\"     \"/home/runner/work/_temp/Library\" \"0.21\"       #> fansi        \"fansi\"        \"/home/runner/work/_temp/Library\" \"1.0.4\"      #> fastmap      \"fastmap\"      \"/home/runner/work/_temp/Library\" \"1.1.1\"      #> fontawesome  \"fontawesome\"  \"/home/runner/work/_temp/Library\" \"0.5.1\"      #> forcats      \"forcats\"      \"/home/runner/work/_temp/Library\" \"1.0.0\"      #> foreach      \"foreach\"      \"/home/runner/work/_temp/Library\" \"1.5.2\"      #> fs           \"fs\"           \"/home/runner/work/_temp/Library\" \"1.6.3\"      #> generics     \"generics\"     \"/home/runner/work/_temp/Library\" \"0.1.3\"      #> glmnet       \"glmnet\"       \"/home/runner/work/_temp/Library\" \"4.1-7\"      #> glue         \"glue\"         \"/home/runner/work/_temp/Library\" \"1.6.2\"      #> haven        \"haven\"        \"/home/runner/work/_temp/Library\" \"2.5.3\"      #> highr        \"highr\"        \"/home/runner/work/_temp/Library\" \"0.10\"       #> hms          \"hms\"          \"/home/runner/work/_temp/Library\" \"1.1.3\"      #> htmltools    \"htmltools\"    \"/home/runner/work/_temp/Library\" \"0.5.5\"      #> httr         \"httr\"         \"/home/runner/work/_temp/Library\" \"1.4.6\"      #> iterators    \"iterators\"    \"/home/runner/work/_temp/Library\" \"1.0.14\"     #> jomo         \"jomo\"         \"/home/runner/work/_temp/Library\" \"2.7-6\"      #> jquerylib    \"jquerylib\"    \"/home/runner/work/_temp/Library\" \"0.1.4\"      #> jsonlite     \"jsonlite\"     \"/home/runner/work/_temp/Library\" \"1.8.7\"      #> knitr        \"knitr\"        \"/home/runner/work/_temp/Library\" \"1.43\"       #> lavaan       \"lavaan\"       \"/home/runner/work/_temp/Library\" \"0.6-16\"     #> lazyeval     \"lazyeval\"     \"/home/runner/work/_temp/Library\" \"0.2.2\"      #> lifecycle    \"lifecycle\"    \"/home/runner/work/_temp/Library\" \"1.0.3\"      #> lintr        \"lintr\"        \"/home/runner/work/_temp/Library\" \"3.1.0\"      #> lme4         \"lme4\"         \"/home/runner/work/_temp/Library\" \"1.1-34\"     #> magrittr     \"magrittr\"     \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> memoise      \"memoise\"      \"/home/runner/work/_temp/Library\" \"2.0.1\"      #> mi           \"mi\"           \"/home/runner/work/_temp/Library\" \"1.1\"        #> mice         \"mice\"         \"/home/runner/work/_temp/Library\" \"3.16.0\"     #> mime         \"mime\"         \"/home/runner/work/_temp/Library\" \"0.12\"       #> minqa        \"minqa\"        \"/home/runner/work/_temp/Library\" \"1.2.5\"      #> mitml        \"mitml\"        \"/home/runner/work/_temp/Library\" \"0.4-5\"      #> mnormt       \"mnormt\"       \"/home/runner/work/_temp/Library\" \"2.1.1\"      #> nloptr       \"nloptr\"       \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> numDeriv     \"numDeriv\"     \"/home/runner/work/_temp/Library\" \"2016.8-1.1\" #> openssl      \"openssl\"      \"/home/runner/work/_temp/Library\" \"2.1.0\"      #> ordinal      \"ordinal\"      \"/home/runner/work/_temp/Library\" \"2022.11-16\" #> pan          \"pan\"          \"/home/runner/work/_temp/Library\" \"1.8\"        #> pbivnorm     \"pbivnorm\"     \"/home/runner/work/_temp/Library\" \"0.6.0\"      #> pillar       \"pillar\"       \"/home/runner/work/_temp/Library\" \"1.9.0\"      #> pkgbuild     \"pkgbuild\"     \"/home/runner/work/_temp/Library\" \"1.4.2\"      #> pkgconfig    \"pkgconfig\"    \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> pkgdown      \"pkgdown\"      \"/home/runner/work/_temp/Library\" \"2.0.7\"      #> pkgload      \"pkgload\"      \"/home/runner/work/_temp/Library\" \"1.3.2.1\"    #> praise       \"praise\"       \"/home/runner/work/_temp/Library\" \"1.0.0\"      #> prettyunits  \"prettyunits\"  \"/home/runner/work/_temp/Library\" \"1.1.1\"      #> processx     \"processx\"     \"/home/runner/work/_temp/Library\" \"3.8.2\"      #> ps           \"ps\"           \"/home/runner/work/_temp/Library\" \"1.7.5\"      #> psych        \"psych\"        \"/home/runner/work/_temp/Library\" \"2.3.6\"      #> purrr        \"purrr\"        \"/home/runner/work/_temp/Library\" \"1.0.1\"      #> quadprog     \"quadprog\"     \"/home/runner/work/_temp/Library\" \"1.5-8\"      #> R6           \"R6\"           \"/home/runner/work/_temp/Library\" \"2.5.1\"      #> ragg         \"ragg\"         \"/home/runner/work/_temp/Library\" \"1.2.5\"      #> rappdirs     \"rappdirs\"     \"/home/runner/work/_temp/Library\" \"0.3.3\"      #> rcmdcheck    \"rcmdcheck\"    \"/home/runner/work/_temp/Library\" \"1.4.0\"      #> Rcpp         \"Rcpp\"         \"/home/runner/work/_temp/Library\" \"1.0.11\"     #> readr        \"readr\"        \"/home/runner/work/_temp/Library\" \"2.1.4\"      #> rematch2     \"rematch2\"     \"/home/runner/work/_temp/Library\" \"2.1.2\"      #> remotes      \"remotes\"      \"/home/runner/work/_temp/Library\" \"2.4.2.1\"    #> rex          \"rex\"          \"/home/runner/work/_temp/Library\" \"1.2.1\"      #> rlang        \"rlang\"        \"/home/runner/work/_temp/Library\" \"1.1.1\"      #> rmarkdown    \"rmarkdown\"    \"/home/runner/work/_temp/Library\" \"2.23\"       #> rprojroot    \"rprojroot\"    \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> rsem         \"rsem\"         \"/home/runner/work/_temp/Library\" \"0.5.0\"      #> sass         \"sass\"         \"/home/runner/work/_temp/Library\" \"0.4.7\"      #> sem          \"sem\"          \"/home/runner/work/_temp/Library\" \"3.1-15\"     #> semmcci      \"semmcci\"      \"/home/runner/work/_temp/Library\" \"1.1.2.9000\" #> sessioninfo  \"sessioninfo\"  \"/home/runner/work/_temp/Library\" \"1.2.2\"      #> shape        \"shape\"        \"/home/runner/work/_temp/Library\" \"1.4.6\"      #> snow         \"snow\"         \"/home/runner/work/_temp/Library\" \"0.4-4\"      #> snowfall     \"snowfall\"     \"/home/runner/work/_temp/Library\" \"1.84-6.2\"   #> stringi      \"stringi\"      \"/home/runner/work/_temp/Library\" \"1.7.12\"     #> stringr      \"stringr\"      \"/home/runner/work/_temp/Library\" \"1.5.0\"      #> sys          \"sys\"          \"/home/runner/work/_temp/Library\" \"3.4.2\"      #> systemfonts  \"systemfonts\"  \"/home/runner/work/_temp/Library\" \"1.0.4\"      #> testthat     \"testthat\"     \"/home/runner/work/_temp/Library\" \"3.1.10\"     #> textshaping  \"textshaping\"  \"/home/runner/work/_temp/Library\" \"0.3.6\"      #> tibble       \"tibble\"       \"/home/runner/work/_temp/Library\" \"3.2.1\"      #> tidyr        \"tidyr\"        \"/home/runner/work/_temp/Library\" \"1.3.0\"      #> tidyselect   \"tidyselect\"   \"/home/runner/work/_temp/Library\" \"1.2.0\"      #> tinytex      \"tinytex\"      \"/home/runner/work/_temp/Library\" \"0.46\"       #> tzdb         \"tzdb\"         \"/home/runner/work/_temp/Library\" \"0.4.0\"      #> ucminf       \"ucminf\"       \"/home/runner/work/_temp/Library\" \"1.2.0\"      #> utf8         \"utf8\"         \"/home/runner/work/_temp/Library\" \"1.2.3\"      #> vctrs        \"vctrs\"        \"/home/runner/work/_temp/Library\" \"0.6.3\"      #> vroom        \"vroom\"        \"/home/runner/work/_temp/Library\" \"1.6.3\"      #> waldo        \"waldo\"        \"/home/runner/work/_temp/Library\" \"0.5.1\"      #> whisker      \"whisker\"      \"/home/runner/work/_temp/Library\" \"0.4.1\"      #> withr        \"withr\"        \"/home/runner/work/_temp/Library\" \"2.5.0\"      #> xfun         \"xfun\"         \"/home/runner/work/_temp/Library\" \"0.40\"       #> xml2         \"xml2\"         \"/home/runner/work/_temp/Library\" \"1.3.5\"      #> xmlparsedata \"xmlparsedata\" \"/home/runner/work/_temp/Library\" \"1.0.5\"      #> xopen        \"xopen\"        \"/home/runner/work/_temp/Library\" \"1.0.0\"      #> yaml         \"yaml\"         \"/home/runner/work/_temp/Library\" \"2.3.7\"      #> pak          \"pak\"          \"/opt/R/4.3.1/lib/R/site-library\" \"0.5.1\"      #> base         \"base\"         \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> boot         \"boot\"         \"/opt/R/4.3.1/lib/R/library\"      \"1.3-28.1\"   #> class        \"class\"        \"/opt/R/4.3.1/lib/R/library\"      \"7.3-22\"     #> cluster      \"cluster\"      \"/opt/R/4.3.1/lib/R/library\"      \"2.1.4\"      #> codetools    \"codetools\"    \"/opt/R/4.3.1/lib/R/library\"      \"0.2-19\"     #> compiler     \"compiler\"     \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> datasets     \"datasets\"     \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> foreign      \"foreign\"      \"/opt/R/4.3.1/lib/R/library\"      \"0.8-84\"     #> graphics     \"graphics\"     \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> grDevices    \"grDevices\"    \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> grid         \"grid\"         \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> KernSmooth   \"KernSmooth\"   \"/opt/R/4.3.1/lib/R/library\"      \"2.23-21\"    #> lattice      \"lattice\"      \"/opt/R/4.3.1/lib/R/library\"      \"0.21-8\"     #> MASS         \"MASS\"         \"/opt/R/4.3.1/lib/R/library\"      \"7.3-60\"     #> Matrix       \"Matrix\"       \"/opt/R/4.3.1/lib/R/library\"      \"1.5-4.1\"    #> methods      \"methods\"      \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> mgcv         \"mgcv\"         \"/opt/R/4.3.1/lib/R/library\"      \"1.8-42\"     #> nlme         \"nlme\"         \"/opt/R/4.3.1/lib/R/library\"      \"3.1-162\"    #> nnet         \"nnet\"         \"/opt/R/4.3.1/lib/R/library\"      \"7.3-19\"     #> parallel     \"parallel\"     \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> rpart        \"rpart\"        \"/opt/R/4.3.1/lib/R/library\"      \"4.1.19\"     #> spatial      \"spatial\"      \"/opt/R/4.3.1/lib/R/library\"      \"7.3-16\"     #> splines      \"splines\"      \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> stats        \"stats\"        \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> stats4       \"stats4\"       \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> survival     \"survival\"     \"/opt/R/4.3.1/lib/R/library\"      \"3.5-5\"      #> tcltk        \"tcltk\"        \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> tools        \"tools\"        \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> utils        \"utils\"        \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #>              Priority      #> abind        NA            #> Amelia       NA            #> arm          NA            #> askpass      NA            #> backports    NA            #> base64enc    NA            #> bit          NA            #> bit64        NA            #> bmemLavaan   NA            #> brio         NA            #> broom        NA            #> bslib        NA            #> cachem       NA            #> callr        NA            #> cli          NA            #> clipr        NA            #> coda         NA            #> covr         NA            #> crayon       NA            #> curl         NA            #> cyclocomp    NA            #> desc         NA            #> diffobj      NA            #> digest       NA            #> downlit      NA            #> dplyr        NA            #> ellipsis     NA            #> evaluate     NA            #> fansi        NA            #> fastmap      NA            #> fontawesome  NA            #> forcats      NA            #> foreach      NA            #> fs           NA            #> generics     NA            #> glmnet       NA            #> glue         NA            #> haven        NA            #> highr        NA            #> hms          NA            #> htmltools    NA            #> httr         NA            #> iterators    NA            #> jomo         NA            #> jquerylib    NA            #> jsonlite     NA            #> knitr        NA            #> lavaan       NA            #> lazyeval     NA            #> lifecycle    NA            #> lintr        NA            #> lme4         NA            #> magrittr     NA            #> memoise      NA            #> mi           NA            #> mice         NA            #> mime         NA            #> minqa        NA            #> mitml        NA            #> mnormt       NA            #> nloptr       NA            #> numDeriv     NA            #> openssl      NA            #> ordinal      NA            #> pan          NA            #> pbivnorm     NA            #> pillar       NA            #> pkgbuild     NA            #> pkgconfig    NA            #> pkgdown      NA            #> pkgload      NA            #> praise       NA            #> prettyunits  NA            #> processx     NA            #> ps           NA            #> psych        NA            #> purrr        NA            #> quadprog     NA            #> R6           NA            #> ragg         NA            #> rappdirs     NA            #> rcmdcheck    NA            #> Rcpp         NA            #> readr        NA            #> rematch2     NA            #> remotes      NA            #> rex          NA            #> rlang        NA            #> rmarkdown    NA            #> rprojroot    NA            #> rsem         NA            #> sass         NA            #> sem          NA            #> semmcci      NA            #> sessioninfo  NA            #> shape        NA            #> snow         NA            #> snowfall     NA            #> stringi      NA            #> stringr      NA            #> sys          NA            #> systemfonts  NA            #> testthat     NA            #> textshaping  NA            #> tibble       NA            #> tidyr        NA            #> tidyselect   NA            #> tinytex      NA            #> tzdb         NA            #> ucminf       NA            #> utf8         NA            #> vctrs        NA            #> vroom        NA            #> waldo        NA            #> whisker      NA            #> withr        NA            #> xfun         NA            #> xml2         NA            #> xmlparsedata NA            #> xopen        NA            #> yaml         NA            #> pak          NA            #> base         \"base\"        #> boot         \"recommended\" #> class        \"recommended\" #> cluster      \"recommended\" #> codetools    \"recommended\" #> compiler     \"base\"        #> datasets     \"base\"        #> foreign      \"recommended\" #> graphics     \"base\"        #> grDevices    \"base\"        #> grid         \"base\"        #> KernSmooth   \"recommended\" #> lattice      \"recommended\" #> MASS         \"recommended\" #> Matrix       \"recommended\" #> methods      \"base\"        #> mgcv         \"recommended\" #> nlme         \"recommended\" #> nnet         \"recommended\" #> parallel     \"base\"        #> rpart        \"recommended\" #> spatial      \"recommended\" #> splines      \"base\"        #> stats        \"base\"        #> stats4       \"base\"        #> survival     \"recommended\" #> tcltk        \"base\"        #> tools        \"base\"        #> utils        \"base\"        #>              Depends                                                     #> abind        \"R (>= 1.5.0)\"                                              #> Amelia       \"R (>= 3.0.2), Rcpp (>= 0.11)\"                              #> arm          \"R (>= 3.1.0), MASS, Matrix (>= 1.0), stats, lme4 (>= 1.0)\" #> askpass      NA                                                          #> backports    \"R (>= 3.0.0)\"                                              #> base64enc    \"R (>= 2.9.0)\"                                              #> bit          \"R (>= 2.9.2)\"                                              #> bit64        \"R (>= 3.0.1), bit (>= 4.0.0), utils, methods, stats\"       #> bmemLavaan   \"R (>= 3.5.0), Amelia, MASS, snowfall, rsem\"                #> brio         NA                                                          #> broom        \"R (>= 3.5)\"                                                #> bslib        \"R (>= 2.10)\"                                               #> cachem       NA                                                          #> callr        \"R (>= 3.4)\"                                                #> cli          \"R (>= 3.4)\"                                                #> clipr        NA                                                          #> coda         \"R (>= 2.14.0)\"                                             #> covr         \"R (>= 3.1.0), methods\"                                     #> crayon       NA                                                          #> curl         \"R (>= 3.0.0)\"                                              #> cyclocomp    NA                                                          #> desc         \"R (>= 3.4)\"                                                #> diffobj      \"R (>= 3.1.0)\"                                              #> digest       \"R (>= 3.3.0)\"                                              #> downlit      \"R (>= 3.4.0)\"                                              #> dplyr        \"R (>= 3.5.0)\"                                              #> ellipsis     \"R (>= 3.2)\"                                                #> evaluate     \"R (>= 3.0.2)\"                                              #> fansi        \"R (>= 3.1.0)\"                                              #> fastmap      NA                                                          #> fontawesome  \"R (>= 3.3.0)\"                                              #> forcats      \"R (>= 3.4)\"                                                #> foreach      \"R (>= 2.5.0)\"                                              #> fs           \"R (>= 3.4)\"                                                #> generics     \"R (>= 3.2)\"                                                #> glmnet       \"R (>= 3.6.0), Matrix (>= 1.0-6)\"                           #> glue         \"R (>= 3.4)\"                                                #> haven        \"R (>= 3.6)\"                                                #> highr        \"R (>= 3.3.0)\"                                              #> hms          NA                                                          #> htmltools    \"R (>= 2.14.1)\"                                             #> httr         \"R (>= 3.5)\"                                                #> iterators    \"R (>= 2.5.0), utils\"                                       #> jomo         NA                                                          #> jquerylib    NA                                                          #> jsonlite     \"methods\"                                                   #> knitr        \"R (>= 3.3.0)\"                                              #> lavaan       \"R(>= 3.4)\"                                                 #> lazyeval     \"R (>= 3.1.0)\"                                              #> lifecycle    \"R (>= 3.4)\"                                                #> lintr        \"R (>= 3.5)\"                                                #> lme4         \"R (>= 3.5.0), Matrix (>= 1.2-1), methods, stats\"           #> magrittr     \"R (>= 3.4.0)\"                                              #> memoise      NA                                                          #> mi           \"R (>= 3.0.0), methods, Matrix, stats4\"                     #> mice         \"R (>= 2.10.0)\"                                             #> mime         NA                                                          #> minqa        NA                                                          #> mitml        NA                                                          #> mnormt       \"R (>= 2.2.0)\"                                              #> nloptr       NA                                                          #> numDeriv     \"R (>= 2.11.1)\"                                             #> openssl      NA                                                          #> ordinal      \"R (>= 2.13.0), stats, methods\"                             #> pan          NA                                                          #> pbivnorm     NA                                                          #> pillar       NA                                                          #> pkgbuild     \"R (>= 3.4)\"                                                #> pkgconfig    NA                                                          #> pkgdown      \"R (>= 3.1.0)\"                                              #> pkgload      \"R (>= 3.4.0)\"                                              #> praise       NA                                                          #> prettyunits  NA                                                          #> processx     \"R (>= 3.4.0)\"                                              #> ps           \"R (>= 3.4)\"                                                #> psych        NA                                                          #> purrr        \"R (>= 3.4.0)\"                                              #> quadprog     \"R (>= 3.1.0)\"                                              #> R6           \"R (>= 3.0)\"                                                #> ragg         NA                                                          #> rappdirs     \"R (>= 3.2)\"                                                #> rcmdcheck    NA                                                          #> Rcpp         NA                                                          #> readr        \"R (>= 3.5)\"                                                #> rematch2     NA                                                          #> remotes      \"R (>= 3.0.0)\"                                              #> rex          NA                                                          #> rlang        \"R (>= 3.5.0)\"                                              #> rmarkdown    \"R (>= 3.0)\"                                                #> rprojroot    \"R (>= 3.0.0)\"                                              #> rsem         \"R (>= 2.7), MASS, lavaan\"                                  #> sass         NA                                                          #> sem          \"R (>= 3.5.0), stats\"                                       #> semmcci      \"R (>= 3.0.0)\"                                              #> sessioninfo  \"R (>= 2.10)\"                                               #> shape        \"R (>= 2.01)\"                                               #> snow         \"R (>= 2.13.1), utils\"                                      #> snowfall     \"R (>= 2.10), snow\"                                         #> stringi      \"R (>= 3.1)\"                                                #> stringr      \"R (>= 3.3)\"                                                #> sys          NA                                                          #> systemfonts  \"R (>= 3.2.0)\"                                              #> testthat     \"R (>= 3.1)\"                                                #> textshaping  \"R (>= 3.2.0)\"                                              #> tibble       \"R (>= 3.4.0)\"                                              #> tidyr        \"R (>= 3.4.0)\"                                              #> tidyselect   \"R (>= 3.4)\"                                                #> tinytex      NA                                                          #> tzdb         \"R (>= 3.5.0)\"                                              #> ucminf       \"R (>= 3.5.0)\"                                              #> utf8         \"R (>= 2.10)\"                                               #> vctrs        \"R (>= 3.5.0)\"                                              #> vroom        \"R (>= 3.4)\"                                                #> waldo        NA                                                          #> whisker      NA                                                          #> withr        \"R (>= 3.2.0)\"                                              #> xfun         NA                                                          #> xml2         \"R (>= 3.1.0)\"                                              #> xmlparsedata \"R (>= 3.0.0)\"                                              #> xopen        \"R (>= 3.1)\"                                                #> yaml         NA                                                          #> pak          \"R (>= 3.2)\"                                                #> base         NA                                                          #> boot         \"R (>= 3.0.0), graphics, stats\"                             #> class        \"R (>= 3.0.0), stats, utils\"                                #> cluster      \"R (>= 3.5.0)\"                                              #> codetools    \"R (>= 2.1)\"                                                #> compiler     NA                                                          #> datasets     NA                                                          #> foreign      \"R (>= 4.0.0)\"                                              #> graphics     NA                                                          #> grDevices    NA                                                          #> grid         NA                                                          #> KernSmooth   \"R (>= 2.5.0), stats\"                                       #> lattice      \"R (>= 4.0.0)\"                                              #> MASS         \"R (>= 4.0), grDevices, graphics, stats, utils\"             #> Matrix       \"R (>= 3.5.0), methods\"                                     #> methods      NA                                                          #> mgcv         \"R (>= 3.6.0), nlme (>= 3.1-64)\"                            #> nlme         \"R (>= 3.5.0)\"                                              #> nnet         \"R (>= 3.0.0), stats, utils\"                                #> parallel     NA                                                          #> rpart        \"R (>= 2.15.0), graphics, stats, grDevices\"                 #> spatial      \"R (>= 3.0.0), graphics, stats, utils\"                      #> splines      NA                                                          #> stats        NA                                                          #> stats4       NA                                                          #> survival     \"R (>= 3.5.0)\"                                              #> tcltk        NA                                                          #> tools        NA                                                          #> utils        NA                                                          #>              Imports                                                                                                                                                                                                                                                                       #> abind        \"methods, utils\"                                                                                                                                                                                                                                                              #> Amelia       \"foreign, utils, grDevices, graphics, methods, stats, rlang\"                                                                                                                                                                                                                  #> arm          \"abind, coda, graphics, grDevices, methods, nlme, utils\"                                                                                                                                                                                                                      #> askpass      \"sys (>= 2.1)\"                                                                                                                                                                                                                                                                #> backports    NA                                                                                                                                                                                                                                                                            #> base64enc    NA                                                                                                                                                                                                                                                                            #> bit          NA                                                                                                                                                                                                                                                                            #> bit64        NA                                                                                                                                                                                                                                                                            #> bmemLavaan   \"lavaan, sem\"                                                                                                                                                                                                                                                                 #> brio         NA                                                                                                                                                                                                                                                                            #> broom        \"backports, dplyr (>= 1.0.0), ellipsis, generics (>= 0.0.2),\\nglue, lifecycle, purrr, rlang, stringr, tibble (>= 3.0.0),\\ntidyr (>= 1.0.0)\"                                                                                                                                   #> bslib        \"base64enc, cachem, grDevices, htmltools (>= 0.5.4), jquerylib\\n(>= 0.1.3), jsonlite, memoise (>= 2.0.1), mime, rlang, sass (>=\\n0.4.0)\"                                                                                                                                      #> cachem       \"rlang, fastmap (>= 1.1.1)\"                                                                                                                                                                                                                                                   #> callr        \"processx (>= 3.6.1), R6, utils\"                                                                                                                                                                                                                                              #> cli          \"utils\"                                                                                                                                                                                                                                                                       #> clipr        \"utils\"                                                                                                                                                                                                                                                                       #> coda         \"lattice\"                                                                                                                                                                                                                                                                     #> covr         \"digest, stats, utils, jsonlite, rex, httr, crayon, withr (>=\\n1.0.2), yaml\"                                                                                                                                                                                                  #> crayon       \"grDevices, methods, utils\"                                                                                                                                                                                                                                                   #> curl         NA                                                                                                                                                                                                                                                                            #> cyclocomp    \"callr, crayon, desc, remotes, withr\"                                                                                                                                                                                                                                         #> desc         \"cli, R6, rprojroot, utils\"                                                                                                                                                                                                                                                   #> diffobj      \"crayon (>= 1.3.2), tools, methods, utils, stats\"                                                                                                                                                                                                                             #> digest       \"utils\"                                                                                                                                                                                                                                                                       #> downlit      \"brio, desc, digest, evaluate, fansi, memoise, rlang, vctrs,\\nwithr, yaml\"                                                                                                                                                                                                    #> dplyr        \"cli (>= 3.4.0), generics, glue (>= 1.3.2), lifecycle (>=\\n1.0.3), magrittr (>= 1.5), methods, pillar (>= 1.9.0), R6,\\nrlang (>= 1.1.0), tibble (>= 3.2.0), tidyselect (>= 1.2.0),\\nutils, vctrs (>= 0.6.0)\"                                                                  #> ellipsis     \"rlang (>= 0.3.0)\"                                                                                                                                                                                                                                                            #> evaluate     \"methods\"                                                                                                                                                                                                                                                                     #> fansi        \"grDevices, utils\"                                                                                                                                                                                                                                                            #> fastmap      NA                                                                                                                                                                                                                                                                            #> fontawesome  \"rlang (>= 1.0.6), htmltools (>= 0.5.1.1)\"                                                                                                                                                                                                                                    #> forcats      \"cli (>= 3.4.0), glue, lifecycle, magrittr, rlang (>= 1.0.0),\\ntibble\"                                                                                                                                                                                                        #> foreach      \"codetools, utils, iterators\"                                                                                                                                                                                                                                                 #> fs           \"methods\"                                                                                                                                                                                                                                                                     #> generics     \"methods\"                                                                                                                                                                                                                                                                     #> glmnet       \"methods, utils, foreach, shape, survival, Rcpp\"                                                                                                                                                                                                                              #> glue         \"methods\"                                                                                                                                                                                                                                                                     #> haven        \"cli (>= 3.0.0), forcats (>= 0.2.0), hms, lifecycle, methods,\\nreadr (>= 0.1.0), rlang (>= 0.4.0), tibble, tidyselect, vctrs\\n(>= 0.3.0)\"                                                                                                                                     #> highr        \"xfun (>= 0.18)\"                                                                                                                                                                                                                                                              #> hms          \"lifecycle, methods, pkgconfig, rlang (>= 1.0.2), vctrs (>=\\n0.3.8)\"                                                                                                                                                                                                          #> htmltools    \"utils, digest, grDevices, base64enc, rlang (>= 0.4.10),\\nfastmap (>= 1.1.0), ellipsis\"                                                                                                                                                                                       #> httr         \"curl (>= 3.0.0), jsonlite, mime, openssl (>= 0.8), R6\"                                                                                                                                                                                                                       #> iterators    NA                                                                                                                                                                                                                                                                            #> jomo         \"stats, lme4, survival, MASS, ordinal, tibble\"                                                                                                                                                                                                                                #> jquerylib    \"htmltools\"                                                                                                                                                                                                                                                                   #> jsonlite     NA                                                                                                                                                                                                                                                                            #> knitr        \"evaluate (>= 0.15), highr, methods, tools, xfun (>= 0.39),\\nyaml (>= 2.1.19)\"                                                                                                                                                                                                #> lavaan       \"methods, stats4, stats, utils, graphics, MASS, mnormt,\\npbivnorm, numDeriv, quadprog\"                                                                                                                                                                                        #> lazyeval     NA                                                                                                                                                                                                                                                                            #> lifecycle    \"cli (>= 3.4.0), glue, rlang (>= 1.0.6)\"                                                                                                                                                                                                                                      #> lintr        \"backports, codetools, cyclocomp, digest, glue, knitr, rex,\\nstats, utils, xml2 (>= 1.0.0), xmlparsedata (>= 1.0.5)\"                                                                                                                                                          #> lme4         \"graphics, grid, splines, utils, parallel, MASS, lattice, boot,\\nnlme (>= 3.1-123), minqa (>= 1.1.15), nloptr (>= 1.0.4)\"                                                                                                                                                     #> magrittr     NA                                                                                                                                                                                                                                                                            #> memoise      \"rlang (>= 0.4.10), cachem\"                                                                                                                                                                                                                                                   #> mi           \"arm (>= 1.4-11)\"                                                                                                                                                                                                                                                             #> mice         \"broom, dplyr, generics, glmnet, graphics, grDevices, lattice,\\nmethods, mitml, nnet, Rcpp, rpart, rlang, stats, tidyr, utils\"                                                                                                                                                #> mime         \"tools\"                                                                                                                                                                                                                                                                       #> minqa        \"Rcpp (>= 0.9.10)\"                                                                                                                                                                                                                                                            #> mitml        \"pan, jomo, haven, grDevices, graphics, stats, methods, utils\"                                                                                                                                                                                                                #> mnormt       NA                                                                                                                                                                                                                                                                            #> nloptr       NA                                                                                                                                                                                                                                                                            #> numDeriv     NA                                                                                                                                                                                                                                                                            #> openssl      \"askpass\"                                                                                                                                                                                                                                                                     #> ordinal      \"ucminf, MASS, Matrix, numDeriv, nlme\"                                                                                                                                                                                                                                        #> pan          NA                                                                                                                                                                                                                                                                            #> pbivnorm     NA                                                                                                                                                                                                                                                                            #> pillar       \"cli (>= 2.3.0), fansi, glue, lifecycle, rlang (>= 1.0.2), utf8\\n(>= 1.1.0), utils, vctrs (>= 0.5.0)\"                                                                                                                                                                         #> pkgbuild     \"callr (>= 3.2.0), cli (>= 3.4.0), crayon, desc, prettyunits,\\nprocessx, R6, rprojroot\"                                                                                                                                                                                       #> pkgconfig    \"utils\"                                                                                                                                                                                                                                                                       #> pkgdown      \"bslib (>= 0.3.1), callr (>= 3.7.3), cli, desc, digest, downlit\\n(>= 0.4.0), fs (>= 1.4.0), httr (>= 1.4.2), jsonlite, magrittr,\\nmemoise, purrr, ragg, rlang (>= 1.0.0), rmarkdown (>=\\n1.1.9007), tibble, whisker, withr (>= 2.4.3), xml2 (>= 1.3.1),\\nyaml\"                #> pkgload      \"cli (>= 3.3.0), crayon, desc, fs, glue, methods, rlang (>=\\n1.0.3), rprojroot, utils, withr (>= 2.4.3)\"                                                                                                                                                                      #> praise       NA                                                                                                                                                                                                                                                                            #> prettyunits  NA                                                                                                                                                                                                                                                                            #> processx     \"ps (>= 1.2.0), R6, utils\"                                                                                                                                                                                                                                                    #> ps           \"utils\"                                                                                                                                                                                                                                                                       #> psych        \"mnormt,parallel,stats,graphics,grDevices,methods,lattice,nlme\"                                                                                                                                                                                                               #> purrr        \"cli (>= 3.4.0), lifecycle (>= 1.0.3), magrittr (>= 1.5.0),\\nrlang (>= 0.4.10), vctrs (>= 0.5.0)\"                                                                                                                                                                             #> quadprogragg         \"systemfonts (>= 1.0.3), textshaping (>= 0.3.0)\"                                                                                                                                                                                                                              #> rappdirs     NA                                                                                                                                                                                                                                                                            #> rcmdcheck    \"callr (>= 3.1.1.9000), cli (>= 3.0.0), curl, desc (>= 1.2.0),\\ndigest, pkgbuild, prettyunits, R6, rprojroot, sessioninfo (>=\\n1.1.1), utils, withr, xopen\"                                                                                                                   #> Rcpp         \"methods, utils\"                                                                                                                                                                                                                                                              #> readr        \"cli (>= 3.2.0), clipr, crayon, hms (>= 0.4.1), lifecycle (>=\\n0.2.0), methods, R6, rlang, tibble, utils, vroom (>= 1.6.0)\"                                                                                                                                                   #> rematch2     \"tibble\"                                                                                                                                                                                                                                                                      #> remotes      \"methods, stats, tools, utils\"                                                                                                                                                                                                                                                #> rex          \"lazyeval\"                                                                                                                                                                                                                                                                    #> rlang        \"utils\"                                                                                                                                                                                                                                                                       #> rmarkdown    \"bslib (>= 0.2.5.1), evaluate (>= 0.13), fontawesome (>=\\n0.5.0), htmltools (>= 0.5.1), jquerylib, jsonlite, knitr (>=\\n1.22), methods, stringr (>= 1.2.0), tinytex (>= 0.31), tools,\\nutils, xfun (>= 0.36), yaml (>= 2.1.19)\"                                               #> rprojroot    NA                                                                                                                                                                                                                                                                            #> rsem         NA                                                                                                                                                                                                                                                                            #> sass         \"fs (>= 1.2.4), rlang (>= 0.4.10), htmltools (>= 0.5.1), R6,\\nrappdirs\"                                                                                                                                                                                                       #> sem          \"MASS, boot, mi (>= 0.9-99), utils\"                                                                                                                                                                                                                                           #> semmcci      \"stats, lavaan, mice\"                                                                                                                                                                                                                                                         #> sessioninfo  \"cli (>= 3.1.0), tools, utils\"                                                                                                                                                                                                                                                #> shape        \"stats, graphics, grDevices\"                                                                                                                                                                                                                                                  #> snow         NA                                                                                                                                                                                                                                                                            #> snowfall     NA                                                                                                                                                                                                                                                                            #> stringi      \"tools, utils, stats\"                                                                                                                                                                                                                                                         #> stringr      \"cli, glue (>= 1.6.1), lifecycle (>= 1.0.3), magrittr, rlang\\n(>= 1.0.0), stringi (>= 1.5.3), vctrs\"                                                                                                                                                                          #> sys          NA                                                                                                                                                                                                                                                                            #> systemfonts  NA                                                                                                                                                                                                                                                                            #> testthat     \"brio, callr (>= 3.5.1), cli (>= 3.4.0), desc, digest, ellipsis\\n(>= 0.2.0), evaluate, jsonlite, lifecycle, magrittr, methods,\\npkgload (>= 1.3.0), praise, processx (>= 3.8.2), ps (>= 1.3.4),\\nR6 (>= 2.2.0), rlang (>= 1.1.0), utils, waldo (>= 0.5.0), withr\\n(>= 2.4.3)\" #> textshaping  \"systemfonts (>= 1.0.0)\"                                                                                                                                                                                                                                                      #> tibble       \"fansi (>= 0.4.0), lifecycle (>= 1.0.0), magrittr, methods,\\npillar (>= 1.8.1), pkgconfig, rlang (>= 1.0.2), utils, vctrs\\n(>= 0.4.2)\"                                                                                                                                        #> tidyr        \"cli (>= 3.4.1), dplyr (>= 1.0.10), glue, lifecycle (>= 1.0.3),\\nmagrittr, purrr (>= 1.0.1), rlang (>= 1.0.4), stringr (>=\\n1.5.0), tibble (>= 2.1.1), tidyselect (>= 1.2.0), utils, vctrs\\n(>= 0.5.2)\"                                                                       #> tidyselect   \"cli (>= 3.3.0), glue (>= 1.3.0), lifecycle (>= 1.0.3), rlang\\n(>= 1.0.4), vctrs (>= 0.4.1), withr\"                                                                                                                                                                           #> tinytex      \"xfun (>= 0.29)\"                                                                                                                                                                                                                                                              #> tzdb         NA                                                                                                                                                                                                                                                                            #> ucminf       NA                                                                                                                                                                                                                                                                            #> utf8         NA                                                                                                                                                                                                                                                                            #> vctrs        \"cli (>= 3.4.0), glue, lifecycle (>= 1.0.3), rlang (>= 1.1.0)\"                                                                                                                                                                                                                #> vroom        \"bit64, cli (>= 3.2.0), crayon, glue, hms, lifecycle (>=\\n1.0.3), methods, rlang (>= 0.4.2), stats, tibble (>= 2.0.0),\\ntidyselect, tzdb (>= 0.1.1), vctrs (>= 0.2.0), withr\"                                                                                                 #> waldo        \"cli, diffobj (>= 0.3.4), fansi, glue, methods, rematch2, rlang\\n(>= 1.0.0), tibble\"                                                                                                                                                                                          #> whisker      NA                                                                                                                                                                                                                                                                            #> withr        \"graphics, grDevices, stats\"                                                                                                                                                                                                                                                  #> xfun         \"stats, tools\"                                                                                                                                                                                                                                                                #> xml2         \"methods\"                                                                                                                                                                                                                                                                     #> xmlparsedata NA                                                                                                                                                                                                                                                                            #> xopen        \"processx\"                                                                                                                                                                                                                                                                    #> yaml         NA                                                                                                                                                                                                                                                                            #> pak          \"tools,\\nutils\"                                                                                                                                                                                                                                                               #> base         NA                                                                                                                                                                                                                                                                            #> boot         NA                                                                                                                                                                                                                                                                            #> class        \"MASS\"                                                                                                                                                                                                                                                                        #> cluster      \"graphics, grDevices, stats, utils\"                                                                                                                                                                                                                                           #> codetools    NA                                                                                                                                                                                                                                                                            #> compiler     NA                                                                                                                                                                                                                                                                            #> datasets     NA                                                                                                                                                                                                                                                                            #> foreign      \"methods, utils, stats\"                                                                                                                                                                                                                                                       #> graphics     \"grDevices\"                                                                                                                                                                                                                                                                   #> grDevices    NA                                                                                                                                                                                                                                                                            #> grid         \"grDevices, utils\"                                                                                                                                                                                                                                                            #> KernSmooth   NA                                                                                                                                                                                                                                                                            #> lattice      \"grid, grDevices, graphics, stats, utils\"                                                                                                                                                                                                                                     #> MASS         \"methods\"                                                                                                                                                                                                                                                                     #> Matrix       \"graphics, grid, lattice, stats, utils\"                                                                                                                                                                                                                                       #> methods      \"utils, stats\"                                                                                                                                                                                                                                                                #> mgcv         \"methods, stats, graphics, Matrix, splines, utils\"                                                                                                                                                                                                                            #> nlme         \"graphics, stats, utils, lattice\"                                                                                                                                                                                                                                             #> nnet         NA                                                                                                                                                                                                                                                                            #> parallel     \"tools, compiler\"                                                                                                                                                                                                                                                             #> rpart        NA                                                                                                                                                                                                                                                                            #> spatial      NA                                                                                                                                                                                                                                                                            #> splines      \"graphics, stats\"                                                                                                                                                                                                                                                             #> stats        \"utils, grDevices, graphics\"                                                                                                                                                                                                                                                  #> stats4       \"graphics, methods, stats\"                                                                                                                                                                                                                                                    #> survival     \"graphics, Matrix, methods, splines, stats, utils\"                                                                                                                                                                                                                            #> tcltk        \"utils\"                                                                                                                                                                                                                                                                       #> tools        NA                                                                                                                                                                                                                                                                            #> utils        NA                                                                                                                                                                                                                                                                            #>              LinkingTo                                                #> abind        NA                                                       #> Amelia       \"Rcpp (>= 0.11), RcppArmadillo\"                          #> arm          NA                                                       #> askpass      NA                                                       #> backports    NA                                                       #> base64enc    NA                                                       #> bit          NA                                                       #> bit64        NA                                                       #> bmemLavaan   NA                                                       #> brio         NA                                                       #> broom        NA                                                       #> bslib        NA                                                       #> cachem       NA                                                       #> callr        NA                                                       #> cli          NA                                                       #> clipr        NA                                                       #> coda         NA                                                       #> covr         NA                                                       #> crayon       NA                                                       #> curl         NA                                                       #> cyclocomp    NA                                                       #> desc         NA                                                       #> diffobj      NA                                                       #> digest       NA                                                       #> downlit      NA                                                       #> dplyr        NA                                                       #> ellipsis     NA                                                       #> evaluate     NA                                                       #> fansi        NA                                                       #> fastmap      NA                                                       #> fontawesome  NA                                                       #> forcats      NA                                                       #> foreach      NA                                                       #> fs           NA                                                       #> generics     NA                                                       #> glmnet       \"RcppEigen, Rcpp\"                                        #> glue         NA                                                       #> haven        \"cpp11\"                                                  #> highr        NA                                                       #> hms          NA                                                       #> htmltools    NA                                                       #> httr         NA                                                       #> iterators    NA                                                       #> jomo         NA                                                       #> jquerylib    NA                                                       #> jsonlite     NA                                                       #> knitr        NA                                                       #> lavaan       NA                                                       #> lazyeval     NA                                                       #> lifecycle    NA                                                       #> lintr        NA                                                       #> lme4         \"Rcpp (>= 0.10.5), RcppEigen\"                            #> magrittr     NA                                                       #> memoise      NA                                                       #> mi           NA                                                       #> mice         \"cpp11, Rcpp\"                                            #> mime         NA                                                       #> minqa        \"Rcpp\"                                                   #> mitml        NA                                                       #> mnormt       NA                                                       #> nloptr       \"testthat\"                                               #> numDeriv     NA                                                       #> openssl      NA                                                       #> ordinal      NA                                                       #> pan          NA                                                       #> pbivnorm     NA                                                       #> pillar       NA                                                       #> pkgbuild     NA                                                       #> pkgconfig    NA                                                       #> pkgdown      NA                                                       #> pkgload      NA                                                       #> praise       NA                                                       #> prettyunits  NA                                                       #> processx     NA                                                       #> ps           NA                                                       #> psych        NA                                                       #> purrr        \"cli\"                                                    #> quadprog     NA                                                       #> R6           NA                                                       #> ragg         \"systemfonts, textshaping\"                               #> rappdirs     NA                                                       #> rcmdcheck    NA                                                       #> Rcpp         NA                                                       #> readr        \"cpp11, tzdb (>= 0.1.1)\"                                 #> rematch2     NA                                                       #> remotes      NA                                                       #> rex          NA                                                       #> rlang        NA                                                       #> rmarkdown    NA                                                       #> rprojroot    NA                                                       #> rsem         NA                                                       #> sass         NA                                                       #> sem          NA                                                       #> semmcci      NA                                                       #> sessioninfo  NA                                                       #> shape        NA                                                       #> snow         NA                                                       #> snowfall     NA                                                       #> stringi      NA                                                       #> stringr      NA                                                       #> sys          NA                                                       #> systemfonts  \"cpp11 (>= 0.2.1)\"                                       #> testthat     NA                                                       #> textshaping  \"cpp11 (>= 0.2.1), systemfonts (>= 1.0.0)\"               #> tibble       NA                                                       #> tidyr        \"cpp11 (>= 0.4.0)\"                                       #> tidyselect   NA                                                       #> tinytex      NA                                                       #> tzdb         \"cpp11 (>= 0.4.2)\"                                       #> ucminf       NA                                                       #> utf8         NA                                                       #> vctrs        NA                                                       #> vroom        \"cpp11 (>= 0.2.0), progress (>= 1.2.1), tzdb (>= 0.1.1)\" #> waldo        NA                                                       #> whisker      NA                                                       #> withr        NA                                                       #> xfun         NA                                                       #> xml2         NA                                                       #> xmlparsedata NA                                                       #> xopen        NA                                                       #> yaml         NA                                                       #> pak          NA                                                       #> base         NA                                                       #> boot         NA                                                       #> class        NA                                                       #> cluster      NA                                                       #> codetools    NA                                                       #> compiler     NA                                                       #> datasets     NA                                                       #> foreign      NA                                                       #> graphics     NA                                                       #> grDevices    NA                                                       #> grid         NA                                                       #> KernSmooth   NA                                                       #> lattice      NA                                                       #> MASS         NA                                                       #> Matrix       NA                                                       #> methods      NA                                                       #> mgcv         NA                                                       #> nlme         NA                                                       #> nnet         NA                                                       #> parallel     NA                                                       #> rpart        NA                                                       #> spatial      NA                                                       #> splines      NA                                                       #> stats        NA                                                       #> stats4       NA                                                       #> survival     NA                                                       #> tcltk        NA                                                       #> tools        NA                                                       #> utils        NA                                                       #>              Suggestsabindmelia       \"tcltk, broom, rmarkdown, knitr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      #> armaskpass      \"testthatbackportsbase64encbit          \"testthat (>= 0.11.0), roxygen2, knitr, rmarkdown,\\nmicrobenchmark, bit64 (>= 4.0.0), ffbitbmemLavaan   \"R.rspbrio         \"covr, testthatbroom        \"AER, AUC, bbmle, betareg, biglm, binGroup, boot, btergm (>=\\n1.10.6), car, carData, caret, cluster, cmprsk, coda, covr, drc,\\ne1071, emmeans, epiR, ergm (>= 3.10.4), fixest (>= 0.9.0), gam\\n(>= 1.15), gee, geepack, ggplot2, glmnet, glmnetUtils, gmm,\\nHmisc, irlba, interp, joineRML, Kendall, knitr, ks, Lahman,\\nlavaan, leaps, lfe, lm.beta, lme4, lmodel2, lmtest (>= 0.9.38),\\nlsmeans, maps, margins, MASS, mclust, mediation, metafor, mfx,\\nmgcv, mlogit, modeldata, modeltests, muhaz, multcomp, network,\\nnnet, orcutt (>= 2.2), ordinal, plm, poLCA, psych, quantreg,\\nrmarkdown, robust, robustbase, rsample, sandwich, sp, spdep (>=\\n1.1), spatialreg, speedglm, spelling, survey, survival,\\nsystemfit, testthat (>= 2.1.0), tseries, vars, zoo\" #> bslib        \"bsicons, curl, fontawesome, ggplot2, knitr, magrittr,\\nrappdirs, rmarkdown (>= 2.7), shiny (>= 1.6.0), testthat,\\nthematic, withr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   #> cachem       \"testthatcallr        \"asciicast, cli (>= 1.1.0), covr, mockery, ps, rprojroot,\\nspelling, testthat (>= 3.0.0), withrcli          \"callr, covr, crayon, digest, glue (>= 1.6.0), grDevices,\\nhtmltools, htmlwidgets, knitr, methods, mockery, processx, ps\\n(>= 1.3.4.9000), rlang (>= 1.0.2.9003), rmarkdown, rprojroot,\\nrstudioapi, testthat, tibble, whoami, withr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 #> clipr        \"covr, knitr, rmarkdown, rstudioapi (>= 0.5), testthat (>=\\ncoda         NA                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #> covr         \"R6, curl, knitr, rmarkdown, htmltools, DT (>= 0.2), testthat,\\nrlang, rstudioapi (>= 0.2), xml2 (>= 1.0.0), parallel, memoise,\\nmockery, covrcrayon       \"mockery, rstudioapi, testthat, withrcurl         \"spelling, testthat (>= 1.0.0), knitr, jsonlite, rmarkdown,\\nmagrittr, httpuv (>= 1.4.4), webutilscyclocomp    \"testthatdesc         \"callr, covr, gh, spelling, testthat, whoami, withr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  #> diffobj      \"knitr, rmarkdowndigest       \"tinytest, simplermarkdowndownlit      \"covr, htmltools, jsonlite, MASS, MassSpecWavelet, pkgload,\\nrmarkdown, testthat (>= 3.0.0), xmldplyr        \"bench, broom, callr, covr, DBI, dbplyr (>= 2.2.1), ggplot2,\\nknitr, Lahman, lobstr, microbenchmark, nycflights13, purrr,\\nrmarkdown, RMySQL, RPostgreSQL, RSQLite, stringi (>= 1.7.6),\\ntestthat (>= 3.1.5), tidyr (>= 1.3.0), withrellipsis     \"covr, testthatevaluate     \"covr, ggplot2, lattice, rlang, testthat (>= 3.0.0), withrfansi        \"unitizer, knitr, rmarkdownfastmap      \"testthatfontawesome  \"covr, dplyr (>= 1.0.8), knitr (>= 1.31), testthat (>= 3.0.0),\\nrsvgforcats      \"covr, dplyr, ggplot2, knitr, readr, rmarkdown, testthat (>=\\n3.0.0), withrforeach      \"randomForest, doMC, doParallel, testthat, knitr, rmarkdownfs           \"covr, crayon, knitr, pillar (>= 1.0.0), rmarkdown, spelling,\\ntestthat (>= 3.0.0), tibble (>= 1.1.0), vctrs (>= 0.3.0), withrgenerics     \"covr, pkgload, testthat (>= 3.0.0), tibble, withrglmnet       \"knitr, lars, testthat, xfun, rmarkdownglue         \"covr, crayon, DBI, dplyr, forcats, ggplot2, knitr, magrittr,\\nmicrobenchmark, R.utils, rmarkdown, rprintf, RSQLite, stringr,\\ntestthat (>= 3.0.0), vctrs (>= 0.3.0), waldo (>= 0.3.0), withrhaven        \"covr, crayon, fs, knitr, pillar (>= 1.4.0), rmarkdown,\\ntestthat (>= 3.0.0), utfhighr        \"knitr, markdown, testithms          \"crayon, lubridate, pillar (>= 1.1.0), testthathtmltools    \"markdown, testthat, withr, Cairo, ragg, shinyhttr         \"covr, httpuv, jpeg, knitr, png, readr, rmarkdown, testthat\\n(>= 0.8.0), xmliterators    \"RUnit, foreach\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      #> jomo         \"mitmljquerylib    \"testthatjsonlite     \"httr, vctrs, testthat, knitr, rmarkdown, R.rsp, sfknitr        \"bslib, codetools, DBI (>= 0.4-1), digest, formatR, gifski,\\ngridSVG, htmlwidgets (>= 0.7), curl, jpeg, JuliaCall (>=\\n0.11.1), magick, markdown (>= 1.3), png, ragg, reticulate (>=\\n1.4), rgl (>= 0.95.1201), rlang, rmarkdown, sass, showtext,\\nstyler (>= 1.2.0), targets (>= 0.6.0), testit, tibble,\\ntikzDevice (>= 0.10), tinytex, webshot, rstudioapi, xml2 (>=\\n1.2.0)\"                                                                                                                                                                                                                                                                                                                                                                                      #> lavaanlazyeval     \"knitr, rmarkdown (>= 0.2.65), testthat, covrlifecycle    \"covr, crayon, knitr, lintr, rmarkdown, testthat (>= 3.0.1),\\ntibble, tidyverse, tools, vctrs, withrlintr        \"bookdown, crayon, httr (>= 1.2.1), jsonlite, mockery,\\npatrick, rlang, rmarkdown, rstudioapi (>= 0.2), testthat (>=\\n3.1.5), tibble, tufte, withrlme4         \"knitr, rmarkdown, MEMSS, testthat (>= 0.8.1), ggplot2,\\nmlmRev, optimx (>= 2013.8.6), gamm4, pbkrtest, HSAUR3,\\nnumDeriv, car, dfoptim, mgcv, statmod, rr2, semEff, tibble,\\nmerDerivmagrittr     \"covr, knitr, rlang, rmarkdown, testthatmemoise      \"digest, aws.s3, covr, googleAuthR, googleCloudStorageR, httr,\\ntestthatmi           \"betareg, lattice, knitr, MASS, nnet, parallel, sn, survival,\\ntruncnorm, foreign\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #> mice         \"broom.mixed, future, furrr, haven, knitr, lme4, MASS,\\nmiceadds, pan, parallelly, purrr, ranger, randomForest,\\nrmarkdown, rstan, survival, testthatmimeminqamitml        \"mice, miceadds, Amelia, lme4, nlme, lavaan, geepack, glmmTMB,\\nsurvival, knitr, rmarkdownmnormtnloptr       \"knitr, rmarkdown, xml2, testthat (>= 3.0.0), covrnumDerivopenssl      \"curl, testthat (>= 2.1.0), digest, knitr, rmarkdown,\\njsonlite, jose, sodiumordinal      \"lme4, nnet, xtable, testthat (>= 0.8), toolspan          \"mitools, lmepbivnormpillar       \"bit64, DBI, debugme, DiagrammeR, dplyr, formattable, ggplot2,\\nknitr, lubridate, nanotime, nycflights13, palmerpenguins,\\nrmarkdown, scales, stringi, survival, testthat (>= 3.1.1),\\ntibble, units (>= 0.7.2), vdiffr, withrpkgbuild     \"covr, cpp11, knitr, mockery, Rcpp, rmarkdown, testthat (>=\\n3.0.0), withrpkgconfig    \"covr, testthat, disposablespkgdown      \"covr, diffviewer, evaluate, htmltools, htmlwidgets, knitr,\\nlifecycle, methods, openssl, pkgload (>= 1.0.2), rsconnect,\\nrstudioapi, rticles, sass, testthat (>= 3.1.3), toolspkgload      \"bitops, covr, mathjaxr, mockr, pak, pkgbuild, Rcpp, remotes,\\nrstudioapi, testthatpraise       \"testthatprettyunits  \"codetools, covr, testthatprocessx     \"callr (>= 3.7.3), cli (>= 3.3.0), codetools, covr, curl,\\ndebugme, parallel, rlang (>= 1.0.2), testthat (>= 3.0.0),\\nwebfakes, withr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                #> ps           \"callr, covr, curl, pillar, pingr, processx (>= 3.1.0), R6,\\nrlang, testthat (>= 3.0.0), webfakespsych        \"psychTools, GPArotation, lavaan, lme4, Rcsdp, graph, knitr,\\nRgraphvizpurrr        \"covr, dplyr (>= 0.7.8), httr, knitr, lubridate, rmarkdown,\\ntestthat (>= 3.0.0), tibble, tidyselectquadprogtestthat, pryrragg         \"covr, graphics, grid, testthatrappdirs     \"roxygen2, testthat (>= 3.0.0), covr, withrrcmdcheck    \"covr, knitr, mockery, processx, ps, rmarkdown, svglite,\\ntestthat, webfakescpp         \"tinytest, inline, rbenchmark, pkgKittenreadr        \"covr, curl, datasets, knitr, rmarkdown, spelling, stringi,\\ntestthat (>= 3.1.2), tzdb (>= 0.1.1), waldo, withr, xmlrematch2     \"covr, testthatremotes      \"brew, callr, codetools, curl, covr, git2r (>= 0.23.0), knitr,\\nmockery, pkgbuild (>= 1.0.1), pingr, rmarkdown, rprojroot,\\ntestthat, webfakes, withrrex          \"covr, dplyr, ggplot2, Hmisc, knitr, magrittr, rmarkdown,\\nroxygen2, rvest, stringr, testthatrlang        \"cli (>= 3.1.0), covr, crayon, fs, glue, knitr, magrittr,\\nmethods, pillar, rmarkdown, stats, testthat (>= 3.0.0), tibble,\\nusethis, vctrs (>= 0.2.3), withrrmarkdown    \"digest, dygraphs, fs, rsconnect, downlit (>= 0.4.0), katex\\n(>= 1.4.0), sass (>= 0.4.0), shiny (>= 1.6.0), testthat (>=\\n3.0.3), tibble, vctrs, cleanrmd, withrrprojroot    \"covr, knitr, lifecycle, mockr, rmarkdown, testthat (>=\\n3.0.0), withrrsemsass         \"testthat, knitr, rmarkdown, withr, shiny, curlsem          \"polycor, DiagrammeR (>= 1.0.9)\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      #> semmcci      \"knitr, rmarkdown, testthat, MASS, psych, Amelia, bmemLavaansessioninfo  \"callr, covr, mockery, reticulate, rmarkdown, testthat, withrshapesnow         \"rlecuyersnowfall     \"Rmpistringistringr      \"covr, htmltools, htmlwidgets, knitr, rmarkdown, testthat (>=\\n3.0.0)\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                #> sys          \"unix (>= 1.4), spelling, testthatsystemfonts  \"testthat (>= 2.1.0), covr, knitr, rmarkdown, toolstestthat     \"covr, curl (>= 0.9.5), diffviewer (>= 0.1.0), knitr,\\nrmarkdown, rstudioapi, shiny, usethis, vctrs (>= 0.1.0), xmltextshaping  \"covr, knitr, rmarkdowntibble       \"bench, bit64, blob, brio, callr, cli, covr, crayon (>=\\n1.3.4), DiagrammeR, dplyr, evaluate, formattable, ggplot2,\\nhere, hms, htmltools, knitr, lubridate, mockr, nycflights13,\\npkgbuild, pkgload, purrr, rmarkdown, stringi, testthat (>=\\n3.0.2), tidyr, withr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  #> tidyr        \"covr, data.table, knitr, readr, repurrrsive (>= 1.1.0),\\nrmarkdown, testthattidyselect   \"covr, crayon, dplyr, knitr, magrittr, rmarkdown, stringr,\\ntestthat (>= 3.1.1), tibbletinytex      \"testit, rstudioapitzdb         \"covr, testthatucminf       \"numDerivutf8         \"cli, covr, knitr, rlang, rmarkdown, testthat (>= 3.0.0),\\nwithr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     #> vctrs        \"bit64, covr, crayon, dplyr (>= 0.8.5), generics, knitr,\\npillar (>= 1.4.4), pkgdown (>= 2.0.1), rmarkdown, testthat (>=\\n3.0.0), tibble (>= 3.1.3), waldo (>= 0.2.0), withr, xml2,\\nzeallotvroom        \"archive, bench (>= 1.1.0), covr, curl, dplyr, forcats, fs,\\nggplot2, knitr, patchwork, prettyunits, purrr, rmarkdown,\\nrstudioapi, scales, spelling, testthat (>= 2.1.0), tidyr,\\nutils, waldo, xmlwaldo        \"covr, R6, testthat (>= 3.0.0), withr, xmlwhisker      \"markdownwithr        \"callr, covr, DBI, knitr, lattice, methods, rlang, rmarkdown\\n(>= 2.12), RSQLite, testthatxfun         \"testit, parallel, codetools, rstudioapi, tinytex (>= 0.30),\\nmime, markdown (>= 1.5), knitr (>= 1.42), htmltools, remotes,\\npak, rhub, renv, curl, jsonlite, magick, yaml, rmarkdownxml2         \"covr, curl, httr, knitr, magrittr, mockery, rmarkdown,\\ntestthatxmlparsedata \"covr, testthat, xmlxopen        \"ps, testthatyaml         \"RUnitpak          \"callr (>= 3.7.0),\\ncli (>= 3.2.0),\\ncovr,\\ncurl (>= 4.3.2),\\ndesc (>= 1.4.1),\\ndigest,\\ndistro,\\nfilelock (>= 1.0.2),\\ngitcreds,\\nglue (>= 1.6.2),\\nmockery,\\npingr,\\njsonlite (>= 1.8.0),\\npkgcache (>= 2.0.4),\\npkgdepends (>= 0.4.0),\\npkgsearch (>= 3.1.0),\\nprettyunits,\\nprocessx (>= 3.8.1),\\nps (>= 1.6.0),\\nrprojroot (>= 2.0.2),\\nrstudioapi,\\ntestthat,\\nwithr\"                                                                                                                                                                                                                                                                                                                                                                                           #> base         \"methodsboot         \"MASS, survivalclasscluster      \"MASS, MatrixcodetoolscompilerdatasetsforeigngraphicsgrDevices    \"KernSmoothgridernSmooth   \"MASS, carDatalattice      \"KernSmooth, MASS, latticeExtra, colorspacelattice, nlme, nnet, survivalatrix       \"MASS, expmmethods      \"codetoolsmgcv         \"parallel, survival, MASS\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            #> nlme         \"Hmisc, MASS, SASmixednnetparallel     \"methodsrpart        \"survivalspatialsplines      \"Matrix, methodsstats        \"MASS, Matrix, SuppDists, methods, statsstatssurvivaltcltktools        \"codetools, methods, xml2, curl, commonmark, knitr, xfun,\\nmathjaxrutils        \"methods, xml2, commonmark, knitrnhances                                                              #> abind        NA                                                                    #> Amelia       NA                                                                    #> arm          NA                                                                    #> askpass      NA                                                                    #> backports    NA                                                                    #> base64enc    \"png\"                                                                 #> bit          NA                                                                    #> bit64        NA                                                                    #> bmemLavaan   NA                                                                    #> brio         NA                                                                    #> broom        NA                                                                    #> bslib        NA                                                                    #> cachem       NA                                                                    #> callr        NA                                                                    #> cli          NA                                                                    #> clipr        NA                                                                    #> coda         NA                                                                    #> covr         NA                                                                    #> crayon       NA                                                                    #> curl         NA                                                                    #> cyclocomp    NA                                                                    #> desc         NA                                                                    #> diffobj      NA                                                                    #> digest       NA                                                                    #> downlit      NA                                                                    #> dplyr        NA                                                                    #> ellipsis     NA                                                                    #> evaluate     NA                                                                    #> fansi        NA                                                                    #> fastmap      NA                                                                    #> fontawesome  NA                                                                    #> forcats      NA                                                                    #> foreach      NA                                                                    #> fs           NA                                                                    #> generics     NA                                                                    #> glmnet       NA                                                                    #> glue         NA                                                                    #> haven        NA                                                                    #> highr        NA                                                                    #> hms          NA                                                                    #> htmltools    \"knitr\"                                                               #> httr         NA                                                                    #> iterators    NA                                                                    #> jomo         NA                                                                    #> jquerylib    NA                                                                    #> jsonlite     NA                                                                    #> knitr        NA                                                                    #> lavaan       NA                                                                    #> lazyeval     NA                                                                    #> lifecycle    NA                                                                    #> lintr        \"data.table\"                                                          #> lme4         NA                                                                    #> magrittr     NA                                                                    #> memoise      NA                                                                    #> mi           NA                                                                    #> mice         NA                                                                    #> mime         NA                                                                    #> minqa        NA                                                                    #> mitml        NA                                                                    #> mnormt       NA                                                                    #> nloptr       NA                                                                    #> numDeriv     NA                                                                    #> openssl      NA                                                                    #> ordinal      NA                                                                    #> pan          NA                                                                    #> pbivnorm     NA                                                                    #> pillar       NA                                                                    #> pkgbuild     NA                                                                    #> pkgconfig    NA                                                                    #> pkgdown      NA                                                                    #> pkgload      NA                                                                    #> praise       NA                                                                    #> prettyunits  NA                                                                    #> processx     NA                                                                    #> ps           NA                                                                    #> psych        NA                                                                    #> purrr        NA                                                                    #> quadprog     NA                                                                    #> R6           NA                                                                    #> ragg         NA                                                                    #> rappdirs     NA                                                                    #> rcmdcheck    NA                                                                    #> Rcpp         NA                                                                    #> readr        NA                                                                    #> rematch2     NA                                                                    #> remotes      NA                                                                    #> rex          NA                                                                    #> rlang        \"winch\"                                                               #> rmarkdown    NA                                                                    #> rprojroot    NA                                                                    #> rsem         NA                                                                    #> sass         NA                                                                    #> sem          NA                                                                    #> semmcci      NA                                                                    #> sessioninfo  NA                                                                    #> shape        NA                                                                    #> snow         \"Rmpi\"                                                                #> snowfall     NA                                                                    #> stringi      NA                                                                    #> stringr      NA                                                                    #> sys          NA                                                                    #> systemfonts  NA                                                                    #> testthat     NA                                                                    #> textshaping  NA                                                                    #> tibble       NA                                                                    #> tidyr        NA                                                                    #> tidyselect   NA                                                                    #> tinytex      NA                                                                    #> tzdb         NA                                                                    #> ucminf       NA                                                                    #> utf8         NA                                                                    #> vctrs        NA                                                                    #> vroom        NA                                                                    #> waldo        NA                                                                    #> whisker      NA                                                                    #> withr        NA                                                                    #> xfun         NA                                                                    #> xml2         NA                                                                    #> xmlparsedata NA                                                                    #> xopen        NA                                                                    #> yaml         NA                                                                    #> pak          NA                                                                    #> base         NA                                                                    #> boot         NA                                                                    #> class        NA                                                                    #> cluster      NA                                                                    #> codetools    NA                                                                    #> compiler     NA                                                                    #> datasets     NA                                                                    #> foreign      NA                                                                    #> graphics     NA                                                                    #> grDevices    NA                                                                    #> grid         NA                                                                    #> KernSmooth   NA                                                                    #> lattice      \"chron\"                                                               #> MASS         NA                                                                    #> Matrix       \"MatrixModels, SparseM, graph, igraph, maptools, sfsmisc, sp,\\nspdep\" #> methods      NA                                                                    #> mgcv         NA                                                                    #> nlme         NA                                                                    #> nnet         NA                                                                    #> parallel     \"snow, Rmpi\"                                                          #> rpart        NA                                                                    #> spatial      NA                                                                    #> splines      NA                                                                    #> stats        NA                                                                    #> stats4       NA                                                                    #> survival     NA                                                                    #> tcltk        NA                                                                    #> tools        NA                                                                    #> utils        NA                                                                    #>              License                                  License_is_FOSS #> abind        \"LGPL (>= 2)\"                            NA              #> Amelia       \"GPL (>= 2)\"                             NA              #> arm          \"GPL (> 2)\"                              NA              #> askpass      \"MIT + file LICENSE\"                     NA              #> backports    \"GPL-2 | GPL-3\"                          NA              #> base64enc    \"GPL-2 | GPL-3\"                          NA              #> bit          \"GPL-2 | GPL-3\"                          NA              #> bit64        \"GPL-2 | GPL-3\"                          NA              #> bmemLavaan   \"GPL-2\"                                  NA              #> brio         \"MIT + file LICENSE\"                     NA              #> broom        \"MIT + file LICENSE\"                     NA              #> bslib        \"MIT + file LICENSE\"                     NA              #> cachem       \"MIT + file LICENSE\"                     NA              #> callr        \"MIT + file LICENSE\"                     NA              #> cli          \"MIT + file LICENSE\"                     NA              #> clipr        \"GPL-3\"                                  NA              #> coda         \"GPL (>= 2)\"                             NA              #> covr         \"MIT + file LICENSE\"                     NA              #> crayon       \"MIT + file LICENSE\"                     NA              #> curl         \"MIT + file LICENSE\"                     NA              #> cyclocomp    \"MIT + file LICENSE\"                     NA              #> desc         \"MIT + file LICENSE\"                     NA              #> diffobj      \"GPL-2 | GPL-3\"                          NA              #> digest       \"GPL (>= 2)\"                             NA              #> downlit      \"MIT + file LICENSE\"                     NA              #> dplyr        \"MIT + file LICENSE\"                     NA              #> ellipsis     \"MIT + file LICENSE\"                     NA              #> evaluate     \"MIT + file LICENSE\"                     NA              #> fansi        \"GPL-2 | GPL-3\"                          NA              #> fastmap      \"MIT + file LICENSE\"                     NA              #> fontawesome  \"MIT + file LICENSE\"                     NA              #> forcats      \"MIT + file LICENSE\"                     NA              #> foreach      \"Apache License (== 2.0)\"                NA              #> fs           \"MIT + file LICENSE\"                     NA              #> generics     \"MIT + file LICENSE\"                     NA              #> glmnet       \"GPL-2\"                                  NA              #> glue         \"MIT + file LICENSE\"                     NA              #> haven        \"MIT + file LICENSE\"                     NA              #> highr        \"GPL\"                                    NA              #> hms          \"MIT + file LICENSE\"                     NA              #> htmltools    \"GPL (>= 2)\"                             NA              #> httr         \"MIT + file LICENSE\"                     NA              #> iterators    \"Apache License (== 2.0)\"                NA              #> jomo         \"GPL-2\"                                  NA              #> jquerylib    \"MIT + file LICENSE\"                     NA              #> jsonlite     \"MIT + file LICENSE\"                     NA              #> knitr        \"GPL\"                                    NA              #> lavaan       \"GPL (>= 2)\"                             NA              #> lazyeval     \"GPL-3\"                                  NA              #> lifecycle    \"MIT + file LICENSE\"                     NA              #> lintr        \"MIT + file LICENSE\"                     NA              #> lme4         \"GPL (>= 2)\"                             NA              #> magrittr     \"MIT + file LICENSE\"                     NA              #> memoise      \"MIT + file LICENSE\"                     NA              #> mi           \"GPL (>= 2)\"                             NA              #> mice         \"GPL (>= 2)\"                             NA              #> mime         \"GPL\"                                    NA              #> minqa        \"GPL-2\"                                  NA              #> mitml        \"GPL (>= 2)\"                             NA              #> mnormt       \"GPL-2 | GPL-3\"                          NA              #> nloptr       \"LGPL (>= 3)\"                            NA              #> numDeriv     \"GPL-2\"                                  NA              #> openssl      \"MIT + file LICENSE\"                     NA              #> ordinal      \"GPL (>= 2)\"                             NA              #> pan          \"GPL-3\"                                  NA              #> pbivnorm     \"GPL (>= 2)\"                             NA              #> pillar       \"MIT + file LICENSE\"                     NA              #> pkgbuild     \"MIT + file LICENSE\"                     NA              #> pkgconfig    \"MIT + file LICENSE\"                     NA              #> pkgdown      \"MIT + file LICENSE\"                     NA              #> pkgload      \"GPL-3\"                                  NA              #> praise       \"MIT + file LICENSE\"                     NA              #> prettyunits  \"MIT + file LICENSE\"                     NA              #> processx     \"MIT + file LICENSE\"                     NA              #> ps           \"MIT + file LICENSE\"                     NA              #> psych        \"GPL (>= 2)\"                             NA              #> purrr        \"MIT + file LICENSE\"                     NA              #> quadprog     \"GPL (>= 2)\"                             NA              #> R6           \"MIT + file LICENSE\"                     NA              #> ragg         \"MIT + file LICENSE\"                     NA              #> rappdirs     \"MIT + file LICENSE\"                     NA              #> rcmdcheck    \"MIT + file LICENSE\"                     NA              #> Rcpp         \"GPL (>= 2)\"                             NA              #> readr        \"MIT + file LICENSE\"                     NA              #> rematch2     \"MIT + file LICENSE\"                     NA              #> remotes      \"MIT + file LICENSE\"                     NA              #> rex          \"MIT + file LICENSE\"                     NA              #> rlang        \"MIT + file LICENSE\"                     NA              #> rmarkdown    \"GPL-3\"                                  NA              #> rprojroot    \"MIT + file LICENSE\"                     NA              #> rsem         \"GPL-2\"                                  NA              #> sass         \"MIT + file LICENSE\"                     NA              #> sem          \"GPL (>= 2)\"                             NA              #> semmcci      \"MIT + file LICENSE\"                     NA              #> sessioninfo  \"GPL-2\"                                  NA              #> shape        \"GPL (>= 3)\"                             NA              #> snow         \"GPL\"                                    NA              #> snowfall     \"GPL\"                                    NA              #> stringi      \"file LICENSE\"                           \"yes\"           #> stringr      \"MIT + file LICENSE\"                     NA              #> sys          \"MIT + file LICENSE\"                     NA              #> systemfonts  \"MIT + file LICENSE\"                     NA              #> testthat     \"MIT + file LICENSE\"                     NA              #> textshaping  \"MIT + file LICENSE\"                     NA              #> tibble       \"MIT + file LICENSE\"                     NA              #> tidyr        \"MIT + file LICENSE\"                     NA              #> tidyselect   \"MIT + file LICENSE\"                     NA              #> tinytex      \"MIT + file LICENSE\"                     NA              #> tzdb         \"MIT + file LICENSE\"                     NA              #> ucminf       \"GPL (>= 2)\"                             NA              #> utf8         \"Apache License (== 2.0) | file LICENSE\" NA              #> vctrs        \"MIT + file LICENSE\"                     NA              #> vroom        \"MIT + file LICENSE\"                     NA              #> waldo        \"MIT + file LICENSE\"                     NA              #> whisker      \"GPL-3\"                                  NA              #> withr        \"MIT + file LICENSE\"                     NA              #> xfun         \"MIT + file LICENSE\"                     NA              #> xml2         \"MIT + file LICENSE\"                     NA              #> xmlparsedata \"MIT + file LICENSE\"                     NA              #> xopen        \"MIT + file LICENSE\"                     NA              #> yaml         \"BSD_3_clause + file LICENSE\"            NA              #> pak          \"GPL-3\"                                  NA              #> base         \"Part of R 4.3.1\"                        NA              #> boot         \"Unlimited\"                              NA              #> class        \"GPL-2 | GPL-3\"                          NA              #> cluster      \"GPL (>= 2)\"                             NA              #> codetools    \"GPL\"                                    NA              #> compiler     \"Part of R 4.3.1\"                        NA              #> datasets     \"Part of R 4.3.1\"                        NA              #> foreign      \"GPL (>= 2)\"                             NA              #> graphics     \"Part of R 4.3.1\"                        NA              #> grDevices    \"Part of R 4.3.1\"                        NA              #> grid         \"Part of R 4.3.1\"                        NA              #> KernSmooth   \"Unlimited\"                              NA              #> lattice      \"GPL (>= 2)\"                             NA              #> MASS         \"GPL-2 | GPL-3\"                          NA              #> Matrix       \"GPL (>= 2) | file LICENCE\"              NA              #> methods      \"Part of R 4.3.1\"                        NA              #> mgcv         \"GPL (>= 2)\"                             NA              #> nlme         \"GPL (>= 2)\"                             NA              #> nnet         \"GPL-2 | GPL-3\"                          NA              #> parallel     \"Part of R 4.3.1\"                        NA              #> rpart        \"GPL-2 | GPL-3\"                          NA              #> spatial      \"GPL-2 | GPL-3\"                          NA              #> splines      \"Part of R 4.3.1\"                        NA              #> stats        \"Part of R 4.3.1\"                        NA              #> stats4       \"Part of R 4.3.1\"                        NA              #> survival     \"LGPL (>= 2)\"                            NA              #> tcltk        \"Part of R 4.3.1\"                        NA              #> tools        \"Part of R 4.3.1\"                        NA              #> utils        \"Part of R 4.3.1\"                        NA              #>              License_restricts_use OS_type MD5sum NeedsCompilation Built   #> abind        NA                    NA      NA     \"no\"             \"4.3.0\" #> Amelia       NA                    NA      NA     \"yes\"            \"4.3.0\" #> arm          NA                    NA      NA     \"no\"             \"4.3.0\" #> askpass      NA                    NA      NA     \"yes\"            \"4.3.0\" #> backports    NA                    NA      NA     \"yes\"            \"4.3.0\" #> base64enc    NA                    NA      NA     \"yes\"            \"4.3.0\" #> bit          NA                    NA      NA     \"yes\"            \"4.3.0\" #> bit64        NA                    NA      NA     \"yes\"            \"4.3.0\" #> bmemLavaan   NA                    NA      NA     \"no\"             \"4.3.0\" #> brio         NA                    NA      NA     \"yes\"            \"4.3.0\" #> broom        NA                    NA      NA     \"no\"             \"4.3.0\" #> bslib        NA                    NA      NA     \"no\"             \"4.3.0\" #> cachem       NA                    NA      NA     \"yes\"            \"4.3.0\" #> callr        NA                    NA      NA     \"no\"             \"4.3.0\" #> cli          NA                    NA      NA     \"yes\"            \"4.3.0\" #> clipr        NA                    NA      NA     \"no\"             \"4.3.0\" #> coda         NA                    NA      NA     \"no\"             \"4.3.0\" #> covr         NA                    NA      NA     \"yes\"            \"4.3.0\" #> crayon       NA                    NA      NA     \"no\"             \"4.3.0\" #> curl         NA                    NA      NA     \"yes\"            \"4.3.0\" #> cyclocomp    NA                    NA      NA     \"no\"             \"4.3.0\" #> desc         NA                    NA      NA     \"no\"             \"4.3.0\" #> diffobj      NA                    NA      NA     \"yes\"            \"4.3.0\" #> digest       NA                    NA      NA     \"yes\"            \"4.3.0\" #> downlit      NA                    NA      NA     \"no\"             \"4.3.0\" #> dplyr        NA                    NA      NA     \"yes\"            \"4.3.0\" #> ellipsis     NA                    NA      NA     \"yes\"            \"4.3.0\" #> evaluate     NA                    NA      NA     \"no\"             \"4.3.0\" #> fansi        NA                    NA      NA     \"yes\"            \"4.3.0\" #> fastmap      NA                    NA      NA     \"yes\"            \"4.3.0\" #> fontawesome  NA                    NA      NA     \"no\"             \"4.3.0\" #> forcats      NA                    NA      NA     \"no\"             \"4.3.0\" #> foreach      NA                    NA      NA     \"no\"             \"4.3.0\" #> fs           NA                    NA      NA     \"yes\"            \"4.3.0\" #> generics     NA                    NA      NA     \"no\"             \"4.3.0\" #> glmnet       NA                    NA      NA     \"yes\"            \"4.3.0\" #> glue         NA                    NA      NA     \"yes\"            \"4.3.0\" #> haven        NA                    NA      NA     \"yes\"            \"4.3.0\" #> highr        NA                    NA      NA     \"no\"             \"4.3.0\" #> hms          NA                    NA      NA     \"no\"             \"4.3.0\" #> htmltools    NA                    NA      NA     \"yes\"            \"4.3.0\" #> httr         NA                    NA      NA     \"no\"             \"4.3.0\" #> iterators    NA                    NA      NA     \"no\"             \"4.3.0\" #> jomo         NA                    NA      NA     \"yes\"            \"4.3.0\" #> jquerylib    NA                    NA      NA     \"no\"             \"4.3.0\" #> jsonlite     NA                    NA      NA     \"yes\"            \"4.3.0\" #> knitr        NA                    NA      NA     \"no\"             \"4.3.0\" #> lavaan       NA                    NA      NA     \"no\"             \"4.3.0\" #> lazyeval     NA                    NA      NA     \"yes\"            \"4.3.0\" #> lifecycle    NA                    NA      NA     \"no\"             \"4.3.0\" #> lintr        NA                    NA      NA     \"no\"             \"4.3.0\" #> lme4         NA                    NA      NA     \"yes\"            \"4.3.0\" #> magrittr     NA                    NA      NA     \"yes\"            \"4.3.0\" #> memoise      NA                    NA      NA     \"no\"             \"4.3.0\" #> mi           NA                    NA      NA     \"no\"             \"4.3.0\" #> mice         NA                    NA      NA     \"yes\"            \"4.3.0\" #> mime         NA                    NA      NA     \"yes\"            \"4.3.0\" #> minqa        NA                    NA      NA     \"yes\"            \"4.3.0\" #> mitml        NA                    NA      NA     \"no\"             \"4.3.0\" #> mnormt       NA                    NA      NA     \"yes\"            \"4.3.0\" #> nloptr       NA                    NA      NA     \"yes\"            \"4.3.0\" #> numDeriv     NA                    NA      NA     \"no\"             \"4.3.0\" #> openssl      NA                    NA      NA     \"yes\"            \"4.3.0\" #> ordinal      NA                    NA      NA     \"yes\"            \"4.3.0\" #> pan          \"no\"                  NA      NA     \"yes\"            \"4.3.0\" #> pbivnorm     NA                    NA      NA     \"yes\"            \"4.3.0\" #> pillar       NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgbuild     NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgconfig    NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgdown      NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgload      NA                    NA      NA     \"no\"             \"4.3.0\" #> praise       NA                    NA      NA     \"no\"             \"4.3.0\" #> prettyunits  NA                    NA      NA     \"no\"             \"4.3.0\" #> processx     NA                    NA      NA     \"yes\"            \"4.3.0\" #> ps           NA                    NA      NA     \"yes\"            \"4.3.0\" #> psych        NA                    NA      NA     \"no\"             \"4.3.0\" #> purrr        NA                    NA      NA     \"yes\"            \"4.3.0\" #> quadprog     NA                    NA      NA     \"yes\"            \"4.3.0\" #> R6           NA                    NA      NA     \"no\"             \"4.3.0\" #> ragg         NA                    NA      NA     \"yes\"            \"4.3.0\" #> rappdirs     NA                    NA      NA     \"yes\"            \"4.3.0\" #> rcmdcheck    NA                    NA      NA     \"no\"             \"4.3.0\" #> Rcpp         NA                    NA      NA     \"yes\"            \"4.3.0\" #> readr        NA                    NA      NA     \"yes\"            \"4.3.0\" #> rematch2     NA                    NA      NA     \"no\"             \"4.3.0\" #> remotes      NA                    NA      NA     \"no\"             \"4.3.0\" #> rex          NA                    NA      NA     \"no\"             \"4.3.0\" #> rlang        NA                    NA      NA     \"yes\"            \"4.3.0\" #> rmarkdown    NA                    NA      NA     \"no\"             \"4.3.0\" #> rprojroot    NA                    NA      NA     \"no\"             \"4.3.0\" #> rsem         NA                    NA      NA     \"no\"             \"4.3.0\" #> sass         NA                    NA      NA     \"yes\"            \"4.3.0\" #> sem          NA                    NA      NA     \"yes\"            \"4.3.0\" #> semmcci      NA                    NA      NA     \"no\"             \"4.3.1\" #> sessioninfo  NA                    NA      NA     \"no\"             \"4.3.0\" #> shape        NA                    NA      NA     \"no\"             \"4.3.0\" #> snow         NA                    NA      NA     \"no\"             \"4.3.0\" #> snowfall     NA                    NA      NA     \"no\"             \"4.3.0\" #> stringi      NA                    NA      NA     \"yes\"            \"4.3.0\" #> stringr      NA                    NA      NA     \"no\"             \"4.3.0\" #> sys          NA                    NA      NA     \"yes\"            \"4.3.0\" #> systemfonts  NA                    NA      NA     \"yes\"            \"4.3.0\" #> testthat     NA                    NA      NA     \"yes\"            \"4.3.0\" #> textshaping  NA                    NA      NA     \"yes\"            \"4.3.0\" #> tibble       NA                    NA      NA     \"yes\"            \"4.3.0\" #> tidyr        NA                    NA      NA     \"yes\"            \"4.3.0\" #> tidyselect   NA                    NA      NA     \"no\"             \"4.3.0\" #> tinytex      NA                    NA      NA     \"no\"             \"4.3.0\" #> tzdb         NA                    NA      NA     \"yes\"            \"4.3.0\" #> ucminf       NA                    NA      NA     \"yes\"            \"4.3.0\" #> utf8         NA                    NA      NA     \"yes\"            \"4.3.0\" #> vctrs        NA                    NA      NA     \"yes\"            \"4.3.0\" #> vroom        NA                    NA      NA     \"yes\"            \"4.3.0\" #> waldo        NA                    NA      NA     \"no\"             \"4.3.0\" #> whisker      NA                    NA      NA     \"no\"             \"4.3.0\" #> withr        NA                    NA      NA     \"no\"             \"4.3.0\" #> xfun         NA                    NA      NA     \"yes\"            \"4.3.0\" #> xml2         NA                    NA      NA     \"yes\"            \"4.3.0\" #> xmlparsedata NA                    NA      NA     \"no\"             \"4.3.0\" #> xopen        NA                    NA      NA     \"no\"             \"4.3.0\" #> yaml         NA                    NA      NA     \"yes\"            \"4.3.0\" #> pak          NA                    NA      NA     NA               \"4.3.0\" #> base         NA                    NA      NA     NA               \"4.3.1\" #> boot         NA                    NA      NA     \"no\"             \"4.3.1\" #> class        NA                    NA      NA     \"yes\"            \"4.3.1\" #> cluster      NA                    NA      NA     \"yes\"            \"4.3.1\" #> codetools    NA                    NA      NA     \"no\"             \"4.3.1\" #> compiler     NA                    NA      NA     NA               \"4.3.1\" #> datasets     NA                    NA      NA     NA               \"4.3.1\" #> foreign      NA                    NA      NA     \"yes\"            \"4.3.1\" #> graphics     NA                    NA      NA     \"yes\"            \"4.3.1\" #> grDevices    NA                    NA      NA     \"yes\"            \"4.3.1\" #> grid         NA                    NA      NA     \"yes\"            \"4.3.1\" #> KernSmooth   NA                    NA      NA     \"yes\"            \"4.3.1\" #> lattice      NA                    NA      NA     \"yes\"            \"4.3.1\" #> MASS         NA                    NA      NA     \"yes\"            \"4.3.1\" #> Matrix       NA                    NA      NA     \"yes\"            \"4.3.1\" #> methods      NA                    NA      NA     \"yes\"            \"4.3.1\" #> mgcv         NA                    NA      NA     \"yes\"            \"4.3.1\" #> nlme         NA                    NA      NA     \"yes\"            \"4.3.1\" #> nnet         NA                    NA      NA     \"yes\"            \"4.3.1\" #> parallel     NA                    NA      NA     \"yes\"            \"4.3.1\" #> rpart        NA                    NA      NA     \"yes\"            \"4.3.1\" #> spatial      NA                    NA      NA     \"yes\"            \"4.3.1\" #> splines      NA                    NA      NA     \"yes\"            \"4.3.1\" #> stats        NA                    NA      NA     \"yes\"            \"4.3.1\" #> stats4       NA                    NA      NA     NA               \"4.3.1\" #> survival     NA                    NA      NA     \"yes\"            \"4.3.1\" #> tcltk        NA                    NA      NA     \"yes\"            \"4.3.1\" #> tools        NA                    NA      NA     \"yes\"            \"4.3.1\" #> utils        NA                    NA      NA     \"yes\"            \"4.3.1\""},{"path":"https://github.com/jeksterslab/semmcci/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ivan Jacob Agaloos Pesigan. Author, maintainer, copyright holder. Shu Fai Cheung. Contributor.","code":""},{"path":"https://github.com/jeksterslab/semmcci/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pesigan, . J. . & Cheung, S. F. (2023). Monte Carlo Confidence Intervals Structural Equation Modeling. Behavior Research Methods. https://doi.org/10.3758/s13428-023-02114-4","code":"@Article{,   author = {Ivan Jacob Agaloos Pesigan and Shu Fai Cheung},   title = {Monte Carlo Confidence Intervals in Structural Equation Modeling},   year = {2023},   doi = {10.3758/s13428-023-02114-4},   journal = {Behavior Research Methods},   note = {R package version 1.1.2.9000}, }"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"semmcci","dir":"","previous_headings":"","what":"Monte Carlo Confidence Intervals in Structural Equation Modeling","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"Ivan Jacob Agaloos Pesigan 2023-08-10","code":""},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"can install CRAN release semmcci : can install development version semmcci GitHub :","code":"install.packages(\"semmcci\") if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"jeksterslab/semmcci\")"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"Monte Carlo method, sampling distribution parameter estimates generated multivariate normal distribution using parameter estimates sampling variance-covariance matrix. Confidence intervals defined parameters generated obtaining percentiles corresponding 100(1 - α)% generated sampling distribution, α significance level. Monte Carlo confidence intervals free defined parameters models fitted structural equation modeling package lavaan can generated using semmcci package. package three main functions, namely, MC(), MCMI(), MCStd(). output lavaan passed first argument MC() function MCMI() function generate Monte Carlo confidence intervals. Monte Carlo confidence intervals standardized estimates can also generated passing output MC() function MCMI() function MCStd() function. description package code examples presented Pesigan Cheung (2023: https://doi.org/10.3758/s13428-023-02114-4).","code":""},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"common application Monte Carlo method generate confidence intervals indirect effect. simple mediation model, variable X effect variable Y, mediating variable M. mediating indirect effect product path coefficients fitted model.","code":"library(semmcci) library(lavaan)"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"data","dir":"","previous_headings":"Example","what":"Data","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"","code":"summary(df) #>        X                  M                  Y            #>  Min.   :-3.46501   Min.   :-3.29549   Min.   :-3.21122   #>  1st Qu.:-0.53852   1st Qu.:-0.64332   1st Qu.:-0.73204   #>  Median : 0.12017   Median :-0.04513   Median :-0.07118   #>  Mean   : 0.06095   Mean   :-0.00761   Mean   :-0.05176   #>  3rd Qu.: 0.66223   3rd Qu.: 0.67356   3rd Qu.: 0.62267   #>  Max.   : 2.82761   Max.   : 3.42189   Max.   : 2.84028   #>  NA's   :100        NA's   :100        NA's   :100"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"model-specification","dir":"","previous_headings":"Example","what":"Model Specification","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"monte-carlo-confidence-intervals","dir":"","previous_headings":"Example","what":"Monte Carlo Confidence Intervals","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"can now fit model using sem() function lavaan. use full-information maximum likelihood deal missing values. fit lavaan object can passed MC() function generate Monte Carlo confidence intervals.","code":"fit <- sem(data = df, model = model, missing = \"fiml\") mc <- MC(fit, R = 20000L, alpha = 0.05) mc #> Monte Carlo Confidence Intervals #>              est     se     R    2.5%   97.5% #> cp        0.2279 0.0329 20000  0.1639  0.2917 #> b         0.5130 0.0307 20000  0.4530  0.5733 #> a         0.4898 0.0329 20000  0.4261  0.5544 #> X~~X      0.8576 0.0400 20000  0.7785  0.9353 #> Y~~Y      0.5745 0.0280 20000  0.5193  0.6291 #> M~~M      0.7760 0.0373 20000  0.7028  0.8488 #> Y~1      -0.0592 0.0259 20000 -0.1106 -0.0089 #> M~1      -0.0330 0.0294 20000 -0.0898  0.0246 #> X~1       0.0573 0.0303 20000 -0.0014  0.1174 #> indirect  0.2512 0.0223 20000  0.2094  0.2967 #> direct    0.2279 0.0329 20000  0.1639  0.2917 #> total     0.4792 0.0325 20000  0.4151  0.5419"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"monte-carlo-confidence-intervals---multiple-imputation","dir":"","previous_headings":"Example","what":"Monte Carlo Confidence Intervals - Multiple Imputation","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"MCMI() function can used handle missing values using multiple imputation. MCMI() accepts output mice::mice(), Amelia::amelia(), list multiply imputed data sets. example, impute multivariate missing data normal model. fit model using lavaan using default listwise deletion. fit lavaan object mi object can passed MCMI() function generate Monte Carlo confidence intervals.","code":"mi <- mice::mice(   df,   method = \"norm\",   m = 100,   print = FALSE,   seed = 42 ) fit <- sem(data = df, model = model) mcmi <- MCMI(fit, mi = mi, R = 20000L, alpha = 0.05, seed = 42) mcmi #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>             est     se     R   2.5%  97.5% #> cp       0.2264 0.0337 20000 0.1593 0.2923 #> b        0.5118 0.0309 20000 0.4508 0.5727 #> a        0.4894 0.0324 20000 0.4255 0.5531 #> X~~X     0.8584 0.0408 20000 0.7782 0.9381 #> Y~~Y     0.5745 0.0283 20000 0.5194 0.6299 #> M~~M     0.7765 0.0366 20000 0.7037 0.8481 #> indirect 0.2505 0.0226 20000 0.2068 0.2955 #> direct   0.2264 0.0337 20000 0.1593 0.2923 #> total    0.4769 0.0325 20000 0.4132 0.5404"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"standardized-monte-carlo-confidence-intervals","dir":"","previous_headings":"Example","what":"Standardized Monte Carlo Confidence Intervals","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCMI() function MCStd().","code":"MCStd(mc, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>              est     se     R   2.5%  97.5% #> cp        0.2137 0.0307 20000 0.1533 0.2735 #> b         0.5146 0.0277 20000 0.4596 0.5671 #> a         0.4578 0.0275 20000 0.4031 0.5112 #> X~~X      1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y      0.5889 0.0261 20000 0.5373 0.6389 #> M~~M      0.7904 0.0251 20000 0.7387 0.8375 #> indirect -0.0600 0.0190 20000 0.1986 0.2729 #> direct   -0.0333 0.0307 20000 0.1533 0.2735 #> total     0.0619 0.0278 20000 0.3935 0.5015 MCStd(mcmi, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2143 0.0314 20000 0.1504 0.2737 #> b        0.5074 0.0278 20000 0.4584 0.5675 #> a        0.4660 0.0274 20000 0.4026 0.5099 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y     0.5954 0.0258 20000 0.5396 0.6405 #> M~~M     0.7829 0.0250 20000 0.7400 0.8379 #> indirect 0.2364 0.0195 20000 0.1969 0.2741 #> direct   0.2143 0.0314 20000 0.1504 0.2737 #> total    0.4507 0.0277 20000 0.3920 0.5013"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"See GitHub Pages package documentation.","code":""},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"cite semmcci publications, please cite Pesigan & Cheung (2023).","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Confidence Intervals — MC","title":"Monte Carlo Confidence Intervals — MC","text":"Calculates Monte Carlo confidence intervals free defined parameters.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Confidence Intervals — MC","text":"","code":"MC(   lav,   R = 20000L,   alpha = c(0.001, 0.01, 0.05),   decomposition = \"eigen\",   pd = TRUE,   tol = 1e-06,   seed = NULL )"},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Confidence Intervals — MC","text":"lav Object class lavaan. R Positive integer. Number Monte Carlo replications. alpha Numeric vector. Significance level \\(\\alpha\\). decomposition Character string. Matrix decomposition sampling variance-covariance matrix data generation. decomposition = \"chol\", use Cholesky decomposition. decomposition = \"eigen\", use eigenvalue decomposition. decomposition = \"svd\", use singular value decomposition. pd Logical. pd = TRUE, check sampling variance-covariance matrix positive definite using tol. tol Numeric. Tolerance used pd. seed Integer. Random seed reproducibility.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Confidence Intervals — MC","text":"Returns object class semmcci list following elements: call Function call. args List function arguments. thetahat Parameter estimates \\(\\hat{\\theta}\\). thetahatstar Sampling distribution parameter estimates \\(\\hat{\\theta}^{\\ast}\\). fun Function used (\"MC\").","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Monte Carlo Confidence Intervals — MC","text":"sampling distribution parameter estimates generated multivariate normal distribution using parameter estimates sampling variance-covariance matrix. Confidence intervals free defined parameters generated using simulated sampling distribution. Parameters can defined using := operator lavaan model syntax.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Monte Carlo Confidence Intervals — MC","text":"MacKinnon, D. P., Lockwood, C. M., & Williams, J. (2004). Confidence limits indirect effect: Distribution product resampling methods. Multivariate Behavioral Research, 39(1), 99-128. doi:10.1207/s15327906mbr3901_4 Pesigan, . J. ., & Cheung, S. F. (2023). Monte Carlo confidence intervals indirect effect missing data. Behavior Research Methods. doi:10.3758/s13428-023-02114-4 Preacher, K. J., & Selig, J. P. (2012). Advantages Monte Carlo confidence intervals indirect effects. Communication Methods Measures, 6(2), 77–98. doi:10.1080/19312458.2012.679848","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Monte Carlo Confidence Intervals — MC","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte Carlo Confidence Intervals — MC","text":"","code":"library(semmcci) library(lavaan) #> This is lavaan 0.6-16 #> lavaan is FREE software! Please report any bugs.  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- MC(   fit,   R = 20L, # use a large value e.g., 20000L for actual research   alpha = 0.05 ) #> Monte Carlo Confidence Intervals #>                       est     se  R    2.5%  97.5% #> cp                 0.2131 0.2876 20 -0.2670 0.7820 #> b                  0.5330 0.1246 20  0.3463 0.7870 #> a                  0.4235 0.1969 20  0.1957 0.7799 #> cond~~cond         0.2495 0.0305 20  0.1821 0.2916 #> reaction~~reaction 1.8453 0.2231 20  1.5913 2.3005 #> pmi~~pmi           1.7150 0.2177 20  1.3737 2.0467 #> reaction~1         0.4218 0.7074 20 -1.1337 1.5051 #> pmi~1              5.3973 0.1805 20  5.0747 5.6429 #> cond~1             0.4872 0.0383 20  0.4151 0.5461 #> indirect           0.2257 0.1185 20  0.0785 0.4476 #> direct             0.2131 0.2876 20 -0.2670 0.7820 #> total              0.4388 0.2649 20  0.1100 1.0346"},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"Calculates Monte Carlo confidence intervals free defined parameters. Missing values handled using multilple imputation.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"","code":"MCMI(   lav,   mi,   R = 20000L,   alpha = c(0.001, 0.01, 0.05),   decomposition = \"eigen\",   pd = TRUE,   tol = 1e-06,   seed = NULL )"},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"lav Object class lavaan. mi Object class mids (output mice::mice()), object class amelia (output Amelia::amelia()), list multiply imputed data sets. R Positive integer. Number Monte Carlo replications. alpha Numeric vector. Significance level \\(\\alpha\\). decomposition Character string. Matrix decomposition sampling variance-covariance matrix data generation. decomposition = \"chol\", use Cholesky decomposition. decomposition = \"eigen\", use eigenvalue decomposition. decomposition = \"svd\", use singular value decomposition. pd Logical. pd = TRUE, check sampling variance-covariance matrix positive definite using tol. tol Numeric. Tolerance used pd. seed Integer. Random seed reproducibility.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"Returns object class semmcci list following elements: call Function call. args List function arguments. thetahat Parameter estimates \\(\\hat{\\theta}\\). thetahatstar Sampling distribution parameter estimates \\(\\hat{\\theta}^{\\ast}\\). fun Function used (\"MCMI\").","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"sampling distribution parameter estimates generated multivariate normal distribution using parameter estimates sampling variance-covariance matrix obtained using multiple imputation. Confidence intervals free defined parameters generated using simulated sampling distribution. Parameters can defined using := operator lavaan model syntax.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"Pesigan, . J. ., & Cheung, S. F. (2023). Monte Carlo confidence intervals indirect effect missing data. Behavior Research Methods. doi:10.3758/s13428-023-02114-4 Rubin, D. B. (1987). Multiple imputation nonresponse surveys. John Wiley & Sons, Inc.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ MCMI(   fit,   mi = mi,   R = 20L, # use a large value e.g., 20000L for actual research   alpha = 0.05 ) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>                       est     se  R    2.5%  97.5% #> cp                 0.2865 0.3865 20 -0.3025 0.9815 #> b                  0.5114 0.0848 20  0.3919 0.6879 #> a                  0.5640 0.2683 20  0.0597 0.9065 #> cond~~cond         0.2475 0.0405 20  0.1686 0.3080 #> reaction~~reaction 1.8373 0.2032 20  1.5290 2.2178 #> pmi~~pmi           1.7037 0.2488 20  1.3543 2.2960 #> indirect           0.2885 0.1479 20  0.0294 0.5032 #> direct             0.2865 0.3865 20 -0.3025 0.9815 #> total              0.5750 0.4178 20 -0.1029 1.2785"},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals — MCStd","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"Calculates standardized Monte Carlo confidence intervals free defined parameters.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"","code":"MCStd(mc, alpha = c(0.001, 0.01, 0.05))"},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"mc Output MC() MCMI() function. alpha Numeric vector. Significance level \\(\\alpha\\).","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"Returns object class semmcci list following elements: call Function call. args List function arguments. thetahat Parameter estimates \\(\\hat{\\theta}\\). thetahatstar Sampling distribution parameter estimates \\(\\hat{\\theta}^{\\ast}\\). fun Function used (\"MCStd\").","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"empirical sampling distribution parameter estimates argument mc standardized, , randomly generated vector parameters standardized. Defined parameters computed standardized component parameters. Confidence intervals generated using standardized empirical sampling distribution.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"Pesigan, . J. ., & Cheung, S. F. (2023). Monte Carlo confidence intervals indirect effect missing data. Behavior Research Methods. doi:10.3758/s13428-023-02114-4","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 20L, # use a large value e.g., 20000L for actual research   alpha = 0.05 )  ## Standardized Monte Carlo ------------------------------------------------ MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>                       est     se  R    2.5%  97.5% #> cp                 0.1700 0.0783 20  0.0524 0.2946 #> b                  0.4341 0.0785 20  0.2567 0.5140 #> a                  0.0915 0.0805 20 -0.0408 0.2058 #> cond~~cond         1.0000 0.0000 20  1.0000 1.0000 #> reaction~~reaction 0.7691 0.0853 20  0.6447 0.9124 #> pmi~~pmi           0.9916 0.0135 20  0.9576 1.0000 #> indirect           0.2956 0.0339 20 -0.0160 0.0794 #> direct             4.0656 0.0783 20  0.0524 0.2946 #> total              0.9453 0.0943 20  0.0662 0.3647  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 20L, # use a large value e.g., 20000L for actual research   alpha = 0.05 )  ## Standardized Monte Carlo ------------------------------------------------ MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>                       est     se  R    2.5%  97.5% #> cp                 0.1572 0.0815 20  0.0420 0.2982 #> b                  0.4306 0.0553 20  0.3474 0.5419 #> a                  0.1008 0.0965 20 -0.0805 0.2438 #> cond~~cond         1.0000 0.0000 20  1.0000 1.0000 #> reaction~~reaction 0.7762 0.0660 20  0.6545 0.8746 #> pmi~~pmi           0.9898 0.0194 20  0.9399 0.9999 #> indirect           0.0434 0.0444 20 -0.0303 0.1243 #> direct             0.1572 0.0815 20  0.0420 0.2982 #> total              0.2006 0.0962 20  0.0444 0.3799"},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Estimates — coef.semmcci","title":"Parameter Estimates — coef.semmcci","text":"Parameter Estimates","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Estimates — coef.semmcci","text":"","code":"# S3 method for semmcci coef(object, ...)"},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Estimates — coef.semmcci","text":"object Object class semmcci. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Estimates — coef.semmcci","text":"Returns vector parameter estimates.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parameter Estimates — coef.semmcci","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter Estimates — coef.semmcci","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 20L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) coef(unstd) #>                 cp                  b                  a         cond~~cond  #>         0.09305402         0.52708036         0.45200342         0.24730155  #> reaction~~reaction           pmi~~pmi         reaction~1              pmi~1  #>         1.93613741         1.54937338         0.51995025         5.39708262  #>             cond~1           indirect             direct              total  #>         0.45732137         0.23824212         0.09305402         0.33129615  coef(std) #>                 cp                  b                  a         cond~~cond  #>          0.0299097          0.4309101          0.1777088          1.0000000  #> reaction~~reaction           pmi~~pmi         reaction~1              pmi~1  #>          0.8088412          0.9684196          0.3360666          4.2669033  #>             cond~1           indirect             direct              total  #>          0.9196193          0.0765765          0.0299097          0.1064862   # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 20L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) coef(unstd) #>                 cp                  b                  a         cond~~cond  #>          0.2017454          0.5326567          0.3461988          0.2463877  #> reaction~~reaction           pmi~~pmi           indirect             direct  #>          1.9515979          1.5485928          0.1851114          0.2017454  #>              total  #>          0.3868568  coef(std) #>                 cp                  b                  a         cond~~cond  #>       -0.003761351        0.410718582        0.173173461        1.000000000  #> reaction~~reaction           pmi~~pmi           indirect             direct  #>        0.831831155        0.970010952        0.071125558       -0.003761351  #>              total  #>        0.067364208"},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"Monte Carlo Confidence Intervals Parameter Estimates","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"","code":"# S3 method for semmcci confint(object, parm = NULL, level = 0.95, ...)"},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"object Object class semmcci. parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. level confidence level required. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"Returns matrix confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 20L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) confint(unstd) #>                           2.5 %    97.5 % #> cp                 -0.206625086 0.7122756 #> b                   0.381649747 0.7758047 #> a                   0.070050519 0.9799527 #> cond~~cond          0.182674441 0.3109429 #> reaction~~reaction  1.539072027 2.1913164 #> pmi~~pmi            1.502421107 2.1534137 #> reaction~1         -0.961660139 1.2362827 #> pmi~1               5.075744928 5.7674539 #> cond~1              0.377059172 0.5297517 #> indirect            0.029031780 0.5030992 #> direct             -0.206625086 0.7122756 #> total               0.002550312 0.7696781 confint(std) #>                           2.5 %    97.5 % #> cp                 -0.058251973 0.2483288 #> b                   0.359762259 0.5978507 #> a                   0.026427154 0.3307419 #> cond~~cond          1.000000000 1.0000000 #> reaction~~reaction  0.637802779 0.8539461 #> pmi~~pmi            0.889612613 0.9991533 #> indirect            0.010051439 0.1630810 #> direct             -0.058251973 0.2483288 #> total               0.005600779 0.2653215  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 20L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) confint(unstd) #>                          2.5 %    97.5 % #> cp                 -0.20899032 0.7745438 #> b                   0.33857289 0.7423658 #> a                   0.18969479 1.0149236 #> cond~~cond          0.19306305 0.2825446 #> reaction~~reaction  1.15697661 2.1348105 #> pmi~~pmi            1.23795409 2.1756751 #> indirect            0.07240191 0.5973287 #> direct             -0.20899032 0.7745438 #> total               0.06325746 1.0616317 confint(std) #>                          2.5 %    97.5 % #> cp                 -0.06170346 0.2519213 #> b                   0.30957412 0.5725352 #> a                   0.06592504 0.3561493 #> cond~~cond          1.00000000 1.0000000 #> reaction~~reaction  0.65149530 0.8887736 #> pmi~~pmi            0.87315604 0.9947182 #> indirect            0.02363812 0.1700885 #> direct             -0.06170346 0.2519213 #> total               0.02159978 0.3347737"},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for Object of Class semmcci — print.semmcci","title":"Print Method for Object of Class semmcci — print.semmcci","text":"Print Method Object Class semmcci","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for Object of Class semmcci — print.semmcci","text":"","code":"# S3 method for semmcci print(x, alpha = NULL, digits = 4, ...)"},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for Object of Class semmcci — print.semmcci","text":"x object class semmcci. alpha Numeric vector. Significance level \\(\\alpha\\). alpha = NULL, use argument alpha used x. digits Integer indicating number decimal places display. ... arguments.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Method for Object of Class semmcci — print.semmcci","text":"Returns matrix estimates, standard errors, number Monte Carlo replications, confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print Method for Object of Class semmcci — print.semmcci","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Method for Object of Class semmcci — print.semmcci","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 20L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) print(unstd) #> Monte Carlo Confidence Intervals #>                       est     se  R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.0796 0.2512 20 -0.4169 -0.4154 -0.4090 0.3549 0.3744 #> b                  0.5441 0.0800 20  0.4666  0.4673  0.4701 0.7525 0.7590 #> a                  0.4569 0.2696 20  0.0349  0.0448  0.0889 0.9775 1.0113 #> cond~~cond         0.2496 0.0310 20  0.1910  0.1914  0.1934 0.2927 0.2946 #> reaction~~reaction 1.8509 0.2328 20  1.3004  1.3125  1.3662 2.2037 2.2518 #> pmi~~pmi           1.8038 0.1774 20  1.4870  1.4920  1.5145 2.1370 2.1489 #> reaction~1         0.3773 0.5170 20 -1.0421 -1.0006 -0.8165 0.9068 0.9460 #> pmi~1              5.3580 0.1713 20  4.9525  4.9613  5.0008 5.6417 5.6785 #> cond~1             0.4879 0.0533 20  0.3975  0.3980  0.4006 0.5602 0.5683 #> indirect           0.2486 0.1591 20  0.0264  0.0324  0.0592 0.5974 0.6051 #> direct             0.0796 0.2512 20 -0.4169 -0.4154 -0.4090 0.3549 0.3744 #> total              0.3282 0.2779 20 -0.1669 -0.1582 -0.1195 0.7625 0.8188 #>                    99.95% #> cp                 0.3787 #> b                  0.7604 #> a                  1.0189 #> cond~~cond         0.2951 #> reaction~~reaction 2.2626 #> pmi~~pmi           2.1516 #> reaction~1         0.9548 #> pmi~1              5.6868 #> cond~1             0.5701 #> indirect           0.6068 #> direct             0.3787 #> total              0.8315 print(std) #> Standardized Monte Carlo Confidence Intervals #>                       est     se  R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.0256 0.0818 20 -0.1501 -0.1497 -0.1480 0.1160 0.1185 #> b                  0.4773 0.0594 20  0.4198  0.4202  0.4220 0.6233 0.6377 #> a                  0.1675 0.0910 20  0.0138  0.0183  0.0380 0.3447 0.3500 #> cond~~cond         1.0000 0.0000 20  1.0000  1.0000  1.0000 1.0000 1.0000 #> reaction~~reaction 0.7674 0.0627 20  0.5885  0.5898  0.5954 0.8011 0.8085 #> pmi~~pmi           0.9719 0.0371 20  0.8767  0.8775  0.8811 0.9979 0.9994 #> indirect           0.2430 0.0494 20  0.0088  0.0109  0.0202 0.1849 0.1889 #> direct             3.9330 0.0818 20 -0.1501 -0.1497 -0.1480 0.1160 0.1185 #> total              0.9767 0.0860 20 -0.0583 -0.0551 -0.0412 0.2276 0.2364 #>                    99.95% #> cp                 0.1191 #> b                  0.6409 #> a                  0.3512 #> cond~~cond         1.0000 #> reaction~~reaction 0.8102 #> pmi~~pmi           0.9998 #> indirect           0.1898 #> direct             0.1191 #> total              0.2384  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 20L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) print(unstd) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>                       est     se  R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.1798 0.3482 20 -0.4753 -0.4485 -0.3294 0.8598 0.9291 #> b                  0.5378 0.0913 20  0.3223  0.3240  0.3318 0.6758 0.6801 #> a                  0.4298 0.2955 20 -0.2525 -0.2231 -0.0923 0.9129 0.9705 #> cond~~cond         0.2499 0.0338 20  0.1867  0.1895  0.2020 0.3101 0.3172 #> reaction~~reaction 1.8774 0.2258 20  1.4215  1.4354  1.4970 2.2571 2.2592 #> pmi~~pmi           1.7633 0.1948 20  1.3547  1.3586  1.3759 2.0122 2.0162 #> indirect           0.2321 0.1562 20 -0.1175 -0.1049 -0.0489 0.5473 0.5560 #> direct             0.1798 0.3482 20 -0.4753 -0.4485 -0.3294 0.8598 0.9291 #> total              0.4119 0.4126 20 -0.2511 -0.2509 -0.2502 1.1853 1.2804 #>                    99.95% #> cp                 0.9446 #> b                  0.6811 #> a                  0.9834 #> cond~~cond         0.3188 #> reaction~~reaction 2.2596 #> pmi~~pmi           2.0171 #> indirect           0.5580 #> direct             0.9446 #> total              1.3018 print(std) #> Standardized Monte Carlo Confidence Intervals #>                       est     se  R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.0253 0.1181 20 -0.1600 -0.1502 -0.1067 0.3024 0.3227 #> b                  0.5144 0.0694 20  0.2737  0.2792  0.3037 0.5577 0.5747 #> a                  0.1640 0.1056 20 -0.0908 -0.0797 -0.0307 0.3233 0.3308 #> cond~~cond         1.0000 0.0000 20  1.0000  1.0000  1.0000 1.0000 1.0000 #> reaction~~reaction 0.7305 0.0614 20  0.6547  0.6566  0.6653 0.8712 0.8868 #> pmi~~pmi           0.9731 0.0329 20  0.8894  0.8905  0.8954 0.9981 0.9985 #> indirect           0.0843 0.0473 20 -0.0396 -0.0353 -0.0162 0.1565 0.1577 #> direct             0.0253 0.1181 20 -0.1600 -0.1502 -0.1067 0.3024 0.3227 #> total              0.1096 0.1390 20 -0.0846 -0.0845 -0.0842 0.4168 0.4447 #>                    99.95% #> cp                 0.3272 #> b                  0.5786 #> a                  0.3325 #> cond~~cond         1.0000 #> reaction~~reaction 0.8903 #> pmi~~pmi           0.9986 #> indirect           0.1580 #> direct             0.3272 #> total              0.4509"},{"path":"https://github.com/jeksterslab/semmcci/reference/semmcci-package.html","id":null,"dir":"Reference","previous_headings":"","what":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling — semmcci-package","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling — semmcci-package","text":"Monte Carlo confidence intervals free defined parameters models fitted structural equation modeling package 'lavaan' can generated using 'semmcci' package. 'semmcci' three main functions, namely, MC(), MCMI(), MCStd(). output 'lavaan' passed first argument MC() function MCMI() function generate Monte Carlo confidence intervals. Monte Carlo confidence intervals standardized estimates can also generated passing output MC() function MCMI() function MCStd() function. description package code examples presented Pesigan Cheung (2023) doi:10.3758/s13428-023-02114-4 .","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/reference/semmcci-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling — semmcci-package","text":"Maintainer: Ivan Jacob Agaloos Pesigan r.jeksterslab@gmail.com (ORCID) [copyright holder] contributors: Shu Fai Cheung shufai.cheung@gmail.com (ORCID) [contributor]","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Method for an Object of Class semmcci — summary.semmcci","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"Summary Method Object Class semmcci","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"","code":"# S3 method for semmcci summary(object, alpha = NULL, digits = 4, ...)"},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"object Object class semmcci. alpha Numeric vector. Significance level \\(\\alpha\\). alpha = NULL, use argument alpha used object. digits Digits print. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"Returns matrix estimates, standard errors, number Monte Carlo replications, confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 20L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) summary(unstd) #> Monte Carlo Confidence Intervals #>                       est     se  R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.4396 0.3154 20  0.1960  0.2016  0.2264 1.1124 1.1322 #> b                  0.4893 0.1207 20  0.2685  0.2690  0.2713 0.6635 0.6683 #> a                  0.4984 0.2806 20 -0.0891 -0.0826 -0.0534 0.9024 0.9250 #> cond~~cond         0.2479 0.0372 20  0.1857  0.1864  0.1894 0.3040 0.3107 #> reaction~~reaction 1.9422 0.2569 20  1.3551  1.3636  1.4014 2.2290 2.2812 #> pmi~~pmi           1.7602 0.1841 20  1.4437  1.4508  1.4826 2.1380 2.1726 #> reaction~1         0.5714 0.6514 20 -0.4163 -0.4114 -0.3897 1.6326 1.6958 #> pmi~1              5.3547 0.1937 20  5.1025  5.1061  5.1222 5.7886 5.8122 #> cond~1             0.4637 0.0351 20  0.3868  0.3874  0.3902 0.5124 0.5198 #> indirect           0.2439 0.1275 20 -0.0585 -0.0538 -0.0328 0.4106 0.4553 #> direct             0.4396 0.3154 20  0.1960  0.2016  0.2264 1.1124 1.1322 #> total              0.6835 0.3037 20  0.2502  0.2586  0.2962 1.2286 1.2480 #>                    99.95% #> cp                 1.1366 #> b                  0.6694 #> a                  0.9301 #> cond~~cond         0.3122 #> reaction~~reaction 2.2929 #> pmi~~pmi           2.1804 #> reaction~1         1.7100 #> pmi~1              5.8174 #> cond~1             0.5215 #> indirect           0.4654 #> direct             1.1366 #> total              1.2524 summary(std) #> Standardized Monte Carlo Confidence Intervals #>                       est     se  R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.1390 0.0973 20  0.0710  0.0716  0.0745 0.3475 0.3569 #> b                  0.4194 0.0875 20  0.2514  0.2518  0.2536 0.5364 0.5506 #> a                  0.1839 0.1002 20 -0.0390 -0.0361 -0.0228 0.3203 0.3456 #> cond~~cond         1.0000 0.0000 20  1.0000  1.0000  1.0000 1.0000 1.0000 #> reaction~~reaction 0.7833 0.0608 20  0.6558  0.6559  0.6563 0.8699 0.8703 #> pmi~~pmi           0.9662 0.0330 20  0.8765  0.8802  0.8963 0.9997 0.9999 #> indirect           0.3628 0.0397 20 -0.0193 -0.0177 -0.0108 0.1246 0.1312 #> direct             3.9672 0.0973 20  0.0710  0.0716  0.0745 0.3475 0.3569 #> total              0.9312 0.0918 20  0.0824  0.0850  0.0964 0.3815 0.3929 #>                    99.95% #> cp                 0.3590 #> b                  0.5538 #> a                  0.3513 #> cond~~cond         1.0000 #> reaction~~reaction 0.8704 #> pmi~~pmi           1.0000 #> indirect           0.1327 #> direct             0.3590 #> total              0.3955  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 20L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) summary(unstd) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>                       est     se  R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.3211 0.3128 20 -0.2175 -0.2153 -0.2056 0.9131 0.9187 #> b                  0.4756 0.1180 20  0.3632  0.3640  0.3674 0.7102 0.7114 #> a                  0.5318 0.2815 20  0.1382  0.1395  0.1450 1.1345 1.1700 #> cond~~cond         0.2480 0.0306 20  0.1928  0.1941  0.2001 0.3065 0.3114 #> reaction~~reaction 2.0159 0.2693 20  1.4552  1.4650  1.5085 2.4577 2.5329 #> pmi~~pmi           1.6960 0.2350 20  1.1222  1.1376  1.2057 2.0579 2.0699 #> indirect           0.2508 0.1725 20  0.0619  0.0621  0.0627 0.6179 0.6386 #> direct             0.3211 0.3128 20 -0.2175 -0.2153 -0.2056 0.9131 0.9187 #> total              0.5718 0.3865 20  0.0802  0.0805  0.0818 1.4519 1.5415 #>                    99.95% #> cp                 0.9200 #> b                  0.7117 #> a                  1.1780 #> cond~~cond         0.3125 #> reaction~~reaction 2.5498 #> pmi~~pmi           2.0726 #> indirect           0.6433 #> direct             0.9200 #> total              1.5617 summary(std) #> Standardized Monte Carlo Confidence Intervals #>                       est     se  R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.1566 0.0999 20 -0.0750 -0.0731 -0.0647 0.2958 0.3155 #> b                  0.4415 0.0794 20  0.2505  0.2566  0.2841 0.5581 0.5646 #> a                  0.1890 0.1053 20  0.0467  0.0477  0.0518 0.4195 0.4197 #> cond~~cond         1.0000 0.0000 20  1.0000  1.0000  1.0000 1.0000 1.0000 #> reaction~~reaction 0.7544 0.0844 20  0.6259  0.6260  0.6264 0.8945 0.9038 #> pmi~~pmi           0.9643 0.0498 20  0.8238  0.8238  0.8240 0.9973 0.9977 #> indirect           0.0834 0.0512 20  0.0179  0.0180  0.0187 0.1908 0.1929 #> direct             0.1566 0.0999 20 -0.0750 -0.0731 -0.0647 0.2958 0.3155 #> total              0.2400 0.1198 20  0.0242  0.0245  0.0258 0.4467 0.4545 #>                    99.95% #> cp                 0.3199 #> b                  0.5660 #> a                  0.4198 #> cond~~cond         1.0000 #> reaction~~reaction 0.9060 #> pmi~~pmi           0.9978 #> indirect           0.1933 #> direct             0.3199 #> total              0.4563"},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"Sampling Covariance Matrix Parameter Estimates","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"","code":"# S3 method for semmcci vcov(object, ...)"},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"object Object class semmcci. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"Returns matrix variance-covariance matrix parameter estimates.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 20L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) vcov(unstd) #>                              cp             b             a    cond~~cond #> cp                  0.086092614 -0.0192218564  0.0058599315 -2.066126e-03 #> b                  -0.019221856  0.0130394435 -0.0064596226  1.387071e-03 #> a                   0.005859931 -0.0064596226  0.0937272770  1.000284e-03 #> cond~~cond         -0.002066126  0.0013870708  0.0010002837  1.323534e-03 #> reaction~~reaction  0.008179443  0.0038970207 -0.0059392856  1.990487e-03 #> pmi~~pmi            0.012237140 -0.0038654763 -0.0004288157  2.040895e-03 #> reaction~1          0.070298131 -0.0675833148  0.0394905520 -7.660083e-03 #> pmi~1               0.004365185  0.0028429158 -0.0484364919 -7.697579e-05 #> cond~1              0.003057622 -0.0001116999  0.0002523319  4.772394e-05 #> indirect           -0.001899717  0.0014780493  0.0437867779  9.711067e-04 #> direct              0.086092614 -0.0192218564  0.0058599315 -2.066126e-03 #> total               0.084192897 -0.0177438072  0.0496467094 -1.095020e-03 #>                    reaction~~reaction      pmi~~pmi   reaction~1         pmi~1 #> cp                       0.0081794435  0.0122371399  0.070298131  4.365185e-03 #> b                        0.0038970207 -0.0038654763 -0.067583315  2.842916e-03 #> a                       -0.0059392856 -0.0004288157  0.039490552 -4.843649e-02 #> cond~~cond               0.0019904874  0.0020408948 -0.007660083 -7.697579e-05 #> reaction~~reaction       0.0282040529 -0.0084422993 -0.030611570  4.373938e-03 #> pmi~~pmi                -0.0084422993  0.0422066411  0.017390325  3.326505e-03 #> reaction~1              -0.0306115701  0.0173903246  0.371719098 -1.808650e-02 #> pmi~1                    0.0043739377  0.0033265049 -0.018086496  3.600816e-02 #> cond~1                  -0.0010239004  0.0019121707 -0.002876511 -7.666041e-04 #> indirect                 0.0005598642  0.0008542296 -0.005585305 -2.260698e-02 #> direct                   0.0081794435  0.0122371399  0.070298131  4.365185e-03 #> total                    0.0087393077  0.0130913694  0.064712826 -1.824179e-02 #>                           cond~1      indirect       direct        total #> cp                  3.057622e-03 -1.899717e-03  0.086092614  0.084192897 #> b                  -1.116999e-04  1.478049e-03 -0.019221856 -0.017743807 #> a                   2.523319e-04  4.378678e-02  0.005859931  0.049646709 #> cond~~cond          4.772394e-05  9.711067e-04 -0.002066126 -0.001095020 #> reaction~~reaction -1.023900e-03  5.598642e-04  0.008179443  0.008739308 #> pmi~~pmi            1.912171e-03  8.542296e-04  0.012237140  0.013091369 #> reaction~1         -2.876511e-03 -5.585305e-03  0.070298131  0.064712826 #> pmi~1              -7.666041e-04 -2.260698e-02  0.004365185 -0.018241791 #> cond~1              1.991696e-03 -9.837375e-05  0.003057622  0.002959249 #> indirect           -9.837375e-05  2.306711e-02 -0.001899717  0.021167392 #> direct              3.057622e-03 -1.899717e-03  0.086092614  0.084192897 #> total               2.959249e-03  2.116739e-02  0.084192897  0.105360289 vcov(std) #>                               cp             b             a    cond~~cond #> cp                  8.282710e-03 -4.946355e-03  7.624129e-04  2.297745e-18 #> b                  -4.946355e-03  7.198588e-03 -1.306390e-03 -2.777997e-18 #> a                   7.624129e-04 -1.306390e-03  1.411869e-02 -1.799828e-18 #> cond~~cond          2.297745e-18 -2.777997e-18 -1.799828e-18  1.751583e-32 #> reaction~~reaction -3.584955e-04 -3.045655e-03 -7.938402e-04  7.998814e-19 #> pmi~~pmi            3.114807e-04  1.608002e-04 -3.551668e-03  4.153547e-19 #> indirect           -1.512831e-04  3.751436e-04  5.655105e-03 -1.214518e-18 #> direct              8.282710e-03 -4.946355e-03  7.624129e-04  2.297745e-18 #> total               8.131427e-03 -4.571212e-03  6.417518e-03  1.083226e-18 #>                    reaction~~reaction      pmi~~pmi      indirect        direct #> cp                      -3.584955e-04  3.114807e-04 -1.512831e-04  8.282710e-03 #> b                       -3.045655e-03  1.608002e-04  3.751436e-04 -4.946355e-03 #> a                       -7.938402e-04 -3.551668e-03  5.655105e-03  7.624129e-04 #> cond~~cond               7.998814e-19  4.153547e-19 -1.214518e-18  2.297745e-18 #> reaction~~reaction       2.828268e-03  7.230913e-05 -7.651376e-04 -3.584955e-04 #> pmi~~pmi                 7.230913e-05  1.124544e-03 -1.370248e-03  3.114807e-04 #> indirect                -7.651376e-04 -1.370248e-03  2.462555e-03 -1.512831e-04 #> direct                  -3.584955e-04  3.114807e-04 -1.512831e-04  8.282710e-03 #> total                   -1.123633e-03 -1.058767e-03  2.311272e-03  8.131427e-03 #>                            total #> cp                  8.131427e-03 #> b                  -4.571212e-03 #> a                   6.417518e-03 #> cond~~cond          1.083226e-18 #> reaction~~reaction -1.123633e-03 #> pmi~~pmi           -1.058767e-03 #> indirect            2.311272e-03 #> direct              8.131427e-03 #> total               1.044270e-02  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 20L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) vcov(unstd) #>                               cp            b            a    cond~~cond #> cp                  0.0770070213 -0.018359332 -0.011652005 -0.0007169445 #> b                  -0.0183593317  0.017721772  0.006649517  0.0010581467 #> a                  -0.0116520049  0.006649517  0.071288349  0.0010105744 #> cond~~cond         -0.0007169445  0.001058147  0.001010574  0.0010493112 #> reaction~~reaction -0.0125249518 -0.006853531 -0.037908665 -0.0007434402 #> pmi~~pmi            0.0248482007 -0.011804194 -0.004498592 -0.0029095935 #> indirect           -0.0103995897  0.008955257  0.041041301  0.0011284545 #> direct              0.0770070213 -0.018359332 -0.011652005 -0.0007169445 #> total               0.0666074317 -0.009404075  0.029389297  0.0004115100 #>                    reaction~~reaction     pmi~~pmi     indirect        direct #> cp                      -0.0125249518  0.024848201 -0.010399590  0.0770070213 #> b                       -0.0068535306 -0.011804194  0.008955257 -0.0183593317 #> a                       -0.0379086653 -0.004498592  0.041041301 -0.0116520049 #> cond~~cond              -0.0007434402 -0.002909593  0.001128455 -0.0007169445 #> reaction~~reaction       0.0710330715 -0.017209031 -0.024354462 -0.0125249518 #> pmi~~pmi                -0.0172090311  0.073422747 -0.007403369  0.0248482007 #> indirect                -0.0243544624 -0.007403369  0.025935999 -0.0103995897 #> direct                  -0.0125249518  0.024848201 -0.010399590  0.0770070213 #> total                   -0.0368794142  0.017444831  0.015536409  0.0666074317 #>                           total #> cp                  0.066607432 #> b                  -0.009404075 #> a                   0.029389297 #> cond~~cond          0.000411510 #> reaction~~reaction -0.036879414 #> pmi~~pmi            0.017444831 #> indirect            0.015536409 #> direct              0.066607432 #> total               0.082143841 vcov(std) #>                               cp             b             a    cond~~cond #> cp                  7.470042e-03 -3.021595e-03 -1.845601e-03  2.760268e-18 #> b                  -3.021595e-03  9.378332e-03  3.803841e-03  2.833998e-18 #> a                  -1.845601e-03  3.803841e-03  1.011036e-02 -7.916965e-19 #> cond~~cond          2.760268e-18  2.833998e-18 -7.916965e-19  1.816456e-32 #> reaction~~reaction  9.916599e-04 -8.234417e-03 -3.068311e-03 -4.000687e-18 #> pmi~~pmi            5.561524e-04 -1.276084e-03 -3.638769e-03  6.894973e-20 #> indirect           -1.055172e-03  2.879575e-03  5.293567e-03  5.148618e-19 #> direct              7.470042e-03 -3.021595e-03 -1.845601e-03  2.760268e-18 #> total               6.414870e-03 -1.420201e-04  3.447966e-03  3.275130e-18 #>                    reaction~~reaction      pmi~~pmi      indirect        direct #> cp                       9.916599e-04  5.561524e-04 -1.055172e-03  7.470042e-03 #> b                       -8.234417e-03 -1.276084e-03  2.879575e-03 -3.021595e-03 #> a                       -3.068311e-03 -3.638769e-03  5.293567e-03 -1.845601e-03 #> cond~~cond              -4.000687e-18  6.894973e-20  5.148618e-19  2.760268e-18 #> reaction~~reaction       7.830796e-03  1.044253e-03 -2.457228e-03  9.916599e-04 #> pmi~~pmi                 1.044253e-03  1.471362e-03 -1.961709e-03  5.561524e-04 #> indirect                -2.457228e-03 -1.961709e-03  2.937370e-03 -1.055172e-03 #> direct                   9.916599e-04  5.561524e-04 -1.055172e-03  7.470042e-03 #> total                   -1.465568e-03 -1.405556e-03  1.882198e-03  6.414870e-03 #>                            total #> cp                  6.414870e-03 #> b                  -1.420201e-04 #> a                   3.447966e-03 #> cond~~cond          3.275130e-18 #> reaction~~reaction -1.465568e-03 #> pmi~~pmi           -1.405556e-03 #> indirect            1.882198e-03 #> direct              6.414870e-03 #> total               8.297068e-03"},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"semmcci-1129000","dir":"Changelog","previous_headings":"","what":"semmcci 1.1.2.9000","title":"semmcci 1.1.2.9000","text":"Latest development version.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"patch-1-1-2","dir":"Changelog","previous_headings":"","what":"Patch","title":"semmcci 1.1.2","text":"Addressed M1Mac CRAN build issues.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"patch-1-1-1","dir":"Changelog","previous_headings":"","what":"Patch","title":"semmcci 1.1.1","text":"Minor documentation edits.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"minor-1-1-0","dir":"Changelog","previous_headings":"","what":"Minor","title":"semmcci 1.1.0","text":"Added MCMI() function.","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"semmcci-104","dir":"Changelog","previous_headings":"","what":"semmcci 1.0.4","title":"semmcci 1.0.4","text":"CRAN release: 2022-12-17","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"patch-1-0-4","dir":"Changelog","previous_headings":"","what":"Patch","title":"semmcci 1.0.4","text":"Minor refactoring data generation functions.","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"semmcci-103","dir":"Changelog","previous_headings":"","what":"semmcci 1.0.3","title":"semmcci 1.0.3","text":"CRAN release: 2022-10-16","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"patch-1-0-3","dir":"Changelog","previous_headings":"","what":"Patch","title":"semmcci 1.0.3","text":"Added decomposition, pd, tol arguments MC().","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"semmcci-102","dir":"Changelog","previous_headings":"","what":"semmcci 1.0.2","title":"semmcci 1.0.2","text":"CRAN release: 2022-10-04","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"patch-1-0-2","dir":"Changelog","previous_headings":"","what":"Patch","title":"semmcci 1.0.2","text":"Random variates multivatiate normal distribution generated using Cholesky decomposition sampling variance-covariance matrix. Eigen decomposition used Cholesky decomposition fails. NA returned calculation defined parameter fails MC(). NA returned standardization fails MCStd(). Added methods.","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"semmcci-101","dir":"Changelog","previous_headings":"","what":"semmcci 1.0.1","title":"semmcci 1.0.1","text":"CRAN release: 2022-09-13","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"patch-1-0-1","dir":"Changelog","previous_headings":"","what":"Patch","title":"semmcci 1.0.1","text":"Initial CRAN release.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"major-1-0-0","dir":"Changelog","previous_headings":"","what":"Major","title":"semmcci 1.0.0","text":"Initial CRAN submission.","code":""}]

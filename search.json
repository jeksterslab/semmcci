[{"path":"https://github.com/jeksterslab/semmcci/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Ivan Jacob Agaloos Pesigan Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"n <- 1000 a <- 0.50 b <- 0.50 cp <- 0.25 s2_em <- 1 - a^2 s2_ey <- 1 - cp^2 - a^2 * b^2 - b^2 * s2_em - 2 * cp * a * b em <- rnorm(n = n, mean = 0, sd = sqrt(s2_em)) ey <- rnorm(n = n, mean = 0, sd = sqrt(s2_ey)) X <- rnorm(n = n) M <- a * X + em Y <- cp * X + b * M + ey df <- data.frame(X, M, Y)"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"can now fit model using sem() function lavaan.","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"fit lavaan object can passed MC() function semmcci generate Monte Carlo confidence intervals.","code":"MC(fit, R = 100L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>             est     se   R   2.5%  97.5% #> cp       0.2333 0.0265 100 0.1668 0.2717 #> b        0.5082 0.0275 100 0.4494 0.5557 #> a        0.4820 0.0296 100 0.4242 0.5451 #> X~~X     1.0590 0.0442 100 0.9758 1.1384 #> Y~~Y     0.5462 0.0252 100 0.4996 0.5931 #> M~~M     0.7527 0.0320 100 0.6897 0.8043 #> indirect 0.2449 0.0210 100 0.2050 0.2832 #> direct   0.2333 0.0265 100 0.1668 0.2717 #> total    0.4782 0.0297 100 0.4129 0.5263"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"nonparametric-bootstrap-confidence-intervals","dir":"Articles","previous_headings":"","what":"Nonparametric Bootstrap Confidence Intervals","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"Nonparametric bootstrap confidence intervals can generated lavaan using following.","code":"parameterEstimates(   sem(     data = df,     model = model,     se = \"bootstrap\",     bootstrap = 100L   ) ) #>        lhs op      rhs    label   est    se      z pvalue ci.lower ci.upper #> 1        Y  ~        X       cp 0.233 0.029  8.031      0    0.187    0.309 #> 2        Y  ~        M        b 0.508 0.025 20.273      0    0.452    0.559 #> 3        M  ~        X        a 0.482 0.026 18.832      0    0.431    0.550 #> 4        X ~~        X          1.059 0.045 23.660      0    0.978    1.161 #> 5        Y ~~        Y          0.546 0.024 22.789      0    0.506    0.602 #> 6        M ~~        M          0.753 0.036 20.844      0    0.685    0.826 #> 7 indirect :=      a*b indirect 0.245 0.019 13.196      0    0.204    0.284 #> 8   direct :=       cp   direct 0.233 0.029  7.991      0    0.187    0.309 #> 9    total := cp+(a*b)    total 0.478 0.029 16.684      0    0.417    0.538"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"arguments","dir":"Articles","previous_headings":"Benchmark","what":"Arguments","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"benchmark_complete_01 <- microbenchmark(   MC = {     fit <- sem(       data = df,       model = model     )     MC(       fit,       R = R,       decomposition = \"chol\",       pd = FALSE     )   },   NB = sem(     data = df,     model = model,     se = \"bootstrap\",     bootstrap = B   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"summary-of-benchmark-results","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"summary(benchmark_complete_01, unit = \"ms\") #>   expr        min         lq        mean      median         uq        max #> 1   MC    75.3065    79.5559    80.85108    81.37155    82.1669    83.5775 #> 2   NB 14685.8168 14821.4741 14940.56428 14933.12345 14999.8472 15420.0068 #>   neval #> 1    10 #> 2    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"summary-of-benchmark-results-relative-to-the-faster-method","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"summary(benchmark_complete_01, unit = \"relative\") #>   expr      min       lq     mean   median       uq      max neval #> 1   MC   1.0000   1.0000   1.0000   1.0000   1.0000   1.0000    10 #> 2   NB 195.0139 186.3026 184.7912 183.5177 182.5534 184.4995    10"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"benchmark---monte-carlo-method-with-precalculated-estimates","dir":"Articles","previous_headings":"","what":"Benchmark - Monte Carlo Method with Precalculated Estimates","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"fit <- sem(   data = df,   model = model ) benchmark_complete_02 <- microbenchmark(   MC = MC(     fit,     R = R,     decomposition = \"chol\",     pd = FALSE   ),   NB = sem(     data = df,     model = model,     se = \"bootstrap\",     bootstrap = B   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"summary-of-benchmark-results-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"summary(benchmark_complete_02, unit = \"ms\") #>   expr        min         lq        mean     median         uq        max neval #> 1   MC    22.3061    22.9079    31.53669    23.6381    27.8605    94.8445    10 #> 2   NB 14617.3860 14643.1128 14737.32871 14753.7351 14804.2540 14855.9154    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"summary-of-benchmark-results-relative-to-the-faster-method-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"summary(benchmark_complete_02, unit = \"relative\") #>   expr      min       lq     mean   median       uq      max neval #> 1   MC   1.0000   1.0000   1.0000   1.0000   1.0000   1.0000    10 #> 2   NB 655.3089 639.2167 467.3074 624.1506 531.3707 156.6344    10"},{"path":[]},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"n <- 1000 a <- 0.50 b <- 0.50 cp <- 0.25 s2_em <- 1 - a^2 s2_ey <- 1 - cp^2 - a^2 * b^2 - b^2 * s2_em - 2 * cp * a * b em <- rnorm(n = n, mean = 0, sd = sqrt(s2_em)) ey <- rnorm(n = n, mean = 0, sd = sqrt(s2_ey)) X <- rnorm(n = n) M <- a * X + em Y <- cp * X + b * M + ey df <- data.frame(X, M, Y)  # Create data set with missing values.  miss <- sample(1:dim(df)[1], 300) df[miss[1:100], \"X\"] <- NA df[miss[101:200], \"M\"] <- NA df[miss[201:300], \"Y\"] <- NA"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"can now fit model using sem() function lavaan. using missing = \"fiml\" handle missing data lavaan.","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"fit lavaan object can passed MC() function semmcci generate Monte Carlo confidence intervals.","code":"MC(fit, R = 100L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>             est     se   R   2.5%  97.5% #> cp       0.2419 0.0304 100 0.1797 0.2978 #> b        0.5166 0.0296 100 0.4681 0.5757 #> a        0.4989 0.0323 100 0.4446 0.5653 #> X~~X     1.0951 0.0584 100 0.9846 1.1975 #> Y~~Y     0.5796 0.0296 100 0.5202 0.6300 #> M~~M     0.8045 0.0440 100 0.7138 0.8784 #> indirect 0.2577 0.0213 100 0.2214 0.3013 #> direct   0.2419 0.0304 100 0.1797 0.2978 #> total    0.4996 0.0345 100 0.4288 0.5659"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"nonparametric-bootstrap-confidence-intervals","dir":"Articles","previous_headings":"","what":"Nonparametric Bootstrap Confidence Intervals","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"Nonparametric bootstrap confidence intervals can generated lavaan using following.","code":"parameterEstimates(   sem(     data = df,     model = model,     missing = \"fiml\",     se = \"bootstrap\",     bootstrap = 100L   ) ) #>         lhs op      rhs    label    est    se      z pvalue ci.lower ci.upper #> 1         Y  ~        X       cp  0.234 0.028  8.365  0.000    0.191    0.295 #> 2         Y  ~        M        b  0.511 0.031 16.512  0.000    0.446    0.574 #> 3         M  ~        X        a  0.481 0.029 16.869  0.000    0.418    0.535 #> 4         X ~~        X           1.059 0.042 24.941  0.000    0.976    1.151 #> 5         Y ~~        Y           0.554 0.023 23.590  0.000    0.503    0.596 #> 6         M ~~        M           0.756 0.036 21.049  0.000    0.676    0.824 #> 7         Y ~1                   -0.013 0.026 -0.495  0.621   -0.076    0.033 #> 8         M ~1                   -0.022 0.030 -0.731  0.465   -0.087    0.041 #> 9         X ~1                    0.002 0.035  0.072  0.943   -0.064    0.071 #> 10 indirect :=      a*b indirect  0.246 0.021 11.622  0.000    0.207    0.286 #> 11   direct :=       cp   direct  0.234 0.028  8.323  0.000    0.191    0.295 #> 12    total := cp+(a*b)    total  0.479 0.028 17.038  0.000    0.433    0.548"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"arguments","dir":"Articles","previous_headings":"Benchmark","what":"Arguments","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"benchmark_fiml_01 <- microbenchmark(   MC = {     fit <- sem(       data = df,       model = model,       missing = \"fiml\"     )     MC(       fit,       R = R,       decomposition = \"chol\",       pd = FALSE     )   },   NB = sem(     data = df,     model = model,     missing = \"fiml\",     se = \"bootstrap\",     bootstrap = B   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"summary-of-benchmark-results","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"summary(benchmark_fiml_01, unit = \"ms\") #>   expr        min         lq       mean     median         uq        max neval #> 1   MC   124.0302   126.0789   128.9055   126.5889   127.3613   148.4306    10 #> 2   NB 31913.1035 32134.0215 32226.2653 32248.3067 32300.8222 32450.6468    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"summary-of-benchmark-results-relative-to-the-faster-method","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"summary(benchmark_fiml_01, unit = \"relative\") #>   expr      min       lq     mean   median       uq     max neval #> 1   MC   1.0000   1.0000   1.0000   1.0000   1.0000   1.000    10 #> 2   NB 257.3011 254.8723 249.9991 254.7483 253.6157 218.625    10"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"benchmark---monte-carlo-method-with-precalculated-estimates","dir":"Articles","previous_headings":"","what":"Benchmark - Monte Carlo Method with Precalculated Estimates","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"fit <- sem(   data = df,   model = model,   missing = \"fiml\" ) benchmark_fiml_02 <- microbenchmark(   MC = MC(     fit,     R = R,     decomposition = \"chol\",     pd = FALSE   ),   NB = sem(     data = df,     model = model,     missing = \"fiml\",     se = \"bootstrap\",     bootstrap = B   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"summary-of-benchmark-results-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"summary(benchmark_fiml_02, unit = \"ms\") #>   expr        min         lq       mean    median         uq        max neval #> 1   MC    22.7459    23.0029    24.5997    23.192    27.2061    28.5297    10 #> 2   NB 29887.1894 30222.7663 30952.0774 30637.817 32071.9099 32197.4022    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"summary-of-benchmark-results-relative-to-the-faster-method-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"summary(benchmark_fiml_02, unit = \"relative\") #>   expr      min       lq    mean   median      uq      max neval #> 1   MC    1.000    1.000    1.00    1.000    1.00    1.000    10 #> 2   NB 1313.959 1313.868 1258.23 1321.051 1178.85 1128.557    10"},{"path":[]},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"n <- 1000 a <- 0.50 b <- 0.50 cp <- 0.25 s2_em <- 1 - a^2 s2_ey <- 1 - cp^2 - a^2 * b^2 - b^2 * s2_em - 2 * cp * a * b em <- rnorm(n = n, mean = 0, sd = sqrt(s2_em)) ey <- rnorm(n = n, mean = 0, sd = sqrt(s2_ey)) X <- rnorm(n = n) M <- a * X + em Y <- cp * X + b * M + ey df <- data.frame(X, M, Y)  # Create data set with missing values.  miss <- sample(1:dim(df)[1], 300) df[miss[1:100], \"X\"] <- NA df[miss[101:200], \"M\"] <- NA df[miss[201:300], \"Y\"] <- NA"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"multiple-imputation","dir":"Articles","previous_headings":"","what":"Multiple Imputation","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"Perform appropriate multiple imputation approach deal missing values. example, impute multivariate missing data normal model.","code":"mi <- amelia(   x = df,   m = 5L,   p2s = 0 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"can now fit model using sem() function lavaan. need deal missing values stage.","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"monte-carlo-confidence-intervals-multiple-imputation","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals (Multiple Imputation)","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"fit lavaan object mi mids object can passed MCMI() function semmcci generate Monte Carlo confidence intervals using multiple imputation described Pesigan Cheung (2023).","code":"MCMI(fit, R = 100L, alpha = 0.05, mi = mi) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>             est     se   R   2.5%  97.5% #> cp       0.2274 0.0280 100 0.1709 0.2763 #> b        0.5192 0.0330 100 0.4593 0.5797 #> a        0.4790 0.0323 100 0.4135 0.5542 #> X~~X     1.0613 0.0516 100 0.9676 1.1594 #> Y~~Y     0.5439 0.0300 100 0.4939 0.5980 #> M~~M     0.7642 0.0398 100 0.6768 0.8343 #> indirect 0.2486 0.0216 100 0.2125 0.2992 #> direct   0.2274 0.0280 100 0.1709 0.2763 #> total    0.4760 0.0288 100 0.4179 0.5319"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"nonparametric-bootstrap-confidence-intervals-multiple-imputation","dir":"Articles","previous_headings":"","what":"Nonparametric Bootstrap Confidence Intervals (Multiple Imputation)","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"Nonparametric bootstrap confidence intervals can generated bmemLavaan using following.","code":"summary(   bmemLavaan::bmem(data = df, model = model, method = \"mi\", boot = 100L, m = 5L) ) #>  #> Estimate method:                          multiple imputation #> Sample size:                              1000       #> Number of request bootstrap draws:        100        #> Number of successful bootstrap draws:     100        #> Type of confidence interval:              perc #>  #> Values of statistics: #>  #>                      Value      SE      2.5%     97.5% #>   chisq               0.000    0.000    0.000    0.000    #>   GFI                 1.000    0.000    1.000    1.000    #>   AGFI                1.000    0.000    1.000    1.000    #>   RMSEA               0.000    0.000    0.000    0.000    #>   NFI                 1.000    0.000    1.000    1.000    #>   NNFI                1.000    0.000    1.000    1.000    #>   CFI                 1.000    0.000    1.000    1.000    #>   BIC                 7731.643 87.828   7536.062 7892.065 #>   SRMR                0.000    0.000    0.000    0.000    #>  #> Estimation of parameters: #>  #>                      Estimate   SE      2.5%     97.5% #> Regressions: #>   Y ~ #>     X        (cp)     0.243    0.030    0.182    0.293 #>     M         (b)     0.506    0.032    0.453    0.570 #>   M ~ #>     X         (a)     0.484    0.030    0.426    0.546 #>  #> Variances: #>     X                 1.057    0.050    0.971    1.144 #>     Y                 0.556    0.028    0.498    0.604 #>     M                 0.748    0.036    0.684    0.818 #>  #>  #>  #> Defined parameters: #>     a*b    (indr)     0.245    0.023    0.206    0.289 #>     cp     (drct)     0.243    0.030    0.182    0.293 #>     cp+(*) (totl)     0.487    0.028    0.434    0.540"},{"path":[]},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"benchmark-1","dir":"Articles","previous_headings":"","what":"Benchmark","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"benchmark_mi_01 <- microbenchmark(   MC = {     fit <- sem(       data = df,       model = model     )     mi <- Amelia::amelia(       x = df,       m = m,       p2s = 0     )     MCMI(       fit,       R = R,       decomposition = \"chol\",       pd = FALSE,       mi = mi     )   },   NB = bmemLavaan::bmem(     data = df,     model = model,     method = \"mi\",     boot = B,     m = m   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"summary-of-benchmark-results","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"summary(benchmark_mi_01, unit = \"ms\") #>   expr        min         lq       mean     median         uq        max neval #> 1   MC   406.2125   406.5998   409.3887   407.2853   408.8127   424.2714    10 #> 2   NB 38763.2216 39015.8408 39204.3612 39201.3066 39343.2502 39613.4864    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"summary-of-benchmark-results-relative-to-the-faster-method","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"summary(benchmark_mi_01, unit = \"relative\") #>   expr      min       lq     mean   median       uq      max neval #> 1   MC  1.00000  1.00000  1.00000  1.00000  1.00000  1.00000    10 #> 2   NB 95.42597 95.95637 95.76316 96.25023 96.23784 93.36827    10"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"benchmark---monte-carlo-method-with-precalculated-estimates-and-multiple-imputation","dir":"Articles","previous_headings":"","what":"Benchmark - Monte Carlo Method with Precalculated Estimates and Multiple Imputation","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"fit <- sem(   data = df,   model = model ) mi <- Amelia::amelia(   x = df,   m = m,   p2s = 0 ) benchmark_mi_02 <- microbenchmark(   MC = MCMI(     fit,     R = R,     decomposition = \"chol\",     pd = FALSE,     mi = mi   ),   NB = bmemLavaan::bmem(     data = df,     model = model,     method = \"mi\",     boot = B,     m = m   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"summary-of-benchmark-results-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates and Multiple Imputation","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"summary(benchmark_mi_02, unit = \"ms\") #>   expr        min         lq      mean     median         uq        max neval #> 1   MC   256.4531   262.5562   267.004   267.0688   272.7924   274.7363    10 #> 2   NB 38535.4822 38987.9917 39184.781 39295.3801 39449.8581 39644.5561    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"summary-of-benchmark-results-relative-to-the-faster-method-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates and Multiple Imputation","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"summary(benchmark_mi_02, unit = \"relative\") #>   expr      min       lq     mean   median       uq      max neval #> 1   MC   1.0000   1.0000   1.0000   1.0000   1.0000   1.0000    10 #> 2   NB 150.2633 148.4939 146.7573 147.1358 144.6149 144.3004    10"},{"path":[]},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/example-1-simple.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Example 1: The Simple Mediation Model","text":"","code":"summary(df) #>        X                   M                   Y            #>  Min.   :-3.199558   Min.   :-3.371276   Min.   :-3.61432   #>  1st Qu.:-0.636035   1st Qu.:-0.692640   1st Qu.:-0.66146   #>  Median : 0.011377   Median : 0.007125   Median :-0.04726   #>  Mean   :-0.003207   Mean   :-0.023968   Mean   :-0.01677   #>  3rd Qu.: 0.651951   3rd Qu.: 0.647363   3rd Qu.: 0.62640   #>  Max.   : 3.470910   Max.   : 2.963216   Max.   : 3.09950 colMeans(df) #>            X            M            Y  #> -0.003206987 -0.023968103 -0.016774294 var(df) #>           X         M         Y #> X 1.0600162 0.5108780 0.5069458 #> M 0.5108780 0.9996606 0.6272104 #> Y 0.5069458 0.6272104 0.9837255"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-1-simple.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 1: The Simple Mediation Model","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example-1-simple.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 1: The Simple Mediation Model","text":"can now fit model using sem() function lavaan.","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-1-simple.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Example 1: The Simple Mediation Model","text":"fit lavaan object can passed MC() function generate Monte Carlo confidence intervals.","code":"MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2333 0.0260 20000 0.1832 0.2842 #> b        0.5082 0.0268 20000 0.4557 0.5605 #> a        0.4820 0.0265 20000 0.4306 0.5347 #> Y~~Y     0.5462 0.0244 20000 0.4985 0.5941 #> M~~M     0.7527 0.0336 20000 0.6865 0.8183 #> X~~X     1.0590 0.0000 20000 1.0590 1.0590 #> indirect 0.2449 0.0188 20000 0.2094 0.2834 #> direct   0.2333 0.0260 20000 0.1832 0.2842 #> total    0.4782 0.0264 20000 0.4268 0.5298"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-1-simple.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"Example 1: The Simple Mediation Model","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function. Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(data = df, model = model, fixed.x = FALSE) unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2422 0.0269 20000 0.1900 0.2954 #> b        0.5123 0.0245 20000 0.4628 0.5594 #> a        0.4963 0.0239 20000 0.4489 0.5424 #> Y~~Y     0.5558 0.0234 20000 0.5098 0.6017 #> M~~M     0.7537 0.0237 20000 0.7058 0.7985 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> indirect 0.2542 0.0175 20000 0.2200 0.2896 #> direct   0.2422 0.0269 20000 0.1900 0.2954 #> total    0.4964 0.0239 20000 0.4486 0.5422"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-1-simple.html","id":"standardized-monte-carlo-confidence-intervals---an-alternative-approach","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals - An Alternative Approach","title":"Example 1: The Simple Mediation Model","text":"example, confidence intervals standardized indirect effect generated specifying standardized indirect effect derived parameter using := operator. standardized indirect effect simple mediation model involves paths \\(\\) \\(b\\), standard deviations \\(X\\) \\(Y\\). given \\[   b   \\frac{s_X}{s_Y} \\] \\[   s_X   =   \\sqrt{     s_{X}^{2}   } \\] \\[   s_Y   =   \\sqrt{     c^{\\prime 2} s_{X}^{2}     + ^2 b^2 s_{X}^{2}     + b^2 s_{e_{M}}^{2}     + 2 c^{\\prime} b s_{X}^{2}     + s_{e_{Y}}^{2}   } \\] \\(s_{e_{Y}}^{2}\\) \\(s_{e_{M}}^{2}\\) residual variances regression equations. standardized indirect effect can defined using := operator named parameters model. row indirect_std corresponds confidence intervals standardized indirect effect.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ s2_X * X   M ~~ s2_em * M   Y ~~ s2_ey * Y   indirect_std := a * b * (     sqrt(s2_X) / sqrt(       (         cp^2 * s2_X + a^2 * b^2 * s2_X       ) + (         b^2 * s2_em       ) + (         2 * cp * b * a * s2_X       ) + s2_ey     )   ) \" fit <- sem(data = df, model = model, fixed.x = FALSE) MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>                 est     se     R   2.5%  97.5% #> cp           0.2333 0.0263 20000 0.1814 0.2842 #> b            0.5082 0.0268 20000 0.4563 0.5611 #> a            0.4820 0.0268 20000 0.4294 0.5343 #> s2_X         1.0590 0.0469 20000 0.9666 1.1502 #> s2_em        0.7527 0.0340 20000 0.6862 0.8194 #> s2_ey        0.5462 0.0243 20000 0.4987 0.5939 #> indirect_std 0.2542 0.0175 20000 0.2205 0.2891"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/example-2-serial.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Example 2: The Serial Mediation Model","text":"","code":"summary(df) #>        X                  M1                 M2                 Y            #>  Min.   :-3.37174   Min.   :-3.22690   Min.   :-4.33590   Min.   :-4.29019   #>  1st Qu.:-0.67546   1st Qu.:-0.73709   1st Qu.:-0.82188   1st Qu.:-0.86035   #>  Median :-0.01313   Median :-0.01651   Median :-0.03903   Median :-0.02704   #>  Mean   :-0.02582   Mean   :-0.01823   Mean   :-0.01620   Mean   :-0.03338   #>  3rd Qu.: 0.66400   3rd Qu.: 0.72825   3rd Qu.: 0.80016   3rd Qu.: 0.81721   #>  Max.   : 3.49530   Max.   : 3.69001   Max.   : 3.65147   Max.   : 4.05239 colMeans(df) #>           X          M1          M2           Y  #> -0.02582443 -0.01823021 -0.01619576 -0.03337865 var(df) #>            X        M1        M2         Y #> X  1.0050488 0.5123920 0.3848638 0.3333458 #> M1 0.5123920 1.2334461 0.6645408 0.5108946 #> M2 0.3848638 0.6645408 1.4321822 0.8012638 #> Y  0.3333458 0.5108946 0.8012638 1.4504417"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-2-serial.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 2: The Serial Mediation Model","text":"can define several indirect effects example: \\(X \\rightarrow M1 \\rightarrow M2 \\rightarrow Y\\) \\(X \\rightarrow M1 \\rightarrow M2\\) \\(X \\rightarrow M1 \\rightarrow Y\\) \\(M1 \\rightarrow M2 \\rightarrow Y\\) indirect effects defined using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b1 * M1 + b2 * M2   M2 ~ a2 * X + k * M1   M1 ~ a1 * X   # X -> M1 -> M2 -> Y   a1kb2 := a1 * k * b2   # X -> M1 -> M2   a1k := a1 * k   # X -> M1 -> Y   a2b2 := a2 * b2   # M1 -> M2 -> Y   kb2 := k * b2 \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example-2-serial.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 2: The Serial Mediation Model","text":"","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-2-serial.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Example 2: The Serial Mediation Model","text":"fit lavaan object can passed MC() function semmcci generate Monte Carlo confidence intervals.","code":"MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>           est     se     R   2.5%  97.5% #> cp     0.0868 0.0355 20000 0.0170 0.1549 #> b1     0.1190 0.0349 20000 0.0498 0.1874 #> b2     0.4809 0.0304 20000 0.4211 0.5403 #> a2     0.1373 0.0367 20000 0.0651 0.2097 #> k      0.4817 0.0329 20000 0.4166 0.5457 #> a1     0.5098 0.0312 20000 0.4491 0.5711 #> Y~~Y   0.9744 0.0437 20000 0.8900 1.0603 #> M2~~M2 1.0581 0.0472 20000 0.9669 1.1498 #> M1~~M1 0.9712 0.0434 20000 0.8854 1.0563 #> X~~X   1.0040 0.0000 20000 1.0040 1.0040 #> a1kb2  0.1181 0.0132 20000 0.0935 0.1450 #> a1k    0.2456 0.0225 20000 0.2027 0.2908 #> a2b2   0.0660 0.0181 20000 0.0311 0.1023 #> kb2    0.2317 0.0216 20000 0.1903 0.2752"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-2-serial.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"Example 2: The Serial Mediation Model","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function. Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(data = df, model = model, fixed.x = FALSE) unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>           est     se     R   2.5%  97.5% #> cp     0.0723 0.0293 20000 0.0151 0.1305 #> b1     0.1098 0.0323 20000 0.0460 0.1727 #> b2     0.4779 0.0276 20000 0.4230 0.5309 #> a2     0.1151 0.0306 20000 0.0546 0.1748 #> k      0.4470 0.0283 20000 0.3904 0.5013 #> a1     0.4602 0.0250 20000 0.4095 0.5077 #> Y~~Y   0.6725 0.0244 20000 0.6221 0.7185 #> M2~~M2 0.7396 0.0237 20000 0.6913 0.7846 #> M1~~M1 0.7882 0.0230 20000 0.7422 0.8323 #> X~~X   1.0000 0.0000 20000 1.0000 1.0000 #> a1kb2  0.0983 0.0104 20000 0.0789 0.1193 #> a1k    0.2057 0.0176 20000 0.1717 0.2405 #> a2b2   0.0550 0.0150 20000 0.0257 0.0849 #> kb2    0.2136 0.0188 20000 0.1774 0.2508"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/example-3-latent.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 3: The Latent Variable Simple Mediation Model","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   X =~ x1 + x2 + x3   M =~ x4 + x5 + x6   Y =~ x7 + x8 + x9   M ~ a * X   Y ~ b * M   indirect := a * b \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example-3-latent.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 3: The Latent Variable Simple Mediation Model","text":"can now fit model using sem() function lavaan using Holzinger Swineford (1939) data set.","code":"df <- lavaan::HolzingerSwineford1939 fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-3-latent.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Example 3: The Latent Variable Simple Mediation Model","text":"fit lavaan object can passed MC() function semmcci generate Monte Carlo confidence intervals.","code":"MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> X=~x1    1.0000 0.0000 20000 1.0000 1.0000 #> X=~x2    0.5554 0.1046 20000 0.3497 0.7585 #> X=~x3    0.7045 0.1163 20000 0.4748 0.9292 #> M=~x4    1.0000 0.0000 20000 1.0000 1.0000 #> M=~x5    1.1106 0.0652 20000 0.9829 1.2380 #> M=~x6    0.9268 0.0550 20000 0.8174 1.0352 #> Y=~x7    1.0000 0.0000 20000 1.0000 1.0000 #> Y=~x8    1.1482 0.1615 20000 0.8292 1.4680 #> Y=~x9    0.8854 0.1231 20000 0.6418 1.1257 #> a        0.5107 0.0963 20000 0.3224 0.7002 #> b        0.1884 0.0516 20000 0.0863 0.2881 #> x1~~x1   0.5320 0.1291 20000 0.2799 0.7844 #> x2~~x2   1.1269 0.1027 20000 0.9276 1.3278 #> x3~~x3   0.8647 0.0939 20000 0.6796 1.0483 #> x4~~x4   0.3714 0.0472 20000 0.2785 0.4634 #> x5~~x5   0.4519 0.0582 20000 0.3378 0.5654 #> x6~~x6   0.3551 0.0432 20000 0.2700 0.4381 #> x7~~x7   0.7309 0.0833 20000 0.5670 0.8946 #> x8~~x8   0.4257 0.0825 20000 0.2635 0.5887 #> x9~~x9   0.6605 0.0704 20000 0.5223 0.7963 #> X~~X     0.8264 0.1584 20000 0.5186 1.1365 #> M~~M     0.7638 0.0970 20000 0.5743 0.9546 #> Y~~Y     0.4175 0.0886 20000 0.2464 0.5925 #> indirect 0.0962 0.0320 20000 0.0398 0.1645"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-3-latent.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"Example 3: The Latent Variable Simple Mediation Model","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function.","code":"fit <- sem(data = df, model = model) unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> X=~x1    0.7800 0.0635 19998 0.6422 0.8906 #> X=~x2    0.4295 0.0614 19998 0.2957 0.5376 #> X=~x3    0.5672 0.0600 19998 0.4330 0.6682 #> M=~x4    0.8515 0.0226 19998 0.8030 0.8918 #> M=~x5    0.8531 0.0228 19998 0.8042 0.8942 #> M=~x6    0.8385 0.0237 19998 0.7876 0.8803 #> Y=~x7    0.6183 0.0551 19998 0.4979 0.7128 #> Y=~x8    0.7639 0.0557 19998 0.6413 0.8597 #> Y=~x9    0.5910 0.0546 19998 0.4732 0.6870 #> a        0.4691 0.0643 19998 0.3298 0.5839 #> b        0.2772 0.0700 19998 0.1360 0.4133 #> x1~~x1   0.3917 0.0974 19998 0.2069 0.5876 #> x2~~x2   0.8155 0.0515 19998 0.7110 0.9125 #> x3~~x3   0.6783 0.0662 19998 0.5536 0.8125 #> x4~~x4   0.2750 0.0384 19998 0.2047 0.3551 #> x5~~x5   0.2722 0.0387 19998 0.2004 0.3532 #> x6~~x6   0.2969 0.0396 19998 0.2250 0.3797 #> x7~~x7   0.6177 0.0667 19998 0.4919 0.7521 #> x8~~x8   0.4165 0.0835 19998 0.2609 0.5888 #> x9~~x9   0.6507 0.0635 19998 0.5280 0.7761 #> X~~X     1.0000 0.0000 19998 1.0000 1.0000 #> M~~M     0.7799 0.0590 19998 0.6591 0.8912 #> Y~~Y     0.9231 0.0391 19998 0.8292 0.9815 #> indirect 0.1301 0.0377 19998 0.0583 0.2068"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-1-simple-miss-fiml.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Example 4.1: The Simple Mediation Model with Missing Data (FIML)","text":"","code":"summary(df) #>        X                  M                  Y            #>  Min.   :-3.19956   Min.   :-3.37128   Min.   :-3.61432   #>  1st Qu.:-0.63268   1st Qu.:-0.70516   1st Qu.:-0.66921   #>  Median : 0.02823   Median : 0.02825   Median :-0.04833   #>  Mean   : 0.00269   Mean   :-0.01992   Mean   :-0.01538   #>  3rd Qu.: 0.65754   3rd Qu.: 0.65240   3rd Qu.: 0.65293   #>  Max.   : 3.47091   Max.   : 2.93497   Max.   : 3.09950   #>  NA's   :100        NA's   :100        NA's   :100"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-1-simple-miss-fiml.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 4.1: The Simple Mediation Model with Missing Data (FIML)","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-1-simple-miss-fiml.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 4.1: The Simple Mediation Model with Missing Data (FIML)","text":"can now fit model using sem() function lavaan. using missing = \"fiml\" handle missing data lavaan.","code":"fit <- sem(data = df, model = model, missing = \"fiml\")"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-1-simple-miss-fiml.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Example 4.1: The Simple Mediation Model with Missing Data (FIML)","text":"fit lavaan object can passed MC() function semmcci generate Monte Carlo confidence intervals.","code":"MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>              est     se     R    2.5%  97.5% #> cp        0.2335 0.0292 20000  0.1763 0.2910 #> b         0.5113 0.0296 20000  0.4528 0.5697 #> a         0.4809 0.0287 20000  0.4257 0.5369 #> X~~X      1.0591 0.0496 20000  0.9614 1.1572 #> Y~~Y      0.5542 0.0268 20000  0.5011 0.6059 #> M~~M      0.7564 0.0361 20000  0.6866 0.8285 #> Y~1      -0.0127 0.0251 20000 -0.0622 0.0363 #> M~1      -0.0223 0.0288 20000 -0.0783 0.0341 #> X~1       0.0025 0.0337 20000 -0.0633 0.0695 #> indirect  0.2458 0.0203 20000  0.2075 0.2870 #> direct    0.2335 0.0292 20000  0.1763 0.2910 #> total     0.4794 0.0286 20000  0.4231 0.5347"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-1-simple-miss-fiml.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"Example 4.1: The Simple Mediation Model with Missing Data (FIML)","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function.","code":"fit <- sem(data = df, model = model, missing = \"fiml\") unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>              est     se     R   2.5%  97.5% #> cp        0.2409 0.0298 20000 0.1818 0.2996 #> b         0.5128 0.0271 20000 0.4585 0.5648 #> a         0.4946 0.0258 20000 0.4430 0.5440 #> X~~X      1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y      0.5568 0.0251 20000 0.5077 0.6051 #> M~~M      0.7554 0.0254 20000 0.7041 0.8037 #> indirect -0.0128 0.0189 20000 0.2168 0.2905 #> direct   -0.0222 0.0298 20000 0.1818 0.2996 #> total     0.0024 0.0257 20000 0.4432 0.5440"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-2-simple-miss-mi.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"","code":"summary(df) #>        X                  M                  Y            #>  Min.   :-3.19956   Min.   :-3.37128   Min.   :-3.61432   #>  1st Qu.:-0.63268   1st Qu.:-0.70516   1st Qu.:-0.66921   #>  Median : 0.02823   Median : 0.02825   Median :-0.04833   #>  Mean   : 0.00269   Mean   :-0.01992   Mean   :-0.01538   #>  3rd Qu.: 0.65754   3rd Qu.: 0.65240   3rd Qu.: 0.65293   #>  Max.   : 3.47091   Max.   : 2.93497   Max.   : 3.09950   #>  NA's   :100        NA's   :100        NA's   :100"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-2-simple-miss-mi.html","id":"multiple-imputation","dir":"Articles","previous_headings":"","what":"Multiple Imputation","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"Perform appropriate multiple imputation approach deal missing values. example, impute multivariate missing data normal model.","code":"mi <- mice::mice(   df,   method = \"norm\",   m = 100,   print = FALSE,   seed = 42 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-2-simple-miss-mi.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-2-simple-miss-mi.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"can now fit model using sem() function lavaan. need deal missing values stage.","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-2-simple-miss-mi.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"fit lavaan object mi mids object can passed MCMI() function semmcci generate Monte Carlo confidence intervals using multiple imputation described Pesigan Cheung (2023).","code":"MCMI(fit, mi = mi, R = 20000L, alpha = 0.05, seed = 42) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>             est     se     R   2.5%  97.5% #> cp       0.2328 0.0299 20000 0.1741 0.2917 #> b        0.5113 0.0301 20000 0.4529 0.5701 #> a        0.4811 0.0287 20000 0.4241 0.5374 #> X~~X     1.0617 0.0495 20000 0.9650 1.1591 #> Y~~Y     0.5533 0.0272 20000 0.5005 0.6069 #> M~~M     0.7568 0.0361 20000 0.6856 0.8278 #> indirect 0.2460 0.0204 20000 0.2070 0.2864 #> direct   0.2328 0.0299 20000 0.1741 0.2917 #> total    0.4788 0.0285 20000 0.4236 0.5349"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-2-simple-miss-mi.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"Standardized Monte Carlo Confidence intervals can generated passing result MCMI() function MCStd() function.","code":"fit <- sem(data = df, model = model) unstd <- MCMI(fit, mi = mi, R = 20000L, alpha = 0.05, seed = 42) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2450 0.0307 20000 0.1802 0.3000 #> b        0.5189 0.0277 20000 0.4587 0.5663 #> a        0.5031 0.0260 20000 0.4429 0.5454 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y     0.5429 0.0250 20000 0.5071 0.6053 #> M~~M     0.7469 0.0258 20000 0.7026 0.8038 #> indirect 0.2610 0.0190 20000 0.2168 0.2915 #> direct   0.2450 0.0307 20000 0.1802 0.3000 #> total    0.5060 0.0261 20000 0.4416 0.5444"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/example-5-composite-reliability.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 5: Composite Reliability","text":"Assuming latent variable variance constrained one, omega total reliability coefficient given \\[   \\omega_{\\mathrm{total}}   =   \\frac{   \\left(   \\sum_{= 1}^{k}   \\lambda_{}   \\right)^2   }{   \\left(   \\sum_{= 1}^{k}   \\lambda_{}   \\right)^2   +   \\sum_{= 1}^{k}   \\theta_{\\varepsilon_{ii}}   } \\] \\(\\lambda_{}\\) factor loading item \\(\\), \\(\\theta_{\\varepsilon_{ii}}\\) residual variance item \\(\\), \\(k\\) number items particular latent variable. model specification , variances latent variables eta1, eta2, eta3 constrained one, relevant parameters labeled particularly factor loadings error variances, omega total reliability coefficient per latent variable defined using := operator.","code":"model <- \"   # fix latent variable variances to 1   eta1 ~~ 1 * eta1   eta2 ~~ 1 * eta2   eta3 ~~ 1 * eta3   # factor loadings   eta1 =~ NA * x1 + l11 * x1 + l12 * x2 + l13 * x3   eta2 =~ NA * x4 + l24 * x4 + l25 * x5 + l26 * x6   eta3 =~ NA * x7 + l37 * x7 + l38 * x8 + l39 * x9   # error variances   x1 ~~ t1 * x1   x2 ~~ t2 * x2   x3 ~~ t3 * x3   x4 ~~ t4 * x4   x5 ~~ t5 * x5   x6 ~~ t6 * x6   x7 ~~ t7 * x7   x8 ~~ t8 * x8   x9 ~~ t9 * x9   # composite reliability   omega1 := (l11 + l12 + l13)^2 / ((l11 + l12 + l13)^2 + (t1 + t2 + t3))   omega2 := (l24 + l25 + l26)^2 / ((l24 + l25 + l26)^2 + (t4 + t5 + t6))   omega3 := (l37 + l38 + l39)^2 / ((l37 + l38 + l39)^2 + (t7 + t8 + t9)) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example-5-composite-reliability.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 5: Composite Reliability","text":"can now fit model using cfa() function lavaan.","code":"fit <- cfa(model = model, data = HolzingerSwineford1939)"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-5-composite-reliability.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"Model Fitting","what":"Monte Carlo Confidence Intervals","title":"Example 5: Composite Reliability","text":"fit lavaan object can passed MC() function generate Monte Carlo confidence intervals.","code":"MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>               est     se     R   2.5%  97.5% #> eta1~~eta1 1.0000 0.0000 20000 1.0000 1.0000 #> eta2~~eta2 1.0000 0.0000 20000 1.0000 1.0000 #> eta3~~eta3 1.0000 0.0000 20000 1.0000 1.0000 #> l11        0.8996 0.0805 20000 0.7427 1.0570 #> l12        0.4979 0.0772 20000 0.3474 0.6480 #> l13        0.6562 0.0749 20000 0.5089 0.8034 #> l24        0.9897 0.0559 20000 0.8806 1.1005 #> l25        1.1016 0.0626 20000 0.9779 1.2229 #> l26        0.9166 0.0537 20000 0.8115 1.0210 #> l37        0.6195 0.0695 20000 0.4822 0.7534 #> l38        0.7309 0.0655 20000 0.6023 0.8597 #> l39        0.6700 0.0653 20000 0.5418 0.7982 #> t1         0.5491 0.1144 20000 0.3259 0.7736 #> t2         1.1338 0.1012 20000 0.9356 1.3322 #> t3         0.8443 0.0903 20000 0.6659 1.0203 #> t4         0.3712 0.0479 20000 0.2758 0.4643 #> t5         0.4463 0.0586 20000 0.3309 0.5611 #> t6         0.3562 0.0431 20000 0.2701 0.4401 #> t7         0.7994 0.0814 20000 0.6408 0.9599 #> t8         0.4877 0.0745 20000 0.3416 0.6330 #> t9         0.5661 0.0703 20000 0.4293 0.7062 #> eta1~~eta2 0.4585 0.0638 20000 0.3333 0.5828 #> eta1~~eta3 0.4705 0.0739 20000 0.3251 0.6161 #> eta2~~eta3 0.2830 0.0686 20000 0.1498 0.4176 #> omega1     0.6253 0.0367 20000 0.5486 0.6921 #> omega2     0.8852 0.0115 20000 0.8603 0.9053 #> omega3     0.6878 0.0311 20000 0.6214 0.7431"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-1-std-regression.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MCStd Function Use Case 1: Standardized Regression Coefficients","text":"example, use data Kwan & Chan (2011) child’s reading ability (\\(Y_{1}\\)) regressed parental occupational status (\\(X_{1}\\)), parental educational level (\\(X_{2}\\)), child’s home possession (\\(X_{3}\\)) \\[     Y_{1}     =     \\alpha_{1}     +     \\gamma_{1}     X_{1}     +     \\gamma_{2}     X_{2}     +     \\gamma_{3}     X_{3}     +     \\zeta_{1} . \\] Note \\(\\zeta_{1}\\) stochastic error term expected value zero finite variance \\(\\psi_{1}\\), \\(\\alpha_{1}\\) intercept, \\(\\gamma_{1}\\), \\(\\gamma_{2}\\), \\(\\gamma_{3}\\) regression coefficients. Three-Regressor Multiple Regression Model (Covariance Structure)","code":"covs #>           Y1       X1      X2      X3 #> Y1 6088.8281 271.1429 49.5848 20.0337 #> X1  271.1429 226.2577 29.9232  4.8812 #> X2   49.5848  29.9232  9.0692  1.0312 #> X3   20.0337   4.8812  1.0312  0.8371 nobs #> [1] 200"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-1-std-regression.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"MCStd Function Use Case 1: Standardized Regression Coefficients","text":"regress Y1 X1, X2, X3.","code":"model <- \"   Y1 ~ X1 + X2 + X3 \""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-1-std-regression.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"MCStd Function Use Case 1: Standardized Regression Coefficients","text":"can now fit model using sem() function lavaan mimic = \"eqs\" ensure compatibility results Kwan & Chan (2011). Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(   model = model, mimic = \"eqs\", fixed.x = FALSE,   sample.cov = covs, sample.nobs = nobs )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-1-std-regression.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"MCStd Function Use Case 1: Standardized Regression Coefficients","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function.","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>           est     se     R    2.5%  97.5% #> Y1~X1  0.1207 0.0900 20000 -0.0567 0.2947 #> Y1~X2  0.0491 0.0912 20000 -0.1292 0.2269 #> Y1~X3  0.2194 0.0720 20000  0.0779 0.3588 #> Y1~~Y1 0.9002 0.0408 20000  0.7996 0.9580 #> X1~~X1 1.0000 0.0000 20000  1.0000 1.0000 #> X1~~X2 0.6606 0.0406 20000  0.5751 0.7352 #> X1~~X3 0.3547 0.0625 20000  0.2253 0.4723 #> X2~~X2 1.0000 0.0000 20000  1.0000 1.0000 #> X2~~X3 0.3743 0.0618 20000  0.2465 0.4904 #> X3~~X3 1.0000 0.0000 20000  1.0000 1.0000"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-2-difference-regression-coefficients.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MCStd Function Use Case 2: Difference of Standardized Regression Coefficients","text":"example, use data Kwan & Chan (2011) child’s reading ability (\\(Y_{1}\\)) regressed parental occupational status (\\(X_{1}\\)), parental educational level (\\(X_{2}\\)), child’s home possession (\\(X_{3}\\)) \\[     Y_{1}     =     \\alpha_{1}     +     \\gamma_{1}     X_{1}     +     \\gamma_{2}     X_{2}     +     \\gamma_{3}     X_{3}     +     \\zeta_{1} . \\] Note \\(\\zeta_{1}\\) stochastic error term expected value zero finite variance \\(\\psi_{1}\\), \\(\\alpha_{1}\\) intercept, \\(\\gamma_{1}\\), \\(\\gamma_{2}\\), \\(\\gamma_{3}\\) regression coefficients. Three-Regressor Multiple Regression Model (Covariance Structure)","code":"#>           Y1       X1      X2      X3 #> Y1 6088.8281 271.1429 49.5848 20.0337 #> X1  271.1429 226.2577 29.9232  4.8812 #> X2   49.5848  29.9232  9.0692  1.0312 #> X3   20.0337   4.8812  1.0312  0.8371 covs #>           Y1       X1      X2      X3 #> Y1 6088.8281 271.1429 49.5848 20.0337 #> X1  271.1429 226.2577 29.9232  4.8812 #> X2   49.5848  29.9232  9.0692  1.0312 #> X3   20.0337   4.8812  1.0312  0.8371 nobs #> [1] 200"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-2-difference-regression-coefficients.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"MCStd Function Use Case 2: Difference of Standardized Regression Coefficients","text":"regress Y1 X1, X2, X3. label regression coefficients gamma1, gamma2, gamma3. specify difference coefficients using := operator.","code":"model <- \"   Y1 ~ gamma1 * X1 + gamma2 * X2 + gamma3 * X3   gamma12 := gamma1 - gamma2   gamma13 := gamma1 - gamma3   gamma23 := gamma2 - gamma3 \""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-2-difference-regression-coefficients.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"MCStd Function Use Case 2: Difference of Standardized Regression Coefficients","text":"can now fit model using sem() function lavaan mimic = \"eqs\" ensure compatibility results Kwan & Chan (2011). Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(   model = model, mimic = \"eqs\", fixed.x = FALSE,   sample.cov = covs, sample.nobs = nobs )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-2-difference-regression-coefficients.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"MCStd Function Use Case 2: Difference of Standardized Regression Coefficients","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function.","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R    2.5%  97.5% #> gamma1   0.1207 0.0897 20000 -0.0567 0.2943 #> gamma2   0.0491 0.0916 20000 -0.1305 0.2274 #> gamma3   0.2194 0.0721 20000  0.0747 0.3578 #> Y1~~Y1   0.9002 0.0410 20000  0.7992 0.9586 #> X1~~X1   1.0000 0.0000 20000  1.0000 1.0000 #> X1~~X2   0.6606 0.0405 20000  0.5749 0.7342 #> X1~~X3   0.3547 0.0628 20000  0.2282 0.4749 #> X2~~X2   1.0000 0.0000 20000  1.0000 1.0000 #> X2~~X3   0.3743 0.0620 20000  0.2482 0.4905 #> X3~~X3   1.0000 0.0000 20000  1.0000 1.0000 #> gamma12  0.0716 0.1632 20000 -0.2490 0.3907 #> gamma13 -0.0987 0.1247 20000 -0.3408 0.1477 #> gamma23 -0.1703 0.1281 20000 -0.4191 0.0843"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-3-rsqr.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MCStd Function Use Case 3: R-Squared and Adjusted R-Squared","text":"example, use data Kwan & Chan (2011) child’s reading ability (\\(Y_{1}\\)) regressed home educational resources home educational resources (\\(Y_{2}\\)) regressed parental occupational status (\\(X_{1}\\)), parental educational level (\\(X_{2}\\)), child’s home possession (\\(X_{3}\\)) \\[     Y_{1}     =     \\alpha_{1}     +     \\beta_{1}     Y_{2}     +     \\zeta_{1} , \\] \\[     Y_{2}     =     \\alpha_{2}     +     \\gamma_{1}     X_{1}     +     \\gamma_{2}     X_{2}     +     \\gamma_{3}     X_{3}     +     \\zeta_{2} . \\] Note \\(\\zeta_{1}\\) \\(\\zeta_{2}\\) stochastic error terms expected value zero finite variance \\(\\psi_{1}\\) \\(\\psi_{2}\\), \\(\\alpha_{1}\\) \\(\\alpha_{2}\\) intercepts, \\(\\beta_{1}\\), \\(\\gamma_{1}\\), \\(\\gamma_{2}\\), \\(\\gamma_{3}\\) regression coefficients. Mediation Model (Covariance Structure)","code":"covs #>           Y1      Y2       X1      X2      X3 #> Y1 6088.8281 15.7012 271.1429 49.5848 20.0337 #> Y2   15.7012  0.7084   1.9878  1.0043  0.2993 #> X1  271.1429  1.9878 226.2577 29.9232  4.8812 #> X2   49.5848  1.0043  29.9232  9.0692  1.0312 #> X3   20.0337  0.2993   4.8812  1.0312  0.8371 nobs #> [1] 200"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-3-rsqr.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"MCStd Function Use Case 3: R-Squared and Adjusted R-Squared","text":"regress Y1 Y2 Y2 X1, X2, X3. label error variances psi1 psi2. \\(R^{2}\\) \\(\\bar{R}^{2}\\) defined using := operator lavaan model syntax using following equations \\[     R^{2}     =     1 - \\psi^{\\ast} \\] \\[     \\bar{R}^{2}     =     1     -     \\left(     \\frac{n - 1}{n - p + 1}     \\right)     \\left(     1 - R^2     \\right) \\] \\(\\psi^{\\ast}\\) standardized error variance, \\(n\\) sample size, \\(p\\) number regressor variables.","code":"model <- \"   Y1 ~ Y2   Y2 ~ X1 + X2 + X3   Y1 ~~ psi1 * Y1   Y2 ~~ psi2 * Y2   rsq1 := 1 - psi1   rsqbar1 := 1 - (     (200 - 1) / (200 - 1 + 1)   ) * (     1 - rsq1   )   rsq2 := 1 - psi2   rsqbar2 := 1 - (     (200 - 1) / (200 - 3 + 1)   ) * (     1 - rsq2   ) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-3-rsqr.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"MCStd Function Use Case 3: R-Squared and Adjusted R-Squared","text":"can now fit model using sem() function lavaan mimic = \"eqs\" ensure compatibility results Kwan & Chan (2011). Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(   model = model, mimic = \"eqs\", fixed.x = FALSE,   sample.cov = covs, sample.nobs = nobs )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-3-rsqr.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"MCStd Function Use Case 3: R-Squared and Adjusted R-Squared","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function. Note: parameterization \\(R^{2}\\) \\(\\bar{R}^{2}\\) interpreted using output MCStd() function since input functions defined := require standardized estimates.","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R    2.5%   97.5% #> Y1~Y2    0.2391 0.0666 20000  0.1063  0.3697 #> Y2~X1   -0.2449 0.0816 20000 -0.4017 -0.0821 #> Y2~X2    0.4419 0.0789 20000  0.2833  0.5920 #> Y2~X3    0.3101 0.0643 20000  0.1795  0.4322 #> psi1     0.9428 0.0324 20000  0.8634  0.9887 #> psi2     0.7428 0.0528 20000  0.6304  0.8347 #> X1~~X1   1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2   0.6606 0.0405 20000  0.5755  0.7337 #> X1~~X3   0.3547 0.0627 20000  0.2262  0.4729 #> X2~~X2   1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3   0.3743 0.0618 20000  0.2463  0.4890 #> X3~~X3   1.0000 0.0000 20000  1.0000  1.0000 #> rsq1     0.0572 0.0324 20000  0.0113  0.1366 #> rsqbar1  0.0619 0.0322 20000  0.0162  0.1410 #> rsq2     0.2572 0.0528 20000  0.1653  0.3696 #> rsqbar2  0.2534 0.0531 20000  0.1610  0.3664"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-4-difference-regression-coefficients-multigroup.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MCStd Function Use Case 4: Difference of Standardized Regression Coefficients in Multiple Groups","text":"example, use data Kwan & Chan (2014) three groups (Hong Kong, Japan, Korea) child’s reading ability (\\(Y_{1}\\)) regressed parental occupational status (\\(X_{1}\\)), parental educational level (\\(X_{2}\\)), child’s home possession (\\(X_{3}\\)) \\[     Y_{1}     =     \\alpha_{1}     +     \\gamma_{1}     X_{1}     +     \\gamma_{2}     X_{2}     +     \\gamma_{3}     X_{3}     +     \\zeta_{1} . \\] Note \\(\\zeta_{1}\\) stochastic error term expected value zero finite variance \\(\\psi_{1}\\), \\(\\alpha_{1}\\) intercept, \\(\\gamma_{1}\\), \\(\\gamma_{2}\\), \\(\\gamma_{3}\\) regression coefficients. Three-Regressor Multiple Regression Model (Covariance Structure) Covariance Matrix Hong Kong Covariance Matrix Japan Covariance Matrix Korea","code":"knitr::kable(   x = covs_hongkong, digits = 4,   caption = \"Covariance Matrix for Hong Kong\" ) nobs_hongkong #> [1] 4625 knitr::kable(   x = covs_japan, digits = 4,   caption = \"Covariance Matrix for Japan\" ) nobs_japan #> [1] 5943 knitr::kable(   x = covs_korea, digits = 4,   caption = \"Covariance Matrix for Korea\" ) nobs_korea #> [1] 5151"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-4-difference-regression-coefficients-multigroup.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"MCStd Function Use Case 4: Difference of Standardized Regression Coefficients in Multiple Groups","text":"regress Y1 X1, X2, X3. label regression coefficient \\(\\gamma_{1}\\) three groups gamma1.g1, gamma1.g2, gamma1.g3, \\(\\gamma_{2}\\) three groups gamma2.g1, gamma2.g2, gamma2.g3, \\(\\gamma_{3}\\) three groups gamma3.g1, gamma3.g2, gamma3.g3.","code":"model <- \"   Y1 ~ c(gamma1.g1, gamma1.g2, gamma1.g3) * X1   Y1 ~ c(gamma2.g1, gamma2.g2, gamma2.g3) * X2   Y1 ~ c(gamma3.g1, gamma3.g2, gamma3.g3) * X3   gamma1.g12 := gamma1.g1 - gamma1.g2   gamma1.g13 := gamma1.g1 - gamma1.g3   gamma1.g23 := gamma1.g2 - gamma1.g3   gamma2.g12 := gamma2.g1 - gamma2.g2   gamma2.g13 := gamma2.g1 - gamma2.g3   gamma2.g23 := gamma2.g2 - gamma2.g3   gamma3.g12 := gamma3.g1 - gamma3.g2   gamma3.g13 := gamma3.g1 - gamma3.g3   gamma3.g23 := gamma3.g2 - gamma3.g3 \""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-4-difference-regression-coefficients-multigroup.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"MCStd Function Use Case 4: Difference of Standardized Regression Coefficients in Multiple Groups","text":"can now fit model using sem() function lavaan mimic = \"eqs\" ensure compatibility results Kwan & Chan (2011). Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(   model = model, mimic = \"eqs\", fixed.x = FALSE,   sample.cov = list(covs_hongkong, covs_japan, covs_korea),   sample.nobs = list(nobs_hongkong, nobs_japan, nobs_korea) )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-4-difference-regression-coefficients-multigroup.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"MCStd Function Use Case 4: Difference of Standardized Regression Coefficients in Multiple Groups","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function.","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>                est     se     R    2.5%   97.5% #> gamma1.g1   0.0568 0.0191 20000  0.0195  0.0941 #> gamma2.g1   0.1985 0.0188 20000  0.1617  0.2351 #> gamma3.g1   0.2500 0.0152 20000  0.2203  0.2797 #> Y1~~Y1      0.8215 0.0103 20000  0.8009  0.8411 #> X1~~X1      1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2      0.6917 0.0076 20000  0.6764  0.7064 #> X1~~X3      0.4702 0.0116 20000  0.4470  0.4927 #> X2~~X2      1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3      0.4471 0.0118 20000  0.4238  0.4703 #> X3~~X3      1.0000 0.0000 20000  1.0000  1.0000 #> gamma1.g2   0.1390 0.0163 20000  0.1074  0.1708 #> gamma2.g2   0.1792 0.0157 20000  0.1482  0.2098 #> gamma3.g2   0.1688 0.0139 20000  0.1415  0.1961 #> Y1~~Y1.g2   0.8371 0.0087 20000  0.8195  0.8536 #> X1~~X1.g2   1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2.g2   0.6525 0.0074 20000  0.6378  0.6670 #> X1~~X3.g2   0.5023 0.0098 20000  0.4826  0.5209 #> X2~~X2.g2   1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3.g2   0.4452 0.0104 20000  0.4246  0.4652 #> X3~~X3.g2   1.0000 0.0000 20000  1.0000  1.0000 #> gamma1.g3   0.0863 0.0170 20000  0.0531  0.1198 #> gamma2.g3   0.2557 0.0162 20000  0.2239  0.2875 #> gamma3.g3   0.2289 0.0140 20000  0.2015  0.2565 #> Y1~~Y1.g3   0.7761 0.0103 20000  0.7552  0.7961 #> X1~~X1.g3   1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2.g3   0.6580 0.0079 20000  0.6424  0.6732 #> X1~~X3.g3   0.4738 0.0108 20000  0.4524  0.4947 #> X2~~X2.g3   1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3.g3   0.4353 0.0113 20000  0.4130  0.4570 #> X3~~X3.g3   1.0000 0.0000 20000  1.0000  1.0000 #> gamma1.g12 -0.0821 0.0251 20000 -0.1311 -0.0329 #> gamma1.g13 -0.0294 0.0253 20000 -0.0791  0.0198 #> gamma1.g23  0.0527 0.0234 20000  0.0072  0.0983 #> gamma2.g12  0.0193 0.0246 20000 -0.0300  0.0673 #> gamma2.g13 -0.0572 0.0247 20000 -0.1052 -0.0088 #> gamma2.g23 -0.0765 0.0224 20000 -0.1210 -0.0324 #> gamma3.g12  0.0811 0.0206 20000  0.0409  0.1220 #> gamma3.g13  0.0211 0.0206 20000 -0.0194  0.0617 #> gamma3.g23 -0.0601 0.0197 20000 -0.0987 -0.0219"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-5-difference-rsq-multigroup.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MCStd Function Use Case 5: Difference of R-Squared in Multiple Groups","text":"example, use data Kwan & Chan (2014) three groups (Hong Kong, Japan, Korea) child’s reading ability (\\(Y_{1}\\)) regressed parental occupational status (\\(X_{1}\\)), parental educational level (\\(X_{2}\\)), child’s home possession (\\(X_{3}\\)) \\[     Y_{1}     =     \\alpha_{1}     +     \\gamma_{1}     X_{1}     +     \\gamma_{2}     X_{2}     +     \\gamma_{3}     X_{3}     +     \\zeta_{1} . \\] Note \\(\\zeta_{1}\\) stochastic error term expected value zero finite variance \\(\\psi_{1}\\), \\(\\alpha_{1}\\) intercept, \\(\\gamma_{1}\\), \\(\\gamma_{2}\\), \\(\\gamma_{3}\\) regression coefficients. Three-Regressor Multiple Regression Model (Covariance Structure) Covariance Matrix Hong Kong Covariance Matrix Japan Covariance Matrix Korea","code":"knitr::kable(   x = covs_hongkong, digits = 4,   caption = \"Covariance Matrix for Hong Kong\" ) nobs_hongkong #> [1] 4625 knitr::kable(   x = covs_japan, digits = 4,   caption = \"Covariance Matrix for Japan\" ) nobs_japan #> [1] 5943 nobs_korea <- 5151 covs_korea <- matrix(   data = c(     8187.6921, 31.6266, 37.3062, 30.9021,     31.6266, 0.9271, 0.6338, 0.4088,     37.3062, 0.6338, 1.0007, 0.3902,     30.9021, 0.4088, 0.3902, 0.8031   ),   nrow = 4 ) colnames(covs_korea) <- rownames(covs_korea) <- varnames knitr::kable(   x = covs_korea, digits = 4,   caption = \"Covariance Matrix for Korea\" )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-5-difference-rsq-multigroup.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"MCStd Function Use Case 5: Difference of R-Squared in Multiple Groups","text":"regress Y1 X1, X2, X3. label error variance \\(\\zeta_{1}\\) three groups psi1.g1, psi1.g2, psi1.g3. \\(R^{2}\\) defined using := operator lavaan model syntax using following equation \\[     R^{2}     =     1 - \\psi^{\\ast} \\] \\(\\psi^{\\ast}\\) standardized error variance.","code":"model <- \"   Y1 ~ X1 + X2 + X3   Y1 ~~ c(psi1.g1, psi1.g2, psi1.g3) * Y1   rsq.g1 := 1 - psi1.g1   rsq.g2 := 1 - psi1.g2   rsq.g3 := 1 - psi1.g3   rsq.g12 := rsq.g1 - rsq.g2   rsq.g13 := rsq.g1 - rsq.g3   rsq.g23 := rsq.g2 - rsq.g3 \""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-5-difference-rsq-multigroup.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"MCStd Function Use Case 5: Difference of R-Squared in Multiple Groups","text":"can now fit model using sem() function lavaan mimic = \"eqs\" ensure compatibility results Kwan & Chan (2014). Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(   model = model, mimic = \"eqs\", fixed.x = FALSE,   sample.cov = list(covs_hongkong, covs_japan, covs_korea),   sample.nobs = list(nobs_hongkong, nobs_japan, nobs_korea) )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-5-difference-rsq-multigroup.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"MCStd Function Use Case 5: Difference of R-Squared in Multiple Groups","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function. Note: parameterization \\(R^{2}\\) interpreted using output MCStd() function since input functions defined := require standardized estimates.","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>               est     se     R    2.5%   97.5% #> Y1~X1      0.0568 0.0190 20000  0.0198  0.0940 #> Y1~X2      0.1985 0.0186 20000  0.1619  0.2350 #> Y1~X3      0.2500 0.0149 20000  0.2205  0.2792 #> psi1.g1    0.8215 0.0103 20000  0.8010  0.8410 #> X1~~X1     1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2     0.6917 0.0077 20000  0.6763  0.7066 #> X1~~X3     0.4702 0.0115 20000  0.4474  0.4926 #> X2~~X2     1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3     0.4471 0.0118 20000  0.4238  0.4697 #> X3~~X3     1.0000 0.0000 20000  1.0000  1.0000 #> Y1~X1.g2   0.1390 0.0164 20000  0.1065  0.1710 #> Y1~X2.g2   0.1792 0.0158 20000  0.1483  0.2101 #> Y1~X3.g2   0.1688 0.0138 20000  0.1414  0.1958 #> psi1.g2    0.8371 0.0088 20000  0.8189  0.8539 #> X1~~X1.g2  1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2.g2  0.6525 0.0075 20000  0.6376  0.6669 #> X1~~X3.g2  0.5023 0.0098 20000  0.4829  0.5209 #> X2~~X2.g2  1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3.g2  0.4452 0.0104 20000  0.4245  0.4651 #> X3~~X3.g2  1.0000 0.0000 20000  1.0000  1.0000 #> Y1~X1.g3   0.0863 0.0168 20000  0.0532  0.1192 #> Y1~X2.g3   0.2557 0.0163 20000  0.2234  0.2876 #> Y1~X3.g3   0.2289 0.0139 20000  0.2014  0.2563 #> psi1.g3    0.7761 0.0102 20000  0.7554  0.7957 #> X1~~X1.g3  1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2.g3  0.6580 0.0079 20000  0.6421  0.6730 #> X1~~X3.g3  0.4738 0.0108 20000  0.4524  0.4945 #> X2~~X2.g3  1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3.g3  0.4353 0.0113 20000  0.4130  0.4571 #> X3~~X3.g3  1.0000 0.0000 20000  1.0000  1.0000 #> rsq.g1     0.1785 0.0103 20000  0.1590  0.1990 #> rsq.g2     0.1629 0.0088 20000  0.1461  0.1811 #> rsq.g3     0.2239 0.0102 20000  0.2043  0.2446 #> rsq.g12    0.0155 0.0134 20000 -0.0108  0.0419 #> rsq.g13   -0.0455 0.0145 20000 -0.0738 -0.0172 #> rsq.g23   -0.0610 0.0135 20000 -0.0873 -0.0348"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"semmcci: Methods (MI)","text":"","code":"summary(df) #>        X                  M                  Y            #>  Min.   :-3.19956   Min.   :-3.37128   Min.   :-3.61432   #>  1st Qu.:-0.63268   1st Qu.:-0.70516   1st Qu.:-0.66921   #>  Median : 0.02823   Median : 0.02825   Median :-0.04833   #>  Mean   : 0.00269   Mean   :-0.01992   Mean   :-0.01538   #>  3rd Qu.: 0.65754   3rd Qu.: 0.65240   3rd Qu.: 0.65293   #>  Max.   : 3.47091   Max.   : 2.93497   Max.   : 3.09950   #>  NA's   :100        NA's   :100        NA's   :100"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"multiple-imputation","dir":"Articles","previous_headings":"","what":"Multiple Imputation","title":"semmcci: Methods (MI)","text":"Perform appropriate multiple imputation approach deal missing values. example, impute multivariate missing data normal model.","code":"mi <- mice::mice(   df,   method = \"norm\",   m = 100,   print = FALSE,   seed = 42 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"semmcci: Methods (MI)","text":"","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"semmcci: Methods (MI)","text":"","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"semmcci: Methods (MI)","text":"","code":"unstd <- MCMI(fit, mi = mi, R = 20000L, alpha = 0.05)"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"print","dir":"Articles","previous_headings":"Methods","what":"print","title":"semmcci: Methods (MI)","text":"","code":"print(unstd) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>             est     se     R   2.5%  97.5% #> cp       0.2328 0.0297 20000 0.1745 0.2912 #> b        0.5113 0.0300 20000 0.4524 0.5709 #> a        0.4811 0.0285 20000 0.4264 0.5383 #> X~~X     1.0617 0.0495 20000 0.9648 1.1589 #> Y~~Y     0.5533 0.0271 20000 0.5001 0.6066 #> M~~M     0.7568 0.0363 20000 0.6862 0.8270 #> indirect 0.2460 0.0203 20000 0.2073 0.2870 #> direct   0.2328 0.0297 20000 0.1745 0.2912 #> total    0.4788 0.0284 20000 0.4238 0.5344"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"summary","dir":"Articles","previous_headings":"Methods","what":"summary","title":"semmcci: Methods (MI)","text":"","code":"summary(unstd) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>             est     se     R   2.5%  97.5% #> cp       0.2328 0.0297 20000 0.1745 0.2912 #> b        0.5113 0.0300 20000 0.4524 0.5709 #> a        0.4811 0.0285 20000 0.4264 0.5383 #> X~~X     1.0617 0.0495 20000 0.9648 1.1589 #> Y~~Y     0.5533 0.0271 20000 0.5001 0.6066 #> M~~M     0.7568 0.0363 20000 0.6862 0.8270 #> indirect 0.2460 0.0203 20000 0.2073 0.2870 #> direct   0.2328 0.0297 20000 0.1745 0.2912 #> total    0.4788 0.0284 20000 0.4238 0.5344"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"coef","dir":"Articles","previous_headings":"Methods","what":"coef","title":"semmcci: Methods (MI)","text":"","code":"coef(unstd) #>        cp         b         a      X~~X      Y~~Y      M~~M  indirect    direct  #> 0.2328242 0.5113353 0.4810732 1.0617011 0.5533052 0.7567771 0.2459664 0.2328242  #>     total  #> 0.4787907"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"vcov","dir":"Articles","previous_headings":"Methods","what":"vcov","title":"semmcci: Methods (MI)","text":"","code":"vcov(unstd) #>                     cp             b             a          X~~X          Y~~Y #> cp        8.828366e-04 -4.781832e-04 -2.771941e-05  1.745890e-05 -1.744474e-05 #> b        -4.781832e-04  9.001537e-04 -1.886758e-05 -2.500455e-05 -2.763552e-05 #> a        -2.771941e-05 -1.886758e-05  8.123258e-04 -1.605715e-05  2.160829e-05 #> X~~X      1.745890e-05 -2.500455e-05 -1.605715e-05  2.452236e-03 -3.697373e-05 #> Y~~Y     -1.744474e-05 -2.763552e-05  2.160829e-05 -3.697373e-05  7.317213e-04 #> M~~M      1.878304e-06 -6.347168e-06 -6.051435e-05  1.105105e-05 -1.434691e-05 #> indirect -2.443752e-04  4.234587e-04  4.062065e-04 -2.029948e-05 -2.553198e-06 #> direct    8.828366e-04 -4.781832e-04 -2.771941e-05  1.745890e-05 -1.744474e-05 #> total     6.384613e-04 -5.472453e-05  3.784871e-04 -2.840578e-06 -1.999793e-05 #>                   M~~M      indirect        direct         total #> cp        1.878304e-06 -2.443752e-04  8.828366e-04  6.384613e-04 #> b        -6.347168e-06  4.234587e-04 -4.781832e-04 -5.472453e-05 #> a        -6.051435e-05  4.062065e-04 -2.771941e-05  3.784871e-04 #> X~~X      1.105105e-05 -2.029948e-05  1.745890e-05 -2.840578e-06 #> Y~~Y     -1.434691e-05 -2.553198e-06 -1.744474e-05 -1.999793e-05 #> M~~M      1.314449e-03 -3.425204e-05  1.878304e-06 -3.237374e-05 #> indirect -3.425204e-05  4.121321e-04 -2.443752e-04  1.677568e-04 #> direct    1.878304e-06 -2.443752e-04  8.828366e-04  6.384613e-04 #> total    -3.237374e-05  1.677568e-04  6.384613e-04  8.062182e-04"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"confint","dir":"Articles","previous_headings":"Methods","what":"confint","title":"semmcci: Methods (MI)","text":"","code":"confint(unstd, level = 0.95) #>              2.5 %    97.5 % #> cp       0.1745248 0.2911921 #> b        0.4524309 0.5709167 #> a        0.4264120 0.5383089 #> X~~X     0.9647646 1.1588616 #> Y~~Y     0.5000804 0.6066412 #> M~~M     0.6861728 0.8270444 #> indirect 0.2073270 0.2869669 #> direct   0.1745248 0.2911921 #> total    0.4237563 0.5343830"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"semmcci: Methods (MI)","text":"","code":"fit <- sem(data = df, model = model, fixed.x = FALSE) unstd <- MCMI(fit, mi = mi, R = 20000L, alpha = 0.05) std <- MCStd(unstd, alpha = 0.05)"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"print-1","dir":"Articles","previous_headings":"Methods","what":"print","title":"semmcci: Methods (MI)","text":"","code":"print(std) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2450 0.0305 20000 0.1811 0.3004 #> b        0.5189 0.0273 20000 0.4582 0.5661 #> a        0.5031 0.0260 20000 0.4420 0.5449 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y     0.5429 0.0252 20000 0.5071 0.6048 #> M~~M     0.7469 0.0257 20000 0.7031 0.8046 #> indirect 0.2610 0.0190 20000 0.2168 0.2915 #> direct   0.2450 0.0305 20000 0.1811 0.3004 #> total    0.5060 0.0263 20000 0.4412 0.5455"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"summary-1","dir":"Articles","previous_headings":"Methods","what":"summary","title":"semmcci: Methods (MI)","text":"","code":"summary(std) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2450 0.0305 20000 0.1811 0.3004 #> b        0.5189 0.0273 20000 0.4582 0.5661 #> a        0.5031 0.0260 20000 0.4420 0.5449 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y     0.5429 0.0252 20000 0.5071 0.6048 #> M~~M     0.7469 0.0257 20000 0.7031 0.8046 #> indirect 0.2610 0.0190 20000 0.2168 0.2915 #> direct   0.2450 0.0305 20000 0.1811 0.3004 #> total    0.5060 0.0263 20000 0.4412 0.5455"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"coef-1","dir":"Articles","previous_headings":"Methods","what":"coef","title":"semmcci: Methods (MI)","text":"","code":"coef(std) #>        cp         b         a      X~~X      Y~~Y      M~~M  indirect    direct  #> 0.2449797 0.5188628 0.5030687 1.0000000 0.5428754 0.7469219 0.2610236 0.2449797  #>     total  #> 0.5060033"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"vcov-1","dir":"Articles","previous_headings":"Methods","what":"vcov","title":"semmcci: Methods (MI)","text":"","code":"vcov(std) #>                     cp             b             a          X~~X          Y~~Y #> cp        9.309866e-04 -6.033348e-04 -3.054189e-06  1.170135e-20 -1.569672e-04 #> b        -6.033348e-04  7.478905e-04  8.657585e-07 -2.164169e-20 -3.476727e-04 #> a        -3.054189e-06  8.657585e-07  6.784104e-04 -3.386076e-20 -1.647567e-04 #> X~~X      1.170135e-20 -2.164169e-20 -3.386076e-20  1.190500e-32  2.473938e-20 #> Y~~Y     -1.569672e-04 -3.476727e-04 -1.647567e-04  2.473938e-20  6.349814e-04 #> M~~M      2.538788e-06 -4.446081e-07 -6.699137e-04  3.350736e-20  1.626402e-04 #> indirect -3.002098e-04  3.705297e-04  3.480314e-04 -2.693797e-20 -2.561972e-04 #> direct    9.309866e-04 -6.033348e-04 -3.054189e-06  1.170135e-20 -1.569672e-04 #> total     6.307768e-04 -2.328051e-04  3.449772e-04 -1.523663e-20 -4.131643e-04 #>                   M~~M      indirect        direct         total #> cp        2.538788e-06 -3.002098e-04  9.309866e-04  6.307768e-04 #> b        -4.446081e-07  3.705297e-04 -6.033348e-04 -2.328051e-04 #> a        -6.699137e-04  3.480314e-04 -3.054189e-06  3.449772e-04 #> X~~X      3.350736e-20 -2.693797e-20  1.170135e-20 -1.523663e-20 #> Y~~Y      1.626402e-04 -2.561972e-04 -1.569672e-04 -4.131643e-04 #> M~~M      6.624446e-04 -3.434784e-04  2.538788e-06 -3.409396e-04 #> indirect -3.434784e-04  3.621792e-04 -3.002098e-04  6.196936e-05 #> direct    2.538788e-06 -3.002098e-04  9.309866e-04  6.307768e-04 #> total    -3.409396e-04  6.196936e-05  6.307768e-04  6.927461e-04"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"confint-1","dir":"Articles","previous_headings":"Methods","what":"confint","title":"semmcci: Methods (MI)","text":"","code":"confint(std, level = 0.95) #>              2.5 %    97.5 % #> cp       0.1810674 0.3003695 #> b        0.4582137 0.5661133 #> a        0.4420447 0.5448729 #> X~~X     1.0000000 1.0000000 #> Y~~Y     0.5070802 0.6047984 #> M~~M     0.7031136 0.8045965 #> indirect 0.2167511 0.2915176 #> direct   0.1810674 0.3003695 #> total    0.4412011 0.5455162"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"semmcci: Methods (MC)","text":"","code":"summary(df) #>        X                   M                   Y            #>  Min.   :-3.199558   Min.   :-3.371276   Min.   :-3.61432   #>  1st Qu.:-0.636035   1st Qu.:-0.692640   1st Qu.:-0.66146   #>  Median : 0.011377   Median : 0.007125   Median :-0.04726   #>  Mean   :-0.003207   Mean   :-0.023968   Mean   :-0.01677   #>  3rd Qu.: 0.651951   3rd Qu.: 0.647363   3rd Qu.: 0.62640   #>  Max.   : 3.470910   Max.   : 2.963216   Max.   : 3.09950 colMeans(df) #>            X            M            Y  #> -0.003206987 -0.023968103 -0.016774294 var(df) #>           X         M         Y #> X 1.0600162 0.5108780 0.5069458 #> M 0.5108780 0.9996606 0.6272104 #> Y 0.5069458 0.6272104 0.9837255"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"semmcci: Methods (MC)","text":"","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"semmcci: Methods (MC)","text":"","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"semmcci: Methods (MC)","text":"","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05)"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"print","dir":"Articles","previous_headings":"Methods","what":"print","title":"semmcci: Methods (MC)","text":"","code":"print(unstd) #> Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2333 0.0263 20000 0.1814 0.2846 #> b        0.5082 0.0270 20000 0.4557 0.5616 #> a        0.4820 0.0265 20000 0.4301 0.5338 #> Y~~Y     0.5462 0.0244 20000 0.4986 0.5937 #> M~~M     0.7527 0.0338 20000 0.6862 0.8185 #> X~~X     1.0590 0.0000 20000 1.0590 1.0590 #> indirect 0.2449 0.0188 20000 0.2090 0.2835 #> direct   0.2333 0.0263 20000 0.1814 0.2846 #> total    0.4782 0.0266 20000 0.4262 0.5309"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"summary","dir":"Articles","previous_headings":"Methods","what":"summary","title":"semmcci: Methods (MC)","text":"","code":"summary(unstd) #> Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2333 0.0263 20000 0.1814 0.2846 #> b        0.5082 0.0270 20000 0.4557 0.5616 #> a        0.4820 0.0265 20000 0.4301 0.5338 #> Y~~Y     0.5462 0.0244 20000 0.4986 0.5937 #> M~~M     0.7527 0.0338 20000 0.6862 0.8185 #> X~~X     1.0590 0.0000 20000 1.0590 1.0590 #> indirect 0.2449 0.0188 20000 0.2090 0.2835 #> direct   0.2333 0.0263 20000 0.1814 0.2846 #> total    0.4782 0.0266 20000 0.4262 0.5309"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"coef","dir":"Articles","previous_headings":"Methods","what":"coef","title":"semmcci: Methods (MC)","text":"","code":"coef(unstd) #>        cp         b         a      Y~~Y      M~~M      X~~X  indirect    direct  #> 0.2333230 0.5081833 0.4819530 0.5461589 0.7526879 1.0589562 0.2449205 0.2333230  #>     total  #> 0.4782435"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"vcov","dir":"Articles","previous_headings":"Methods","what":"vcov","title":"semmcci: Methods (MC)","text":"","code":"vcov(unstd) #>                     cp             b            a          Y~~Y          M~~M #> cp        6.894981e-04 -3.516867e-04 3.721576e-06 -2.542958e-07  1.545476e-06 #> b        -3.516867e-04  7.314641e-04 1.536357e-06  4.126932e-06  6.088854e-06 #> a         3.721576e-06  1.536357e-06 7.038364e-04  4.721309e-06  3.237332e-06 #> Y~~Y     -2.542958e-07  4.126932e-06 4.721309e-06  5.931447e-04 -5.397208e-06 #> M~~M      1.545476e-06  6.088854e-06 3.237332e-06 -5.397208e-06  1.140217e-03 #> X~~X      0.000000e+00  0.000000e+00 0.000000e+00  0.000000e+00  0.000000e+00 #> indirect -1.675720e-04  3.532916e-04 3.584667e-04  4.255567e-06  4.854275e-06 #> direct    6.894981e-04 -3.516867e-04 3.721576e-06 -2.542958e-07  1.545476e-06 #> total     5.219262e-04  1.604858e-06 3.621883e-04  4.001271e-06  6.399750e-06 #>          X~~X      indirect        direct        total #> cp          0 -1.675720e-04  6.894981e-04 5.219262e-04 #> b           0  3.532916e-04 -3.516867e-04 1.604858e-06 #> a           0  3.584667e-04  3.721576e-06 3.621883e-04 #> Y~~Y        0  4.255567e-06 -2.542958e-07 4.001271e-06 #> M~~M        0  4.854275e-06  1.545476e-06 6.399750e-06 #> X~~X        0  0.000000e+00  0.000000e+00 0.000000e+00 #> indirect    0  3.529709e-04 -1.675720e-04 1.853990e-04 #> direct      0 -1.675720e-04  6.894981e-04 5.219262e-04 #> total       0  1.853990e-04  5.219262e-04 7.073251e-04"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"confint","dir":"Articles","previous_headings":"Methods","what":"confint","title":"semmcci: Methods (MC)","text":"","code":"confint(unstd, level = 0.95) #>              2.5 %    97.5 % #> cp       0.1813609 0.2846457 #> b        0.4556637 0.5616141 #> a        0.4301192 0.5338460 #> Y~~Y     0.4985579 0.5937181 #> M~~M     0.6862110 0.8184961 #> X~~X     1.0589562 1.0589562 #> indirect 0.2089575 0.2834562 #> direct   0.1813609 0.2846457 #> total    0.4261843 0.5309186"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"semmcci: Methods (MC)","text":"","code":"fit <- sem(data = df, model = model, fixed.x = FALSE) unstd <- MC(fit, R = 20000L, alpha = 0.05) std <- MCStd(unstd, alpha = 0.05)"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"print-1","dir":"Articles","previous_headings":"Methods","what":"print","title":"semmcci: Methods (MC)","text":"","code":"print(std) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2422 0.0270 20000 0.1892 0.2953 #> b        0.5123 0.0247 20000 0.4627 0.5602 #> a        0.4963 0.0237 20000 0.4489 0.5418 #> Y~~Y     0.5558 0.0234 20000 0.5098 0.6019 #> M~~M     0.7537 0.0235 20000 0.7065 0.7985 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> indirect 0.2542 0.0175 20000 0.2197 0.2887 #> direct   0.2422 0.0270 20000 0.1892 0.2953 #> total    0.4964 0.0239 20000 0.4476 0.5420"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"summary-1","dir":"Articles","previous_headings":"Methods","what":"summary","title":"semmcci: Methods (MC)","text":"","code":"summary(std) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2422 0.0270 20000 0.1892 0.2953 #> b        0.5123 0.0247 20000 0.4627 0.5602 #> a        0.4963 0.0237 20000 0.4489 0.5418 #> Y~~Y     0.5558 0.0234 20000 0.5098 0.6019 #> M~~M     0.7537 0.0235 20000 0.7065 0.7985 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> indirect 0.2542 0.0175 20000 0.2197 0.2887 #> direct   0.2422 0.0270 20000 0.1892 0.2953 #> total    0.4964 0.0239 20000 0.4476 0.5420"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"coef-1","dir":"Articles","previous_headings":"Methods","what":"coef","title":"semmcci: Methods (MC)","text":"","code":"coef(std) #>        cp         b         a      Y~~Y      M~~M      X~~X  indirect    direct  #> 0.2422015 0.5122827 0.4962890 0.5557501 0.7536972 1.0000000 0.2542403 0.2422015  #>     total  #> 0.4964418"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"vcov-1","dir":"Articles","previous_headings":"Methods","what":"vcov","title":"semmcci: Methods (MC)","text":"","code":"vcov(std) #>                     cp             b             a          Y~~Y          M~~M #> cp        7.282779e-04 -4.752106e-04  6.237173e-06 -1.229146e-04 -5.989485e-06 #> b        -4.752106e-04  6.125120e-04  1.642942e-05 -3.060508e-04 -1.640917e-05 #> a         6.237173e-06  1.642942e-05  5.611590e-04 -1.652819e-04 -5.557632e-04 #> Y~~Y     -1.229146e-04 -3.060508e-04 -1.652819e-04  5.492649e-04  1.636993e-04 #> M~~M     -5.989485e-06 -1.640917e-05 -5.557632e-04  1.636993e-04  5.510681e-04 #> X~~X      1.208780e-20 -2.733152e-20  5.090204e-21  2.020607e-20 -4.993279e-21 #> indirect -2.328475e-04  3.124387e-04  2.954377e-04 -2.362630e-04 -2.926850e-04 #> direct    7.282779e-04 -4.752106e-04  6.237173e-06 -1.229146e-04 -5.989485e-06 #> total     4.954305e-04 -1.627720e-04  3.016748e-04 -3.591776e-04 -2.986745e-04 #>                   X~~X      indirect        direct         total #> cp        1.208780e-20 -2.328475e-04  7.282779e-04  4.954305e-04 #> b        -2.733152e-20  3.124387e-04 -4.752106e-04 -1.627720e-04 #> a         5.090204e-21  2.954377e-04  6.237173e-06  3.016748e-04 #> Y~~Y      2.020607e-20 -2.362630e-04 -1.229146e-04 -3.591776e-04 #> M~~M     -4.993279e-21 -2.926850e-04 -5.989485e-06 -2.986745e-04 #> X~~X      1.169606e-32 -1.121914e-20  1.208780e-20  8.686663e-22 #> indirect -1.121914e-20  3.066708e-04 -2.328475e-04  7.382336e-05 #> direct    1.208780e-20 -2.328475e-04  7.282779e-04  4.954305e-04 #> total     8.686663e-22  7.382336e-05  4.954305e-04  5.692539e-04"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"confint-1","dir":"Articles","previous_headings":"Methods","what":"confint","title":"semmcci: Methods (MC)","text":"","code":"confint(std, level = 0.95) #>              2.5 %    97.5 % #> cp       0.1891588 0.2953162 #> b        0.4626739 0.5601948 #> a        0.4488589 0.5417857 #> Y~~Y     0.5097851 0.6018754 #> M~~M     0.7064682 0.7985256 #> X~~X     1.0000000 1.0000000 #> indirect 0.2197282 0.2887010 #> direct   0.1891588 0.2953162 #> total    0.4476136 0.5419957"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/semmcci.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"can install CRAN release semmcci : can install development version semmcci GitHub :","code":"install.packages(\"semmcci\") if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"jeksterslab/semmcci\")"},{"path":"https://github.com/jeksterslab/semmcci/articles/semmcci.html","id":"the-monte-carlo-method","dir":"Articles","previous_headings":"","what":"The Monte Carlo Method","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"Monte Carlo method, sampling distribution parameter estimates \\(\\hat{\\boldsymbol{\\theta}}^{\\ast}\\) generated multivariate normal distribution using parameter estimates \\(\\hat{\\boldsymbol{\\theta}}\\) corresponding sampling variance-covariance matrix \\(\\widehat{\\mathrm{Var}} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\). \\[\\begin{equation}     \\hat{\\boldsymbol{\\theta}}^{\\ast}     \\sim     \\mathcal{N}     \\left(     \\hat{\\boldsymbol{\\theta}},     \\widehat{\\mathrm{Var}}     \\left(     \\hat{\\boldsymbol{\\theta}}     \\right)     \\right) \\end{equation}\\] Confidence intervals defined parameters \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) generated obtaining percentiles corresponding \\(100(1 - \\alpha)\\%\\) generated sampling distribution, \\(\\alpha\\) significance level.","code":""},{"path":"https://github.com/jeksterslab/semmcci/articles/semmcci.html","id":"semmcci","dir":"Articles","previous_headings":"","what":"semmcci","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"Monte Carlo confidence intervals free defined parameters Monte Carlo confidence intervals free defined parameters models fitted structural equation modeling package lavaan can generated using semmcci package. package three main functions, namely, MC(), MCMI(), MCStd(). output lavaan passed first argument MC() function MCMI() function generate Monte Carlo confidence intervals. Monte Carlo confidence intervals standardized estimates can also generated passing output MC() function MCMI() function MCStd() function. description package code examples presented Pesigan Cheung (2023: https://doi.org/10.3758/s13428-023-02114-4).","code":""},{"path":"https://github.com/jeksterslab/semmcci/articles/semmcci.html","id":"citation","dir":"Articles","previous_headings":"","what":"Citation","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"cite semmcci publications, please cite Pesigan & Cheung (2023).","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/session/session.html","id":"session","dir":"Articles > Session","previous_headings":"","what":"Session","title":"semmcci: Session","text":"","code":"sessionInfo() #> R version 4.3.1 (2023-06-16) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] semmcci_1.1.2.9000 #>  #> loaded via a namespace (and not attached): #>  [1] vctrs_0.6.3       cli_3.6.1         knitr_1.43        rlang_1.1.1       #>  [5] xfun_0.39         stringi_1.7.12    purrr_1.0.1       textshaping_0.3.6 #>  [9] jsonlite_1.8.7    glue_1.6.2        rprojroot_2.0.3   htmltools_0.5.5   #> [13] ragg_1.2.5        sass_0.4.7        rmarkdown_2.23    evaluate_0.21     #> [17] jquerylib_0.1.4   fastmap_1.1.1     yaml_2.3.7        lifecycle_1.0.3   #> [21] memoise_2.0.1     stringr_1.5.0     compiler_4.3.1    fs_1.6.3          #> [25] systemfonts_1.0.4 digest_0.6.33     R6_2.5.1          magrittr_2.0.3    #> [29] bslib_0.5.0       tools_4.3.1       pkgdown_2.0.7     cachem_1.0.8      #> [33] desc_1.4.2"},{"path":"https://github.com/jeksterslab/semmcci/articles/session/session.html","id":"packages","dir":"Articles > Session","previous_headings":"","what":"Packages","title":"semmcci: Session","text":"","code":"installed.packages() #>              Package        LibPath                           Version      #> abind        \"abind\"        \"/home/runner/work/_temp/Library\" \"1.4-5\"      #> Amelia       \"Amelia\"       \"/home/runner/work/_temp/Library\" \"1.8.1\"      #> arm          \"arm\"          \"/home/runner/work/_temp/Library\" \"1.13-1\"     #> askpass      \"askpass\"      \"/home/runner/work/_temp/Library\" \"1.1\"        #> backports    \"backports\"    \"/home/runner/work/_temp/Library\" \"1.4.1\"      #> base64enc    \"base64enc\"    \"/home/runner/work/_temp/Library\" \"0.1-3\"      #> bit          \"bit\"          \"/home/runner/work/_temp/Library\" \"4.0.5\"      #> bit64        \"bit64\"        \"/home/runner/work/_temp/Library\" \"4.0.5\"      #> bmemLavaan   \"bmemLavaan\"   \"/home/runner/work/_temp/Library\" \"0.5\"        #> brio         \"brio\"         \"/home/runner/work/_temp/Library\" \"1.1.3\"      #> broom        \"broom\"        \"/home/runner/work/_temp/Library\" \"1.0.5\"      #> bslib        \"bslib\"        \"/home/runner/work/_temp/Library\" \"0.5.0\"      #> cachem       \"cachem\"       \"/home/runner/work/_temp/Library\" \"1.0.8\"      #> callr        \"callr\"        \"/home/runner/work/_temp/Library\" \"3.7.3\"      #> cli          \"cli\"          \"/home/runner/work/_temp/Library\" \"3.6.1\"      #> clipr        \"clipr\"        \"/home/runner/work/_temp/Library\" \"0.8.0\"      #> coda         \"coda\"         \"/home/runner/work/_temp/Library\" \"0.19-4\"     #> covr         \"covr\"         \"/home/runner/work/_temp/Library\" \"3.6.2\"      #> crayon       \"crayon\"       \"/home/runner/work/_temp/Library\" \"1.5.2\"      #> curl         \"curl\"         \"/home/runner/work/_temp/Library\" \"5.0.1\"      #> cyclocomp    \"cyclocomp\"    \"/home/runner/work/_temp/Library\" \"1.1.0\"      #> desc         \"desc\"         \"/home/runner/work/_temp/Library\" \"1.4.2\"      #> diffobj      \"diffobj\"      \"/home/runner/work/_temp/Library\" \"0.3.5\"      #> digest       \"digest\"       \"/home/runner/work/_temp/Library\" \"0.6.33\"     #> downlit      \"downlit\"      \"/home/runner/work/_temp/Library\" \"0.4.3\"      #> dplyr        \"dplyr\"        \"/home/runner/work/_temp/Library\" \"1.1.2\"      #> ellipsis     \"ellipsis\"     \"/home/runner/work/_temp/Library\" \"0.3.2\"      #> evaluate     \"evaluate\"     \"/home/runner/work/_temp/Library\" \"0.21\"       #> fansi        \"fansi\"        \"/home/runner/work/_temp/Library\" \"1.0.4\"      #> fastmap      \"fastmap\"      \"/home/runner/work/_temp/Library\" \"1.1.1\"      #> fontawesome  \"fontawesome\"  \"/home/runner/work/_temp/Library\" \"0.5.1\"      #> forcats      \"forcats\"      \"/home/runner/work/_temp/Library\" \"1.0.0\"      #> foreach      \"foreach\"      \"/home/runner/work/_temp/Library\" \"1.5.2\"      #> fs           \"fs\"           \"/home/runner/work/_temp/Library\" \"1.6.3\"      #> generics     \"generics\"     \"/home/runner/work/_temp/Library\" \"0.1.3\"      #> glmnet       \"glmnet\"       \"/home/runner/work/_temp/Library\" \"4.1-7\"      #> glue         \"glue\"         \"/home/runner/work/_temp/Library\" \"1.6.2\"      #> haven        \"haven\"        \"/home/runner/work/_temp/Library\" \"2.5.3\"      #> highr        \"highr\"        \"/home/runner/work/_temp/Library\" \"0.10\"       #> hms          \"hms\"          \"/home/runner/work/_temp/Library\" \"1.1.3\"      #> htmltools    \"htmltools\"    \"/home/runner/work/_temp/Library\" \"0.5.5\"      #> httr         \"httr\"         \"/home/runner/work/_temp/Library\" \"1.4.6\"      #> iterators    \"iterators\"    \"/home/runner/work/_temp/Library\" \"1.0.14\"     #> jomo         \"jomo\"         \"/home/runner/work/_temp/Library\" \"2.7-6\"      #> jquerylib    \"jquerylib\"    \"/home/runner/work/_temp/Library\" \"0.1.4\"      #> jsonlite     \"jsonlite\"     \"/home/runner/work/_temp/Library\" \"1.8.7\"      #> knitr        \"knitr\"        \"/home/runner/work/_temp/Library\" \"1.43\"       #> lavaan       \"lavaan\"       \"/home/runner/work/_temp/Library\" \"0.6-16\"     #> lazyeval     \"lazyeval\"     \"/home/runner/work/_temp/Library\" \"0.2.2\"      #> lifecycle    \"lifecycle\"    \"/home/runner/work/_temp/Library\" \"1.0.3\"      #> lintr        \"lintr\"        \"/home/runner/work/_temp/Library\" \"3.1.0\"      #> lme4         \"lme4\"         \"/home/runner/work/_temp/Library\" \"1.1-34\"     #> magrittr     \"magrittr\"     \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> memoise      \"memoise\"      \"/home/runner/work/_temp/Library\" \"2.0.1\"      #> mi           \"mi\"           \"/home/runner/work/_temp/Library\" \"1.1\"        #> mice         \"mice\"         \"/home/runner/work/_temp/Library\" \"3.16.0\"     #> mime         \"mime\"         \"/home/runner/work/_temp/Library\" \"0.12\"       #> minqa        \"minqa\"        \"/home/runner/work/_temp/Library\" \"1.2.5\"      #> mitml        \"mitml\"        \"/home/runner/work/_temp/Library\" \"0.4-5\"      #> mnormt       \"mnormt\"       \"/home/runner/work/_temp/Library\" \"2.1.1\"      #> nloptr       \"nloptr\"       \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> numDeriv     \"numDeriv\"     \"/home/runner/work/_temp/Library\" \"2016.8-1.1\" #> openssl      \"openssl\"      \"/home/runner/work/_temp/Library\" \"2.1.0\"      #> ordinal      \"ordinal\"      \"/home/runner/work/_temp/Library\" \"2022.11-16\" #> pan          \"pan\"          \"/home/runner/work/_temp/Library\" \"1.8\"        #> pbivnorm     \"pbivnorm\"     \"/home/runner/work/_temp/Library\" \"0.6.0\"      #> pillar       \"pillar\"       \"/home/runner/work/_temp/Library\" \"1.9.0\"      #> pkgbuild     \"pkgbuild\"     \"/home/runner/work/_temp/Library\" \"1.4.2\"      #> pkgconfig    \"pkgconfig\"    \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> pkgdown      \"pkgdown\"      \"/home/runner/work/_temp/Library\" \"2.0.7\"      #> pkgload      \"pkgload\"      \"/home/runner/work/_temp/Library\" \"1.3.2.1\"    #> praise       \"praise\"       \"/home/runner/work/_temp/Library\" \"1.0.0\"      #> prettyunits  \"prettyunits\"  \"/home/runner/work/_temp/Library\" \"1.1.1\"      #> processx     \"processx\"     \"/home/runner/work/_temp/Library\" \"3.8.2\"      #> ps           \"ps\"           \"/home/runner/work/_temp/Library\" \"1.7.5\"      #> psych        \"psych\"        \"/home/runner/work/_temp/Library\" \"2.3.6\"      #> purrr        \"purrr\"        \"/home/runner/work/_temp/Library\" \"1.0.1\"      #> quadprog     \"quadprog\"     \"/home/runner/work/_temp/Library\" \"1.5-8\"      #> R6           \"R6\"           \"/home/runner/work/_temp/Library\" \"2.5.1\"      #> ragg         \"ragg\"         \"/home/runner/work/_temp/Library\" \"1.2.5\"      #> rappdirs     \"rappdirs\"     \"/home/runner/work/_temp/Library\" \"0.3.3\"      #> rcmdcheck    \"rcmdcheck\"    \"/home/runner/work/_temp/Library\" \"1.4.0\"      #> Rcpp         \"Rcpp\"         \"/home/runner/work/_temp/Library\" \"1.0.11\"     #> readr        \"readr\"        \"/home/runner/work/_temp/Library\" \"2.1.4\"      #> rematch2     \"rematch2\"     \"/home/runner/work/_temp/Library\" \"2.1.2\"      #> remotes      \"remotes\"      \"/home/runner/work/_temp/Library\" \"2.4.2.1\"    #> rex          \"rex\"          \"/home/runner/work/_temp/Library\" \"1.2.1\"      #> rlang        \"rlang\"        \"/home/runner/work/_temp/Library\" \"1.1.1\"      #> rmarkdown    \"rmarkdown\"    \"/home/runner/work/_temp/Library\" \"2.23\"       #> rprojroot    \"rprojroot\"    \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> rsem         \"rsem\"         \"/home/runner/work/_temp/Library\" \"0.5.0\"      #> sass         \"sass\"         \"/home/runner/work/_temp/Library\" \"0.4.7\"      #> sem          \"sem\"          \"/home/runner/work/_temp/Library\" \"3.1-15\"     #> semmcci      \"semmcci\"      \"/home/runner/work/_temp/Library\" \"1.1.2.9000\" #> sessioninfo  \"sessioninfo\"  \"/home/runner/work/_temp/Library\" \"1.2.2\"      #> shape        \"shape\"        \"/home/runner/work/_temp/Library\" \"1.4.6\"      #> snow         \"snow\"         \"/home/runner/work/_temp/Library\" \"0.4-4\"      #> snowfall     \"snowfall\"     \"/home/runner/work/_temp/Library\" \"1.84-6.2\"   #> stringi      \"stringi\"      \"/home/runner/work/_temp/Library\" \"1.7.12\"     #> stringr      \"stringr\"      \"/home/runner/work/_temp/Library\" \"1.5.0\"      #> sys          \"sys\"          \"/home/runner/work/_temp/Library\" \"3.4.2\"      #> systemfonts  \"systemfonts\"  \"/home/runner/work/_temp/Library\" \"1.0.4\"      #> testthat     \"testthat\"     \"/home/runner/work/_temp/Library\" \"3.1.10\"     #> textshaping  \"textshaping\"  \"/home/runner/work/_temp/Library\" \"0.3.6\"      #> tibble       \"tibble\"       \"/home/runner/work/_temp/Library\" \"3.2.1\"      #> tidyr        \"tidyr\"        \"/home/runner/work/_temp/Library\" \"1.3.0\"      #> tidyselect   \"tidyselect\"   \"/home/runner/work/_temp/Library\" \"1.2.0\"      #> tinytex      \"tinytex\"      \"/home/runner/work/_temp/Library\" \"0.45\"       #> tzdb         \"tzdb\"         \"/home/runner/work/_temp/Library\" \"0.4.0\"      #> ucminf       \"ucminf\"       \"/home/runner/work/_temp/Library\" \"1.2.0\"      #> utf8         \"utf8\"         \"/home/runner/work/_temp/Library\" \"1.2.3\"      #> vctrs        \"vctrs\"        \"/home/runner/work/_temp/Library\" \"0.6.3\"      #> vroom        \"vroom\"        \"/home/runner/work/_temp/Library\" \"1.6.3\"      #> waldo        \"waldo\"        \"/home/runner/work/_temp/Library\" \"0.5.1\"      #> whisker      \"whisker\"      \"/home/runner/work/_temp/Library\" \"0.4.1\"      #> withr        \"withr\"        \"/home/runner/work/_temp/Library\" \"2.5.0\"      #> xfun         \"xfun\"         \"/home/runner/work/_temp/Library\" \"0.39\"       #> xml2         \"xml2\"         \"/home/runner/work/_temp/Library\" \"1.3.5\"      #> xmlparsedata \"xmlparsedata\" \"/home/runner/work/_temp/Library\" \"1.0.5\"      #> xopen        \"xopen\"        \"/home/runner/work/_temp/Library\" \"1.0.0\"      #> yaml         \"yaml\"         \"/home/runner/work/_temp/Library\" \"2.3.7\"      #> pak          \"pak\"          \"/opt/R/4.3.1/lib/R/site-library\" \"0.5.1\"      #> base         \"base\"         \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> boot         \"boot\"         \"/opt/R/4.3.1/lib/R/library\"      \"1.3-28.1\"   #> class        \"class\"        \"/opt/R/4.3.1/lib/R/library\"      \"7.3-22\"     #> cluster      \"cluster\"      \"/opt/R/4.3.1/lib/R/library\"      \"2.1.4\"      #> codetools    \"codetools\"    \"/opt/R/4.3.1/lib/R/library\"      \"0.2-19\"     #> compiler     \"compiler\"     \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> datasets     \"datasets\"     \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> foreign      \"foreign\"      \"/opt/R/4.3.1/lib/R/library\"      \"0.8-84\"     #> graphics     \"graphics\"     \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> grDevices    \"grDevices\"    \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> grid         \"grid\"         \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> KernSmooth   \"KernSmooth\"   \"/opt/R/4.3.1/lib/R/library\"      \"2.23-21\"    #> lattice      \"lattice\"      \"/opt/R/4.3.1/lib/R/library\"      \"0.21-8\"     #> MASS         \"MASS\"         \"/opt/R/4.3.1/lib/R/library\"      \"7.3-60\"     #> Matrix       \"Matrix\"       \"/opt/R/4.3.1/lib/R/library\"      \"1.5-4.1\"    #> methods      \"methods\"      \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> mgcv         \"mgcv\"         \"/opt/R/4.3.1/lib/R/library\"      \"1.8-42\"     #> nlme         \"nlme\"         \"/opt/R/4.3.1/lib/R/library\"      \"3.1-162\"    #> nnet         \"nnet\"         \"/opt/R/4.3.1/lib/R/library\"      \"7.3-19\"     #> parallel     \"parallel\"     \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> rpart        \"rpart\"        \"/opt/R/4.3.1/lib/R/library\"      \"4.1.19\"     #> spatial      \"spatial\"      \"/opt/R/4.3.1/lib/R/library\"      \"7.3-16\"     #> splines      \"splines\"      \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> stats        \"stats\"        \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> stats4       \"stats4\"       \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> survival     \"survival\"     \"/opt/R/4.3.1/lib/R/library\"      \"3.5-5\"      #> tcltk        \"tcltk\"        \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> tools        \"tools\"        \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> utils        \"utils\"        \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #>              Priority      #> abind        NA            #> Amelia       NA            #> arm          NA            #> askpass      NA            #> backports    NA            #> base64enc    NA            #> bit          NA            #> bit64        NA            #> bmemLavaan   NA            #> brio         NA            #> broom        NA            #> bslib        NA            #> cachem       NA            #> callr        NA            #> cli          NA            #> clipr        NA            #> coda         NA            #> covr         NA            #> crayon       NA            #> curl         NA            #> cyclocomp    NA            #> desc         NA            #> diffobj      NA            #> digest       NA            #> downlit      NA            #> dplyr        NA            #> ellipsis     NA            #> evaluate     NA            #> fansi        NA            #> fastmap      NA            #> fontawesome  NA            #> forcats      NA            #> foreach      NA            #> fs           NA            #> generics     NA            #> glmnet       NA            #> glue         NA            #> haven        NA            #> highr        NA            #> hms          NA            #> htmltools    NA            #> httr         NA            #> iterators    NA            #> jomo         NA            #> jquerylib    NA            #> jsonlite     NA            #> knitr        NA            #> lavaan       NA            #> lazyeval     NA            #> lifecycle    NA            #> lintr        NA            #> lme4         NA            #> magrittr     NA            #> memoise      NA            #> mi           NA            #> mice         NA            #> mime         NA            #> minqa        NA            #> mitml        NA            #> mnormt       NA            #> nloptr       NA            #> numDeriv     NA            #> openssl      NA            #> ordinal      NA            #> pan          NA            #> pbivnorm     NA            #> pillar       NA            #> pkgbuild     NA            #> pkgconfig    NA            #> pkgdown      NA            #> pkgload      NA            #> praise       NA            #> prettyunits  NA            #> processx     NA            #> ps           NA            #> psych        NA            #> purrr        NA            #> quadprog     NA            #> R6           NA            #> ragg         NA            #> rappdirs     NA            #> rcmdcheck    NA            #> Rcpp         NA            #> readr        NA            #> rematch2     NA            #> remotes      NA            #> rex          NA            #> rlang        NA            #> rmarkdown    NA            #> rprojroot    NA            #> rsem         NA            #> sass         NA            #> sem          NA            #> semmcci      NA            #> sessioninfo  NA            #> shape        NA            #> snow         NA            #> snowfall     NA            #> stringi      NA            #> stringr      NA            #> sys          NA            #> systemfonts  NA            #> testthat     NA            #> textshaping  NA            #> tibble       NA            #> tidyr        NA            #> tidyselect   NA            #> tinytex      NA            #> tzdb         NA            #> ucminf       NA            #> utf8         NA            #> vctrs        NA            #> vroom        NA            #> waldo        NA            #> whisker      NA            #> withr        NA            #> xfun         NA            #> xml2         NA            #> xmlparsedata NA            #> xopen        NA            #> yaml         NA            #> pak          NA            #> base         \"base\"        #> boot         \"recommended\" #> class        \"recommended\" #> cluster      \"recommended\" #> codetools    \"recommended\" #> compiler     \"base\"        #> datasets     \"base\"        #> foreign      \"recommended\" #> graphics     \"base\"        #> grDevices    \"base\"        #> grid         \"base\"        #> KernSmooth   \"recommended\" #> lattice      \"recommended\" #> MASS         \"recommended\" #> Matrix       \"recommended\" #> methods      \"base\"        #> mgcv         \"recommended\" #> nlme         \"recommended\" #> nnet         \"recommended\" #> parallel     \"base\"        #> rpart        \"recommended\" #> spatial      \"recommended\" #> splines      \"base\"        #> stats        \"base\"        #> stats4       \"base\"        #> survival     \"recommended\" #> tcltk        \"base\"        #> tools        \"base\"        #> utils        \"base\"        #>              Depends                                                     #> abind        \"R (>= 1.5.0)\"                                              #> Amelia       \"R (>= 3.0.2), Rcpp (>= 0.11)\"                              #> arm          \"R (>= 3.1.0), MASS, Matrix (>= 1.0), stats, lme4 (>= 1.0)\" #> askpass      NA                                                          #> backports    \"R (>= 3.0.0)\"                                              #> base64enc    \"R (>= 2.9.0)\"                                              #> bit          \"R (>= 2.9.2)\"                                              #> bit64        \"R (>= 3.0.1), bit (>= 4.0.0), utils, methods, stats\"       #> bmemLavaan   \"R (>= 3.5.0), Amelia, MASS, snowfall, rsem\"                #> brio         NA                                                          #> broom        \"R (>= 3.5)\"                                                #> bslib        \"R (>= 2.10)\"                                               #> cachem       NA                                                          #> callr        \"R (>= 3.4)\"                                                #> cli          \"R (>= 3.4)\"                                                #> clipr        NA                                                          #> coda         \"R (>= 2.14.0)\"                                             #> covr         \"R (>= 3.1.0), methods\"                                     #> crayon       NA                                                          #> curl         \"R (>= 3.0.0)\"                                              #> cyclocomp    NA                                                          #> desc         \"R (>= 3.4)\"                                                #> diffobj      \"R (>= 3.1.0)\"                                              #> digest       \"R (>= 3.3.0)\"                                              #> downlit      \"R (>= 3.4.0)\"                                              #> dplyr        \"R (>= 3.5.0)\"                                              #> ellipsis     \"R (>= 3.2)\"                                                #> evaluate     \"R (>= 3.0.2)\"                                              #> fansi        \"R (>= 3.1.0)\"                                              #> fastmap      NA                                                          #> fontawesome  \"R (>= 3.3.0)\"                                              #> forcats      \"R (>= 3.4)\"                                                #> foreach      \"R (>= 2.5.0)\"                                              #> fs           \"R (>= 3.4)\"                                                #> generics     \"R (>= 3.2)\"                                                #> glmnet       \"R (>= 3.6.0), Matrix (>= 1.0-6)\"                           #> glue         \"R (>= 3.4)\"                                                #> haven        \"R (>= 3.6)\"                                                #> highr        \"R (>= 3.3.0)\"                                              #> hms          NA                                                          #> htmltools    \"R (>= 2.14.1)\"                                             #> httr         \"R (>= 3.5)\"                                                #> iterators    \"R (>= 2.5.0), utils\"                                       #> jomo         NA                                                          #> jquerylib    NA                                                          #> jsonlite     \"methods\"                                                   #> knitr        \"R (>= 3.3.0)\"                                              #> lavaan       \"R(>= 3.4)\"                                                 #> lazyeval     \"R (>= 3.1.0)\"                                              #> lifecycle    \"R (>= 3.4)\"                                                #> lintr        \"R (>= 3.5)\"                                                #> lme4         \"R (>= 3.5.0), Matrix (>= 1.2-1), methods, stats\"           #> magrittr     \"R (>= 3.4.0)\"                                              #> memoise      NA                                                          #> mi           \"R (>= 3.0.0), methods, Matrix, stats4\"                     #> mice         \"R (>= 2.10.0)\"                                             #> mime         NA                                                          #> minqa        NA                                                          #> mitml        NA                                                          #> mnormt       \"R (>= 2.2.0)\"                                              #> nloptr       NA                                                          #> numDeriv     \"R (>= 2.11.1)\"                                             #> openssl      NA                                                          #> ordinal      \"R (>= 2.13.0), stats, methods\"                             #> pan          NA                                                          #> pbivnorm     NA                                                          #> pillar       NA                                                          #> pkgbuild     \"R (>= 3.4)\"                                                #> pkgconfig    NA                                                          #> pkgdown      \"R (>= 3.1.0)\"                                              #> pkgload      \"R (>= 3.4.0)\"                                              #> praise       NA                                                          #> prettyunits  NA                                                          #> processx     \"R (>= 3.4.0)\"                                              #> ps           \"R (>= 3.4)\"                                                #> psych        NA                                                          #> purrr        \"R (>= 3.4.0)\"                                              #> quadprog     \"R (>= 3.1.0)\"                                              #> R6           \"R (>= 3.0)\"                                                #> ragg         NA                                                          #> rappdirs     \"R (>= 3.2)\"                                                #> rcmdcheck    NA                                                          #> Rcpp         NA                                                          #> readr        \"R (>= 3.5)\"                                                #> rematch2     NA                                                          #> remotes      \"R (>= 3.0.0)\"                                              #> rex          NA                                                          #> rlang        \"R (>= 3.5.0)\"                                              #> rmarkdown    \"R (>= 3.0)\"                                                #> rprojroot    \"R (>= 3.0.0)\"                                              #> rsem         \"R (>= 2.7), MASS, lavaan\"                                  #> sass         NA                                                          #> sem          \"R (>= 3.5.0), stats\"                                       #> semmcci      \"R (>= 3.0.0)\"                                              #> sessioninfo  \"R (>= 2.10)\"                                               #> shape        \"R (>= 2.01)\"                                               #> snow         \"R (>= 2.13.1), utils\"                                      #> snowfall     \"R (>= 2.10), snow\"                                         #> stringi      \"R (>= 3.1)\"                                                #> stringr      \"R (>= 3.3)\"                                                #> sys          NA                                                          #> systemfonts  \"R (>= 3.2.0)\"                                              #> testthat     \"R (>= 3.1)\"                                                #> textshaping  \"R (>= 3.2.0)\"                                              #> tibble       \"R (>= 3.4.0)\"                                              #> tidyr        \"R (>= 3.4.0)\"                                              #> tidyselect   \"R (>= 3.4)\"                                                #> tinytex      NA                                                          #> tzdb         \"R (>= 3.5.0)\"                                              #> ucminf       \"R (>= 3.5.0)\"                                              #> utf8         \"R (>= 2.10)\"                                               #> vctrs        \"R (>= 3.5.0)\"                                              #> vroom        \"R (>= 3.4)\"                                                #> waldo        NA                                                          #> whisker      NA                                                          #> withr        \"R (>= 3.2.0)\"                                              #> xfun         NA                                                          #> xml2         \"R (>= 3.1.0)\"                                              #> xmlparsedata \"R (>= 3.0.0)\"                                              #> xopen        \"R (>= 3.1)\"                                                #> yaml         NA                                                          #> pak          \"R (>= 3.2)\"                                                #> base         NA                                                          #> boot         \"R (>= 3.0.0), graphics, stats\"                             #> class        \"R (>= 3.0.0), stats, utils\"                                #> cluster      \"R (>= 3.5.0)\"                                              #> codetools    \"R (>= 2.1)\"                                                #> compiler     NA                                                          #> datasets     NA                                                          #> foreign      \"R (>= 4.0.0)\"                                              #> graphics     NA                                                          #> grDevices    NA                                                          #> grid         NA                                                          #> KernSmooth   \"R (>= 2.5.0), stats\"                                       #> lattice      \"R (>= 4.0.0)\"                                              #> MASS         \"R (>= 4.0), grDevices, graphics, stats, utils\"             #> Matrix       \"R (>= 3.5.0), methods\"                                     #> methods      NA                                                          #> mgcv         \"R (>= 3.6.0), nlme (>= 3.1-64)\"                            #> nlme         \"R (>= 3.5.0)\"                                              #> nnet         \"R (>= 3.0.0), stats, utils\"                                #> parallel     NA                                                          #> rpart        \"R (>= 2.15.0), graphics, stats, grDevices\"                 #> spatial      \"R (>= 3.0.0), graphics, stats, utils\"                      #> splines      NA                                                          #> stats        NA                                                          #> stats4       NA                                                          #> survival     \"R (>= 3.5.0)\"                                              #> tcltk        NA                                                          #> tools        NA                                                          #> utils        NA                                                          #>              Imports                                                                                                                                                                                                                                                                       #> abind        \"methods, utils\"                                                                                                                                                                                                                                                              #> Amelia       \"foreign, utils, grDevices, graphics, methods, stats, rlang\"                                                                                                                                                                                                                  #> arm          \"abind, coda, graphics, grDevices, methods, nlme, utils\"                                                                                                                                                                                                                      #> askpass      \"sys (>= 2.1)\"                                                                                                                                                                                                                                                                #> backports    NA                                                                                                                                                                                                                                                                            #> base64enc    NA                                                                                                                                                                                                                                                                            #> bit          NA                                                                                                                                                                                                                                                                            #> bit64        NA                                                                                                                                                                                                                                                                            #> bmemLavaan   \"lavaan, sem\"                                                                                                                                                                                                                                                                 #> brio         NA                                                                                                                                                                                                                                                                            #> broom        \"backports, dplyr (>= 1.0.0), ellipsis, generics (>= 0.0.2),\\nglue, lifecycle, purrr, rlang, stringr, tibble (>= 3.0.0),\\ntidyr (>= 1.0.0)\"                                                                                                                                   #> bslib        \"base64enc, cachem, grDevices, htmltools (>= 0.5.4), jquerylib\\n(>= 0.1.3), jsonlite, memoise (>= 2.0.1), mime, rlang, sass (>=\\n0.4.0)\"                                                                                                                                      #> cachem       \"rlang, fastmap (>= 1.1.1)\"                                                                                                                                                                                                                                                   #> callr        \"processx (>= 3.6.1), R6, utils\"                                                                                                                                                                                                                                              #> cli          \"utils\"                                                                                                                                                                                                                                                                       #> clipr        \"utils\"                                                                                                                                                                                                                                                                       #> coda         \"lattice\"                                                                                                                                                                                                                                                                     #> covr         \"digest, stats, utils, jsonlite, rex, httr, crayon, withr (>=\\n1.0.2), yaml\"                                                                                                                                                                                                  #> crayon       \"grDevices, methods, utils\"                                                                                                                                                                                                                                                   #> curl         NA                                                                                                                                                                                                                                                                            #> cyclocomp    \"callr, crayon, desc, remotes, withr\"                                                                                                                                                                                                                                         #> desc         \"cli, R6, rprojroot, utils\"                                                                                                                                                                                                                                                   #> diffobj      \"crayon (>= 1.3.2), tools, methods, utils, stats\"                                                                                                                                                                                                                             #> digest       \"utils\"                                                                                                                                                                                                                                                                       #> downlit      \"brio, desc, digest, evaluate, fansi, memoise, rlang, vctrs,\\nwithr, yaml\"                                                                                                                                                                                                    #> dplyr        \"cli (>= 3.4.0), generics, glue (>= 1.3.2), lifecycle (>=\\n1.0.3), magrittr (>= 1.5), methods, pillar (>= 1.9.0), R6,\\nrlang (>= 1.1.0), tibble (>= 3.2.0), tidyselect (>= 1.2.0),\\nutils, vctrs (>= 0.6.0)\"                                                                  #> ellipsis     \"rlang (>= 0.3.0)\"                                                                                                                                                                                                                                                            #> evaluate     \"methods\"                                                                                                                                                                                                                                                                     #> fansi        \"grDevices, utils\"                                                                                                                                                                                                                                                            #> fastmap      NA                                                                                                                                                                                                                                                                            #> fontawesome  \"rlang (>= 1.0.6), htmltools (>= 0.5.1.1)\"                                                                                                                                                                                                                                    #> forcats      \"cli (>= 3.4.0), glue, lifecycle, magrittr, rlang (>= 1.0.0),\\ntibble\"                                                                                                                                                                                                        #> foreach      \"codetools, utils, iterators\"                                                                                                                                                                                                                                                 #> fs           \"methods\"                                                                                                                                                                                                                                                                     #> generics     \"methods\"                                                                                                                                                                                                                                                                     #> glmnet       \"methods, utils, foreach, shape, survival, Rcpp\"                                                                                                                                                                                                                              #> glue         \"methods\"                                                                                                                                                                                                                                                                     #> haven        \"cli (>= 3.0.0), forcats (>= 0.2.0), hms, lifecycle, methods,\\nreadr (>= 0.1.0), rlang (>= 0.4.0), tibble, tidyselect, vctrs\\n(>= 0.3.0)\"                                                                                                                                     #> highr        \"xfun (>= 0.18)\"                                                                                                                                                                                                                                                              #> hms          \"lifecycle, methods, pkgconfig, rlang (>= 1.0.2), vctrs (>=\\n0.3.8)\"                                                                                                                                                                                                          #> htmltools    \"utils, digest, grDevices, base64enc, rlang (>= 0.4.10),\\nfastmap (>= 1.1.0), ellipsis\"                                                                                                                                                                                       #> httr         \"curl (>= 3.0.0), jsonlite, mime, openssl (>= 0.8), R6\"                                                                                                                                                                                                                       #> iterators    NA                                                                                                                                                                                                                                                                            #> jomo         \"stats, lme4, survival, MASS, ordinal, tibble\"                                                                                                                                                                                                                                #> jquerylib    \"htmltools\"                                                                                                                                                                                                                                                                   #> jsonlite     NA                                                                                                                                                                                                                                                                            #> knitr        \"evaluate (>= 0.15), highr, methods, tools, xfun (>= 0.39),\\nyaml (>= 2.1.19)\"                                                                                                                                                                                                #> lavaan       \"methods, stats4, stats, utils, graphics, MASS, mnormt,\\npbivnorm, numDeriv, quadprog\"                                                                                                                                                                                        #> lazyeval     NA                                                                                                                                                                                                                                                                            #> lifecycle    \"cli (>= 3.4.0), glue, rlang (>= 1.0.6)\"                                                                                                                                                                                                                                      #> lintr        \"backports, codetools, cyclocomp, digest, glue, knitr, rex,\\nstats, utils, xml2 (>= 1.0.0), xmlparsedata (>= 1.0.5)\"                                                                                                                                                          #> lme4         \"graphics, grid, splines, utils, parallel, MASS, lattice, boot,\\nnlme (>= 3.1-123), minqa (>= 1.1.15), nloptr (>= 1.0.4)\"                                                                                                                                                     #> magrittr     NA                                                                                                                                                                                                                                                                            #> memoise      \"rlang (>= 0.4.10), cachem\"                                                                                                                                                                                                                                                   #> mi           \"arm (>= 1.4-11)\"                                                                                                                                                                                                                                                             #> mice         \"broom, dplyr, generics, glmnet, graphics, grDevices, lattice,\\nmethods, mitml, nnet, Rcpp, rpart, rlang, stats, tidyr, utils\"                                                                                                                                                #> mime         \"tools\"                                                                                                                                                                                                                                                                       #> minqa        \"Rcpp (>= 0.9.10)\"                                                                                                                                                                                                                                                            #> mitml        \"pan, jomo, haven, grDevices, graphics, stats, methods, utils\"                                                                                                                                                                                                                #> mnormt       NA                                                                                                                                                                                                                                                                            #> nloptr       NA                                                                                                                                                                                                                                                                            #> numDeriv     NA                                                                                                                                                                                                                                                                            #> openssl      \"askpass\"                                                                                                                                                                                                                                                                     #> ordinal      \"ucminf, MASS, Matrix, numDeriv, nlme\"                                                                                                                                                                                                                                        #> pan          NA                                                                                                                                                                                                                                                                            #> pbivnorm     NA                                                                                                                                                                                                                                                                            #> pillar       \"cli (>= 2.3.0), fansi, glue, lifecycle, rlang (>= 1.0.2), utf8\\n(>= 1.1.0), utils, vctrs (>= 0.5.0)\"                                                                                                                                                                         #> pkgbuild     \"callr (>= 3.2.0), cli (>= 3.4.0), crayon, desc, prettyunits,\\nprocessx, R6, rprojroot\"                                                                                                                                                                                       #> pkgconfig    \"utils\"                                                                                                                                                                                                                                                                       #> pkgdown      \"bslib (>= 0.3.1), callr (>= 3.7.3), cli, desc, digest, downlit\\n(>= 0.4.0), fs (>= 1.4.0), httr (>= 1.4.2), jsonlite, magrittr,\\nmemoise, purrr, ragg, rlang (>= 1.0.0), rmarkdown (>=\\n1.1.9007), tibble, whisker, withr (>= 2.4.3), xml2 (>= 1.3.1),\\nyaml\"                #> pkgload      \"cli (>= 3.3.0), crayon, desc, fs, glue, methods, rlang (>=\\n1.0.3), rprojroot, utils, withr (>= 2.4.3)\"                                                                                                                                                                      #> praise       NA                                                                                                                                                                                                                                                                            #> prettyunits  NA                                                                                                                                                                                                                                                                            #> processx     \"ps (>= 1.2.0), R6, utils\"                                                                                                                                                                                                                                                    #> ps           \"utils\"                                                                                                                                                                                                                                                                       #> psych        \"mnormt,parallel,stats,graphics,grDevices,methods,lattice,nlme\"                                                                                                                                                                                                               #> purrr        \"cli (>= 3.4.0), lifecycle (>= 1.0.3), magrittr (>= 1.5.0),\\nrlang (>= 0.4.10), vctrs (>= 0.5.0)\"                                                                                                                                                                             #> quadprogragg         \"systemfonts (>= 1.0.3), textshaping (>= 0.3.0)\"                                                                                                                                                                                                                              #> rappdirs     NA                                                                                                                                                                                                                                                                            #> rcmdcheck    \"callr (>= 3.1.1.9000), cli (>= 3.0.0), curl, desc (>= 1.2.0),\\ndigest, pkgbuild, prettyunits, R6, rprojroot, sessioninfo (>=\\n1.1.1), utils, withr, xopen\"                                                                                                                   #> Rcpp         \"methods, utils\"                                                                                                                                                                                                                                                              #> readr        \"cli (>= 3.2.0), clipr, crayon, hms (>= 0.4.1), lifecycle (>=\\n0.2.0), methods, R6, rlang, tibble, utils, vroom (>= 1.6.0)\"                                                                                                                                                   #> rematch2     \"tibble\"                                                                                                                                                                                                                                                                      #> remotes      \"methods, stats, tools, utils\"                                                                                                                                                                                                                                                #> rex          \"lazyeval\"                                                                                                                                                                                                                                                                    #> rlang        \"utils\"                                                                                                                                                                                                                                                                       #> rmarkdown    \"bslib (>= 0.2.5.1), evaluate (>= 0.13), fontawesome (>=\\n0.5.0), htmltools (>= 0.5.1), jquerylib, jsonlite, knitr (>=\\n1.22), methods, stringr (>= 1.2.0), tinytex (>= 0.31), tools,\\nutils, xfun (>= 0.36), yaml (>= 2.1.19)\"                                               #> rprojroot    NA                                                                                                                                                                                                                                                                            #> rsem         NA                                                                                                                                                                                                                                                                            #> sass         \"fs (>= 1.2.4), rlang (>= 0.4.10), htmltools (>= 0.5.1), R6,\\nrappdirs\"                                                                                                                                                                                                       #> sem          \"MASS, boot, mi (>= 0.9-99), utils\"                                                                                                                                                                                                                                           #> semmcci      \"stats, lavaan, mice\"                                                                                                                                                                                                                                                         #> sessioninfo  \"cli (>= 3.1.0), tools, utils\"                                                                                                                                                                                                                                                #> shape        \"stats, graphics, grDevices\"                                                                                                                                                                                                                                                  #> snow         NA                                                                                                                                                                                                                                                                            #> snowfall     NA                                                                                                                                                                                                                                                                            #> stringi      \"tools, utils, stats\"                                                                                                                                                                                                                                                         #> stringr      \"cli, glue (>= 1.6.1), lifecycle (>= 1.0.3), magrittr, rlang\\n(>= 1.0.0), stringi (>= 1.5.3), vctrs\"                                                                                                                                                                          #> sys          NA                                                                                                                                                                                                                                                                            #> systemfonts  NA                                                                                                                                                                                                                                                                            #> testthat     \"brio, callr (>= 3.5.1), cli (>= 3.4.0), desc, digest, ellipsis\\n(>= 0.2.0), evaluate, jsonlite, lifecycle, magrittr, methods,\\npkgload (>= 1.3.0), praise, processx (>= 3.8.2), ps (>= 1.3.4),\\nR6 (>= 2.2.0), rlang (>= 1.1.0), utils, waldo (>= 0.5.0), withr\\n(>= 2.4.3)\" #> textshaping  \"systemfonts (>= 1.0.0)\"                                                                                                                                                                                                                                                      #> tibble       \"fansi (>= 0.4.0), lifecycle (>= 1.0.0), magrittr, methods,\\npillar (>= 1.8.1), pkgconfig, rlang (>= 1.0.2), utils, vctrs\\n(>= 0.4.2)\"                                                                                                                                        #> tidyr        \"cli (>= 3.4.1), dplyr (>= 1.0.10), glue, lifecycle (>= 1.0.3),\\nmagrittr, purrr (>= 1.0.1), rlang (>= 1.0.4), stringr (>=\\n1.5.0), tibble (>= 2.1.1), tidyselect (>= 1.2.0), utils, vctrs\\n(>= 0.5.2)\"                                                                       #> tidyselect   \"cli (>= 3.3.0), glue (>= 1.3.0), lifecycle (>= 1.0.3), rlang\\n(>= 1.0.4), vctrs (>= 0.4.1), withr\"                                                                                                                                                                           #> tinytex      \"xfun (>= 0.29)\"                                                                                                                                                                                                                                                              #> tzdb         NA                                                                                                                                                                                                                                                                            #> ucminf       NA                                                                                                                                                                                                                                                                            #> utf8         NA                                                                                                                                                                                                                                                                            #> vctrs        \"cli (>= 3.4.0), glue, lifecycle (>= 1.0.3), rlang (>= 1.1.0)\"                                                                                                                                                                                                                #> vroom        \"bit64, cli (>= 3.2.0), crayon, glue, hms, lifecycle (>=\\n1.0.3), methods, rlang (>= 0.4.2), stats, tibble (>= 2.0.0),\\ntidyselect, tzdb (>= 0.1.1), vctrs (>= 0.2.0), withr\"                                                                                                 #> waldo        \"cli, diffobj (>= 0.3.4), fansi, glue, methods, rematch2, rlang\\n(>= 1.0.0), tibble\"                                                                                                                                                                                          #> whisker      NA                                                                                                                                                                                                                                                                            #> withr        \"graphics, grDevices, stats\"                                                                                                                                                                                                                                                  #> xfun         \"stats, tools\"                                                                                                                                                                                                                                                                #> xml2         \"methods\"                                                                                                                                                                                                                                                                     #> xmlparsedata NA                                                                                                                                                                                                                                                                            #> xopen        \"processx\"                                                                                                                                                                                                                                                                    #> yaml         NA                                                                                                                                                                                                                                                                            #> pak          \"tools,\\nutils\"                                                                                                                                                                                                                                                               #> base         NA                                                                                                                                                                                                                                                                            #> boot         NA                                                                                                                                                                                                                                                                            #> class        \"MASS\"                                                                                                                                                                                                                                                                        #> cluster      \"graphics, grDevices, stats, utils\"                                                                                                                                                                                                                                           #> codetools    NA                                                                                                                                                                                                                                                                            #> compiler     NA                                                                                                                                                                                                                                                                            #> datasets     NA                                                                                                                                                                                                                                                                            #> foreign      \"methods, utils, stats\"                                                                                                                                                                                                                                                       #> graphics     \"grDevices\"                                                                                                                                                                                                                                                                   #> grDevices    NA                                                                                                                                                                                                                                                                            #> grid         \"grDevices, utils\"                                                                                                                                                                                                                                                            #> KernSmooth   NA                                                                                                                                                                                                                                                                            #> lattice      \"grid, grDevices, graphics, stats, utils\"                                                                                                                                                                                                                                     #> MASS         \"methods\"                                                                                                                                                                                                                                                                     #> Matrix       \"graphics, grid, lattice, stats, utils\"                                                                                                                                                                                                                                       #> methods      \"utils, stats\"                                                                                                                                                                                                                                                                #> mgcv         \"methods, stats, graphics, Matrix, splines, utils\"                                                                                                                                                                                                                            #> nlme         \"graphics, stats, utils, lattice\"                                                                                                                                                                                                                                             #> nnet         NA                                                                                                                                                                                                                                                                            #> parallel     \"tools, compiler\"                                                                                                                                                                                                                                                             #> rpart        NA                                                                                                                                                                                                                                                                            #> spatial      NA                                                                                                                                                                                                                                                                            #> splines      \"graphics, stats\"                                                                                                                                                                                                                                                             #> stats        \"utils, grDevices, graphics\"                                                                                                                                                                                                                                                  #> stats4       \"graphics, methods, stats\"                                                                                                                                                                                                                                                    #> survival     \"graphics, Matrix, methods, splines, stats, utils\"                                                                                                                                                                                                                            #> tcltk        \"utils\"                                                                                                                                                                                                                                                                       #> tools        NA                                                                                                                                                                                                                                                                            #> utils        NA                                                                                                                                                                                                                                                                            #>              LinkingTo                                                #> abind        NA                                                       #> Amelia       \"Rcpp (>= 0.11), RcppArmadillo\"                          #> arm          NA                                                       #> askpass      NA                                                       #> backports    NA                                                       #> base64enc    NA                                                       #> bit          NA                                                       #> bit64        NA                                                       #> bmemLavaan   NA                                                       #> brio         NA                                                       #> broom        NA                                                       #> bslib        NA                                                       #> cachem       NA                                                       #> callr        NA                                                       #> cli          NA                                                       #> clipr        NA                                                       #> coda         NA                                                       #> covr         NA                                                       #> crayon       NA                                                       #> curl         NA                                                       #> cyclocomp    NA                                                       #> desc         NA                                                       #> diffobj      NA                                                       #> digest       NA                                                       #> downlit      NA                                                       #> dplyr        NA                                                       #> ellipsis     NA                                                       #> evaluate     NA                                                       #> fansi        NA                                                       #> fastmap      NA                                                       #> fontawesome  NA                                                       #> forcats      NA                                                       #> foreach      NA                                                       #> fs           NA                                                       #> generics     NA                                                       #> glmnet       \"RcppEigen, Rcpp\"                                        #> glue         NA                                                       #> haven        \"cpp11\"                                                  #> highr        NA                                                       #> hms          NA                                                       #> htmltools    NA                                                       #> httr         NA                                                       #> iterators    NA                                                       #> jomo         NA                                                       #> jquerylib    NA                                                       #> jsonlite     NA                                                       #> knitr        NA                                                       #> lavaan       NA                                                       #> lazyeval     NA                                                       #> lifecycle    NA                                                       #> lintr        NA                                                       #> lme4         \"Rcpp (>= 0.10.5), RcppEigen\"                            #> magrittr     NA                                                       #> memoise      NA                                                       #> mi           NA                                                       #> mice         \"cpp11, Rcpp\"                                            #> mime         NA                                                       #> minqa        \"Rcpp\"                                                   #> mitml        NA                                                       #> mnormt       NA                                                       #> nloptr       \"testthat\"                                               #> numDeriv     NA                                                       #> openssl      NA                                                       #> ordinal      NA                                                       #> pan          NA                                                       #> pbivnorm     NA                                                       #> pillar       NA                                                       #> pkgbuild     NA                                                       #> pkgconfig    NA                                                       #> pkgdown      NA                                                       #> pkgload      NA                                                       #> praise       NA                                                       #> prettyunits  NA                                                       #> processx     NA                                                       #> ps           NA                                                       #> psych        NA                                                       #> purrr        \"cli\"                                                    #> quadprog     NA                                                       #> R6           NA                                                       #> ragg         \"systemfonts, textshaping\"                               #> rappdirs     NA                                                       #> rcmdcheck    NA                                                       #> Rcpp         NA                                                       #> readr        \"cpp11, tzdb (>= 0.1.1)\"                                 #> rematch2     NA                                                       #> remotes      NA                                                       #> rex          NA                                                       #> rlang        NA                                                       #> rmarkdown    NA                                                       #> rprojroot    NA                                                       #> rsem         NA                                                       #> sass         NA                                                       #> sem          NA                                                       #> semmcci      NA                                                       #> sessioninfo  NA                                                       #> shape        NA                                                       #> snow         NA                                                       #> snowfall     NA                                                       #> stringi      NA                                                       #> stringr      NA                                                       #> sys          NA                                                       #> systemfonts  \"cpp11 (>= 0.2.1)\"                                       #> testthat     NA                                                       #> textshaping  \"cpp11 (>= 0.2.1), systemfonts (>= 1.0.0)\"               #> tibble       NA                                                       #> tidyr        \"cpp11 (>= 0.4.0)\"                                       #> tidyselect   NA                                                       #> tinytex      NA                                                       #> tzdb         \"cpp11 (>= 0.4.2)\"                                       #> ucminf       NA                                                       #> utf8         NA                                                       #> vctrs        NA                                                       #> vroom        \"cpp11 (>= 0.2.0), progress (>= 1.2.1), tzdb (>= 0.1.1)\" #> waldo        NA                                                       #> whisker      NA                                                       #> withr        NA                                                       #> xfun         NA                                                       #> xml2         NA                                                       #> xmlparsedata NA                                                       #> xopen        NA                                                       #> yaml         NA                                                       #> pak          NA                                                       #> base         NA                                                       #> boot         NA                                                       #> class        NA                                                       #> cluster      NA                                                       #> codetools    NA                                                       #> compiler     NA                                                       #> datasets     NA                                                       #> foreign      NA                                                       #> graphics     NA                                                       #> grDevices    NA                                                       #> grid         NA                                                       #> KernSmooth   NA                                                       #> lattice      NA                                                       #> MASS         NA                                                       #> Matrix       NA                                                       #> methods      NA                                                       #> mgcv         NA                                                       #> nlme         NA                                                       #> nnet         NA                                                       #> parallel     NA                                                       #> rpart        NA                                                       #> spatial      NA                                                       #> splines      NA                                                       #> stats        NA                                                       #> stats4       NA                                                       #> survival     NA                                                       #> tcltk        NA                                                       #> tools        NA                                                       #> utils        NA                                                       #>              Suggestsabindmelia       \"tcltk, broom, rmarkdown, knitrarmaskpass      \"testthatbackportsbase64encbit          \"testthat (>= 0.11.0), roxygen2, knitr, rmarkdown,\\nmicrobenchmark, bit64 (>= 4.0.0), ffbitbmemLavaan   \"R.rspbrio         \"covr, testthatbroom        \"AER, AUC, bbmle, betareg, biglm, binGroup, boot, btergm (>=\\n1.10.6), car, carData, caret, cluster, cmprsk, coda, covr, drc,\\ne1071, emmeans, epiR, ergm (>= 3.10.4), fixest (>= 0.9.0), gam\\n(>= 1.15), gee, geepack, ggplot2, glmnet, glmnetUtils, gmm,\\nHmisc, irlba, interp, joineRML, Kendall, knitr, ks, Lahman,\\nlavaan, leaps, lfe, lm.beta, lme4, lmodel2, lmtest (>= 0.9.38),\\nlsmeans, maps, margins, MASS, mclust, mediation, metafor, mfx,\\nmgcv, mlogit, modeldata, modeltests, muhaz, multcomp, network,\\nnnet, orcutt (>= 2.2), ordinal, plm, poLCA, psych, quantreg,\\nrmarkdown, robust, robustbase, rsample, sandwich, sp, spdep (>=\\n1.1), spatialreg, speedglm, spelling, survey, survival,\\nsystemfit, testthat (>= 2.1.0), tseries, vars, zoo\" #> bslib        \"bsicons, curl, fontawesome, ggplot2, knitr, magrittr,\\nrappdirs, rmarkdown (>= 2.7), shiny (>= 1.6.0), testthat,\\nthematic, withrcachem       \"testthat\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            #> callr        \"asciicast, cli (>= 1.1.0), covr, mockery, ps, rprojroot,\\nspelling, testthat (>= 3.0.0), withrcli          \"callr, covr, crayon, digest, glue (>= 1.6.0), grDevices,\\nhtmltools, htmlwidgets, knitr, methods, mockery, processx, ps\\n(>= 1.3.4.9000), rlang (>= 1.0.2.9003), rmarkdown, rprojroot,\\nrstudioapi, testthat, tibble, whoami, withrclipr        \"covr, knitr, rmarkdown, rstudioapi (>= 0.5), testthat (>=\\ncodacovr         \"R6, curl, knitr, rmarkdown, htmltools, DT (>= 0.2), testthat,\\nrlang, rstudioapi (>= 0.2), xml2 (>= 1.0.0), parallel, memoise,\\nmockery, covrcrayon       \"mockery, rstudioapi, testthat, withrcurl         \"spelling, testthat (>= 1.0.0), knitr, jsonlite, rmarkdown,\\nmagrittr, httpuv (>= 1.4.4), webutilscyclocomp    \"testthatdesc         \"callr, covr, gh, spelling, testthat, whoami, withrdiffobj      \"knitr, rmarkdowndigest       \"tinytest, simplermarkdowndownlit      \"covr, htmltools, jsonlite, MASS, MassSpecWavelet, pkgload,\\nrmarkdown, testthat (>= 3.0.0), xmldplyr        \"bench, broom, callr, covr, DBI, dbplyr (>= 2.2.1), ggplot2,\\nknitr, Lahman, lobstr, microbenchmark, nycflights13, purrr,\\nrmarkdown, RMySQL, RPostgreSQL, RSQLite, stringi (>= 1.7.6),\\ntestthat (>= 3.1.5), tidyr (>= 1.3.0), withrellipsis     \"covr, testthatevaluate     \"covr, ggplot2, lattice, rlang, testthat (>= 3.0.0), withrfansi        \"unitizer, knitr, rmarkdownfastmap      \"testthatfontawesome  \"covr, dplyr (>= 1.0.8), knitr (>= 1.31), testthat (>= 3.0.0),\\nrsvgforcats      \"covr, dplyr, ggplot2, knitr, readr, rmarkdown, testthat (>=\\n3.0.0), withrforeach      \"randomForest, doMC, doParallel, testthat, knitr, rmarkdownfs           \"covr, crayon, knitr, pillar (>= 1.0.0), rmarkdown, spelling,\\ntestthat (>= 3.0.0), tibble (>= 1.1.0), vctrs (>= 0.3.0), withrgenerics     \"covr, pkgload, testthat (>= 3.0.0), tibble, withrglmnet       \"knitr, lars, testthat, xfun, rmarkdownglue         \"covr, crayon, DBI, dplyr, forcats, ggplot2, knitr, magrittr,\\nmicrobenchmark, R.utils, rmarkdown, rprintf, RSQLite, stringr,\\ntestthat (>= 3.0.0), vctrs (>= 0.3.0), waldo (>= 0.3.0), withrhaven        \"covr, crayon, fs, knitr, pillar (>= 1.4.0), rmarkdown,\\ntestthat (>= 3.0.0), utfhighr        \"knitr, markdown, testithms          \"crayon, lubridate, pillar (>= 1.1.0), testthathtmltools    \"markdown, testthat, withr, Cairo, ragg, shinyhttr         \"covr, httpuv, jpeg, knitr, png, readr, rmarkdown, testthat\\n(>= 0.8.0), xmliterators    \"RUnit, foreachjomo         \"mitmljquerylib    \"testthatjsonlite     \"httr, vctrs, testthat, knitr, rmarkdown, R.rsp, sfknitr        \"bslib, codetools, DBI (>= 0.4-1), digest, formatR, gifski,\\ngridSVG, htmlwidgets (>= 0.7), curl, jpeg, JuliaCall (>=\\n0.11.1), magick, markdown (>= 1.3), png, ragg, reticulate (>=\\n1.4), rgl (>= 0.95.1201), rlang, rmarkdown, sass, showtext,\\nstyler (>= 1.2.0), targets (>= 0.6.0), testit, tibble,\\ntikzDevice (>= 0.10), tinytex, webshot, rstudioapi, xml2 (>=\\n1.2.0)\"                                                                                                                                                                                                                                                                                                                                                                                      #> lavaanlazyeval     \"knitr, rmarkdown (>= 0.2.65), testthat, covr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        #> lifecycle    \"covr, crayon, knitr, lintr, rmarkdown, testthat (>= 3.0.1),\\ntibble, tidyverse, tools, vctrs, withrlintr        \"bookdown, crayon, httr (>= 1.2.1), jsonlite, mockery,\\npatrick, rlang, rmarkdown, rstudioapi (>= 0.2), testthat (>=\\n3.1.5), tibble, tufte, withr (>= 2.5.0)\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        #> lme4         \"knitr, rmarkdown, MEMSS, testthat (>= 0.8.1), ggplot2,\\nmlmRev, optimx (>= 2013.8.6), gamm4, pbkrtest, HSAUR3,\\nnumDeriv, car, dfoptim, mgcv, statmod, rr2, semEff, tibble,\\nmerDerivmagrittr     \"covr, knitr, rlang, rmarkdown, testthatmemoise      \"digest, aws.s3, covr, googleAuthR, googleCloudStorageR, httr,\\ntestthatmi           \"betareg, lattice, knitr, MASS, nnet, parallel, sn, survival,\\ntruncnorm, foreignmice         \"broom.mixed, future, furrr, haven, knitr, lme4, MASS,\\nmiceadds, pan, parallelly, purrr, ranger, randomForest,\\nrmarkdown, rstan, survival, testthatmimeminqamitml        \"mice, miceadds, Amelia, lme4, nlme, lavaan, geepack, glmmTMB,\\nsurvival, knitr, rmarkdownmnormtnloptr       \"knitr, rmarkdown, xml2, testthat (>= 3.0.0), covr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   #> numDerivopenssl      \"curl, testthat (>= 2.1.0), digest, knitr, rmarkdown,\\njsonlite, jose, sodiumordinal      \"lme4, nnet, xtable, testthat (>= 0.8), toolspan          \"mitools, lmepbivnormpillar       \"bit64, DBI, debugme, DiagrammeR, dplyr, formattable, ggplot2,\\nknitr, lubridate, nanotime, nycflights13, palmerpenguins,\\nrmarkdown, scales, stringi, survival, testthat (>= 3.1.1),\\ntibble, units (>= 0.7.2), vdiffr, withrpkgbuild     \"covr, cpp11, knitr, mockery, Rcpp, rmarkdown, testthat (>=\\n3.0.0), withrpkgconfig    \"covr, testthat, disposablespkgdown      \"covr, diffviewer, evaluate, htmltools, htmlwidgets, knitr,\\nlifecycle, methods, openssl, pkgload (>= 1.0.2), rsconnect,\\nrstudioapi, rticles, sass, testthat (>= 3.1.3), toolspkgload      \"bitops, covr, mathjaxr, mockr, pak, pkgbuild, Rcpp, remotes,\\nrstudioapi, testthatpraise       \"testthatprettyunits  \"codetools, covr, testthat\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           #> processx     \"callr (>= 3.7.3), cli (>= 3.3.0), codetools, covr, curl,\\ndebugme, parallel, rlang (>= 1.0.2), testthat (>= 3.0.0),\\nwebfakes, withr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                #> ps           \"callr, covr, curl, pillar, pingr, processx (>= 3.1.0), R6,\\nrlang, testthat (>= 3.0.0), webfakespsych        \"psychTools, GPArotation, lavaan, lme4, Rcsdp, graph, knitr,\\nRgraphvizpurrr        \"covr, dplyr (>= 0.7.8), httr, knitr, lubridate, rmarkdown,\\ntestthat (>= 3.0.0), tibble, tidyselectquadprog     NA                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #> R6           \"testthat, pryrragg         \"covr, graphics, grid, testthatrappdirs     \"roxygen2, testthat (>= 3.0.0), covr, withrrcmdcheck    \"covr, knitr, mockery, processx, ps, rmarkdown, svglite,\\ntestthat, webfakescpp         \"tinytest, inline, rbenchmark, pkgKittenreadr        \"covr, curl, datasets, knitr, rmarkdown, spelling, stringi,\\ntestthat (>= 3.1.2), tzdb (>= 0.1.1), waldo, withr, xmlrematch2     \"covr, testthatremotes      \"brew, callr, codetools, curl, covr, git2r (>= 0.23.0), knitr,\\nmockery, pkgbuild (>= 1.0.1), pingr, rmarkdown, rprojroot,\\ntestthat, webfakes, withrrex          \"covr, dplyr, ggplot2, Hmisc, knitr, magrittr, rmarkdown,\\nroxygen2, rvest, stringr, testthatrlang        \"cli (>= 3.1.0), covr, crayon, fs, glue, knitr, magrittr,\\nmethods, pillar, rmarkdown, stats, testthat (>= 3.0.0), tibble,\\nusethis, vctrs (>= 0.2.3), withrrmarkdown    \"digest, dygraphs, fs, rsconnect, downlit (>= 0.4.0), katex\\n(>= 1.4.0), sass (>= 0.4.0), shiny (>= 1.6.0), testthat (>=\\n3.0.3), tibble, vctrs, cleanrmd, withrrprojroot    \"covr, knitr, lifecycle, mockr, rmarkdown, testthat (>=\\n3.0.0), withr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               #> rsem         NA                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #> sass         \"testthat, knitr, rmarkdown, withr, shiny, curlsem          \"polycor, Diagrammesemmcci      \"knitr, rmarkdown, testthat, MASS, psych, Amelia, bmemLavaansessioninfo  \"callr, covr, mockery, reticulate, rmarkdown, testthat, withr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        #> shapesnow         \"rlecuyersnowfall     \"Rmpistringistringr      \"covr, htmltools, htmlwidgets, knitr, rmarkdown, testthat (>=\\nsys          \"unix (>= 1.4), spelling, testthatsystemfonts  \"testthat (>= 2.1.0), covr, knitr, rmarkdown, toolstestthat     \"covr, curl (>= 0.9.5), diffviewer (>= 0.1.0), knitr,\\nrmarkdown, rstudioapi, shiny, usethis, vctrs (>= 0.1.0), xmltextshaping  \"covr, knitr, rmarkdown\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              #> tibble       \"bench, bit64, blob, brio, callr, cli, covr, crayon (>=\\n1.3.4), DiagrammeR, dplyr, evaluate, formattable, ggplot2,\\nhere, hms, htmltools, knitr, lubridate, mockr, nycflights13,\\npkgbuild, pkgload, purrr, rmarkdown, stringi, testthat (>=\\n3.0.2), tidyr, withr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  #> tidyr        \"covr, data.table, knitr, readr, repurrrsive (>= 1.1.0),\\nrmarkdown, testthattidyselect   \"covr, crayon, dplyr, knitr, magrittr, rmarkdown, stringr,\\ntestthat (>= 3.1.1), tibbletinytex      \"testit, rstudioapitzdb         \"covr, testthatucminf       \"numDeriv\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            #> utf8         \"cli, covr, knitr, rlang, rmarkdown, testthat (>= 3.0.0),\\nwithrvctrs        \"bit64, covr, crayon, dplyr (>= 0.8.5), generics, knitr,\\npillar (>= 1.4.4), pkgdown (>= 2.0.1), rmarkdown, testthat (>=\\n3.0.0), tibble (>= 3.1.3), waldo (>= 0.2.0), withr, xml2,\\nzeallotvroom        \"archive, bench (>= 1.1.0), covr, curl, dplyr, forcats, fs,\\nggplot2, knitr, patchwork, prettyunits, purrr, rmarkdown,\\nrstudioapi, scales, spelling, testthat (>= 2.1.0), tidyr,\\nutils, waldo, xmlwaldo        \"covr, R6, testthat (>= 3.0.0), withr, xmlwhisker      \"markdownwithr        \"callr, covr, DBI, knitr, lattice, methods, rlang, rmarkdown\\n(>= 2.12), RSQLite, testthatxfun         \"testit, parallel, codetools, rstudioapi, tinytex (>= 0.30),\\nmime, markdown (>= 1.5), knitr (>= 1.42), htmltools, remotes,\\npak, rhub, renv, curl, jsonlite, magick, yaml, rmarkdownxml2         \"covr, curl, httr, knitr, magrittr, mockery, rmarkdown,\\ntestthatxmlparsedata \"covr, testthat, xmlxopen        \"ps, testthatyaml         \"RUnitpak          \"callr (>= 3.7.0),\\ncli (>= 3.2.0),\\ncovr,\\ncurl (>= 4.3.2),\\ndesc (>= 1.4.1),\\ndigest,\\ndistro,\\nfilelock (>= 1.0.2),\\ngitcreds,\\nglue (>= 1.6.2),\\nmockery,\\npingr,\\njsonlite (>= 1.8.0),\\npkgcache (>= 2.0.4),\\npkgdepends (>= 0.4.0),\\npkgsearch (>= 3.1.0),\\nprettyunits,\\nprocessx (>= 3.8.1),\\nps (>= 1.6.0),\\nrprojroot (>= 2.0.2),\\nrstudioapi,\\ntestthat,\\nwithr\"                                                                                                                                                                                                                                                                                                                                                                                           #> base         \"methodsboot         \"MASS, survivalclasscluster      \"MASS, MatrixcodetoolscompilerdatasetsforeigngraphicsgrDevices    \"KernSmoothgridernSmooth   \"MASS, carDatalattice      \"KernSmooth, MASS, latticeExtra, colorspacelattice, nlme, nnet, survivalatrix       \"MASS, expmmethods      \"codetoolsmgcv         \"parallel, survivalnlme         \"Hmisc, MASS, SASmixednnetparallel     \"methodsrpart        \"survivalspatialsplines      \"Matrix, methodsstats        \"MASS, Matrix, SuppDists, methods, statsstatssurvivaltcltktools        \"codetools, methods, xml2, curl, commonmark, knitr, xfun,\\nmathjaxrutils        \"methods, xml2, commonmark, knitrnhances                                                              #> abind        NA                                                                    #> Amelia       NA                                                                    #> arm          NA                                                                    #> askpass      NA                                                                    #> backports    NA                                                                    #> base64enc    \"png\"                                                                 #> bit          NA                                                                    #> bit64        NA                                                                    #> bmemLavaan   NA                                                                    #> brio         NA                                                                    #> broom        NA                                                                    #> bslib        NA                                                                    #> cachem       NA                                                                    #> callr        NA                                                                    #> cli          NA                                                                    #> clipr        NA                                                                    #> coda         NA                                                                    #> covr         NA                                                                    #> crayon       NA                                                                    #> curl         NA                                                                    #> cyclocomp    NA                                                                    #> desc         NA                                                                    #> diffobj      NA                                                                    #> digest       NA                                                                    #> downlit      NA                                                                    #> dplyr        NA                                                                    #> ellipsis     NA                                                                    #> evaluate     NA                                                                    #> fansi        NA                                                                    #> fastmap      NA                                                                    #> fontawesome  NA                                                                    #> forcats      NA                                                                    #> foreach      NA                                                                    #> fs           NA                                                                    #> generics     NA                                                                    #> glmnet       NA                                                                    #> glue         NA                                                                    #> haven        NA                                                                    #> highr        NA                                                                    #> hms          NA                                                                    #> htmltools    \"knitr\"                                                               #> httr         NA                                                                    #> iterators    NA                                                                    #> jomo         NA                                                                    #> jquerylib    NA                                                                    #> jsonlite     NA                                                                    #> knitr        NA                                                                    #> lavaan       NA                                                                    #> lazyeval     NA                                                                    #> lifecycle    NA                                                                    #> lintr        \"data.table\"                                                          #> lme4         NA                                                                    #> magrittr     NA                                                                    #> memoise      NA                                                                    #> mi           NA                                                                    #> mice         NA                                                                    #> mime         NA                                                                    #> minqa        NA                                                                    #> mitml        NA                                                                    #> mnormt       NA                                                                    #> nloptr       NA                                                                    #> numDeriv     NA                                                                    #> openssl      NA                                                                    #> ordinal      NA                                                                    #> pan          NA                                                                    #> pbivnorm     NA                                                                    #> pillar       NA                                                                    #> pkgbuild     NA                                                                    #> pkgconfig    NA                                                                    #> pkgdown      NA                                                                    #> pkgload      NA                                                                    #> praise       NA                                                                    #> prettyunits  NA                                                                    #> processx     NA                                                                    #> ps           NA                                                                    #> psych        NA                                                                    #> purrr        NA                                                                    #> quadprog     NA                                                                    #> R6           NA                                                                    #> ragg         NA                                                                    #> rappdirs     NA                                                                    #> rcmdcheck    NA                                                                    #> Rcpp         NA                                                                    #> readr        NA                                                                    #> rematch2     NA                                                                    #> remotes      NA                                                                    #> rex          NA                                                                    #> rlang        \"winch\"                                                               #> rmarkdown    NA                                                                    #> rprojroot    NA                                                                    #> rsem         NA                                                                    #> sass         NA                                                                    #> sem          NA                                                                    #> semmcci      NA                                                                    #> sessioninfo  NA                                                                    #> shape        NA                                                                    #> snow         \"Rmpi\"                                                                #> snowfall     NA                                                                    #> stringi      NA                                                                    #> stringr      NA                                                                    #> sys          NA                                                                    #> systemfonts  NA                                                                    #> testthat     NA                                                                    #> textshaping  NA                                                                    #> tibble       NA                                                                    #> tidyr        NA                                                                    #> tidyselect   NA                                                                    #> tinytex      NA                                                                    #> tzdb         NA                                                                    #> ucminf       NA                                                                    #> utf8         NA                                                                    #> vctrs        NA                                                                    #> vroom        NA                                                                    #> waldo        NA                                                                    #> whisker      NA                                                                    #> withr        NA                                                                    #> xfun         NA                                                                    #> xml2         NA                                                                    #> xmlparsedata NA                                                                    #> xopen        NA                                                                    #> yaml         NA                                                                    #> pak          NA                                                                    #> base         NA                                                                    #> boot         NA                                                                    #> class        NA                                                                    #> cluster      NA                                                                    #> codetools    NA                                                                    #> compiler     NA                                                                    #> datasets     NA                                                                    #> foreign      NA                                                                    #> graphics     NA                                                                    #> grDevices    NA                                                                    #> grid         NA                                                                    #> KernSmooth   NA                                                                    #> lattice      \"chron\"                                                               #> MASS         NA                                                                    #> Matrix       \"MatrixModels, SparseM, graph, igraph, maptools, sfsmisc, sp,\\nspdep\" #> methods      NA                                                                    #> mgcv         NA                                                                    #> nlme         NA                                                                    #> nnet         NA                                                                    #> parallel     \"snow, Rmpi\"                                                          #> rpart        NA                                                                    #> spatial      NA                                                                    #> splines      NA                                                                    #> stats        NA                                                                    #> stats4       NA                                                                    #> survival     NA                                                                    #> tcltk        NA                                                                    #> tools        NA                                                                    #> utils        NA                                                                    #>              License                                  License_is_FOSS #> abind        \"LGPL (>= 2)\"                            NA              #> Amelia       \"GPL (>= 2)\"                             NA              #> arm          \"GPL (> 2)\"                              NA              #> askpass      \"MIT + file LICENSE\"                     NA              #> backports    \"GPL-2 | GPL-3\"                          NA              #> base64enc    \"GPL-2 | GPL-3\"                          NA              #> bit          \"GPL-2 | GPL-3\"                          NA              #> bit64        \"GPL-2 | GPL-3\"                          NA              #> bmemLavaan   \"GPL-2\"                                  NA              #> brio         \"MIT + file LICENSE\"                     NA              #> broom        \"MIT + file LICENSE\"                     NA              #> bslib        \"MIT + file LICENSE\"                     NA              #> cachem       \"MIT + file LICENSE\"                     NA              #> callr        \"MIT + file LICENSE\"                     NA              #> cli          \"MIT + file LICENSE\"                     NA              #> clipr        \"GPL-3\"                                  NA              #> coda         \"GPL (>= 2)\"                             NA              #> covr         \"MIT + file LICENSE\"                     NA              #> crayon       \"MIT + file LICENSE\"                     NA              #> curl         \"MIT + file LICENSE\"                     NA              #> cyclocomp    \"MIT + file LICENSE\"                     NA              #> desc         \"MIT + file LICENSE\"                     NA              #> diffobj      \"GPL-2 | GPL-3\"                          NA              #> digest       \"GPL (>= 2)\"                             NA              #> downlit      \"MIT + file LICENSE\"                     NA              #> dplyr        \"MIT + file LICENSE\"                     NA              #> ellipsis     \"MIT + file LICENSE\"                     NA              #> evaluate     \"MIT + file LICENSE\"                     NA              #> fansi        \"GPL-2 | GPL-3\"                          NA              #> fastmap      \"MIT + file LICENSE\"                     NA              #> fontawesome  \"MIT + file LICENSE\"                     NA              #> forcats      \"MIT + file LICENSE\"                     NA              #> foreach      \"Apache License (== 2.0)\"                NA              #> fs           \"MIT + file LICENSE\"                     NA              #> generics     \"MIT + file LICENSE\"                     NA              #> glmnet       \"GPL-2\"                                  NA              #> glue         \"MIT + file LICENSE\"                     NA              #> haven        \"MIT + file LICENSE\"                     NA              #> highr        \"GPL\"                                    NA              #> hms          \"MIT + file LICENSE\"                     NA              #> htmltools    \"GPL (>= 2)\"                             NA              #> httr         \"MIT + file LICENSE\"                     NA              #> iterators    \"Apache License (== 2.0)\"                NA              #> jomo         \"GPL-2\"                                  NA              #> jquerylib    \"MIT + file LICENSE\"                     NA              #> jsonlite     \"MIT + file LICENSE\"                     NA              #> knitr        \"GPL\"                                    NA              #> lavaan       \"GPL (>= 2)\"                             NA              #> lazyeval     \"GPL-3\"                                  NA              #> lifecycle    \"MIT + file LICENSE\"                     NA              #> lintr        \"MIT + file LICENSE\"                     NA              #> lme4         \"GPL (>= 2)\"                             NA              #> magrittr     \"MIT + file LICENSE\"                     NA              #> memoise      \"MIT + file LICENSE\"                     NA              #> mi           \"GPL (>= 2)\"                             NA              #> mice         \"GPL (>= 2)\"                             NA              #> mime         \"GPL\"                                    NA              #> minqa        \"GPL-2\"                                  NA              #> mitml        \"GPL (>= 2)\"                             NA              #> mnormt       \"GPL-2 | GPL-3\"                          NA              #> nloptr       \"LGPL (>= 3)\"                            NA              #> numDeriv     \"GPL-2\"                                  NA              #> openssl      \"MIT + file LICENSE\"                     NA              #> ordinal      \"GPL (>= 2)\"                             NA              #> pan          \"GPL-3\"                                  NA              #> pbivnorm     \"GPL (>= 2)\"                             NA              #> pillar       \"MIT + file LICENSE\"                     NA              #> pkgbuild     \"MIT + file LICENSE\"                     NA              #> pkgconfig    \"MIT + file LICENSE\"                     NA              #> pkgdown      \"MIT + file LICENSE\"                     NA              #> pkgload      \"GPL-3\"                                  NA              #> praise       \"MIT + file LICENSE\"                     NA              #> prettyunits  \"MIT + file LICENSE\"                     NA              #> processx     \"MIT + file LICENSE\"                     NA              #> ps           \"MIT + file LICENSE\"                     NA              #> psych        \"GPL (>= 2)\"                             NA              #> purrr        \"MIT + file LICENSE\"                     NA              #> quadprog     \"GPL (>= 2)\"                             NA              #> R6           \"MIT + file LICENSE\"                     NA              #> ragg         \"MIT + file LICENSE\"                     NA              #> rappdirs     \"MIT + file LICENSE\"                     NA              #> rcmdcheck    \"MIT + file LICENSE\"                     NA              #> Rcpp         \"GPL (>= 2)\"                             NA              #> readr        \"MIT + file LICENSE\"                     NA              #> rematch2     \"MIT + file LICENSE\"                     NA              #> remotes      \"MIT + file LICENSE\"                     NA              #> rex          \"MIT + file LICENSE\"                     NA              #> rlang        \"MIT + file LICENSE\"                     NA              #> rmarkdown    \"GPL-3\"                                  NA              #> rprojroot    \"MIT + file LICENSE\"                     NA              #> rsem         \"GPL-2\"                                  NA              #> sass         \"MIT + file LICENSE\"                     NA              #> sem          \"GPL (>= 2)\"                             NA              #> semmcci      \"MIT + file LICENSE\"                     NA              #> sessioninfo  \"GPL-2\"                                  NA              #> shape        \"GPL (>= 3)\"                             NA              #> snow         \"GPL\"                                    NA              #> snowfall     \"GPL\"                                    NA              #> stringi      \"file LICENSE\"                           \"yes\"           #> stringr      \"MIT + file LICENSE\"                     NA              #> sys          \"MIT + file LICENSE\"                     NA              #> systemfonts  \"MIT + file LICENSE\"                     NA              #> testthat     \"MIT + file LICENSE\"                     NA              #> textshaping  \"MIT + file LICENSE\"                     NA              #> tibble       \"MIT + file LICENSE\"                     NA              #> tidyr        \"MIT + file LICENSE\"                     NA              #> tidyselect   \"MIT + file LICENSE\"                     NA              #> tinytex      \"MIT + file LICENSE\"                     NA              #> tzdb         \"MIT + file LICENSE\"                     NA              #> ucminf       \"GPL (>= 2)\"                             NA              #> utf8         \"Apache License (== 2.0) | file LICENSE\" NA              #> vctrs        \"MIT + file LICENSE\"                     NA              #> vroom        \"MIT + file LICENSE\"                     NA              #> waldo        \"MIT + file LICENSE\"                     NA              #> whisker      \"GPL-3\"                                  NA              #> withr        \"MIT + file LICENSE\"                     NA              #> xfun         \"MIT + file LICENSE\"                     NA              #> xml2         \"MIT + file LICENSE\"                     NA              #> xmlparsedata \"MIT + file LICENSE\"                     NA              #> xopen        \"MIT + file LICENSE\"                     NA              #> yaml         \"BSD_3_clause + file LICENSE\"            NA              #> pak          \"GPL-3\"                                  NA              #> base         \"Part of R 4.3.1\"                        NA              #> boot         \"Unlimited\"                              NA              #> class        \"GPL-2 | GPL-3\"                          NA              #> cluster      \"GPL (>= 2)\"                             NA              #> codetools    \"GPL\"                                    NA              #> compiler     \"Part of R 4.3.1\"                        NA              #> datasets     \"Part of R 4.3.1\"                        NA              #> foreign      \"GPL (>= 2)\"                             NA              #> graphics     \"Part of R 4.3.1\"                        NA              #> grDevices    \"Part of R 4.3.1\"                        NA              #> grid         \"Part of R 4.3.1\"                        NA              #> KernSmooth   \"Unlimited\"                              NA              #> lattice      \"GPL (>= 2)\"                             NA              #> MASS         \"GPL-2 | GPL-3\"                          NA              #> Matrix       \"GPL (>= 2) | file LICENCE\"              NA              #> methods      \"Part of R 4.3.1\"                        NA              #> mgcv         \"GPL (>= 2)\"                             NA              #> nlme         \"GPL (>= 2)\"                             NA              #> nnet         \"GPL-2 | GPL-3\"                          NA              #> parallel     \"Part of R 4.3.1\"                        NA              #> rpart        \"GPL-2 | GPL-3\"                          NA              #> spatial      \"GPL-2 | GPL-3\"                          NA              #> splines      \"Part of R 4.3.1\"                        NA              #> stats        \"Part of R 4.3.1\"                        NA              #> stats4       \"Part of R 4.3.1\"                        NA              #> survival     \"LGPL (>= 2)\"                            NA              #> tcltk        \"Part of R 4.3.1\"                        NA              #> tools        \"Part of R 4.3.1\"                        NA              #> utils        \"Part of R 4.3.1\"                        NA              #>              License_restricts_use OS_type MD5sum NeedsCompilation Built   #> abind        NA                    NA      NA     \"no\"             \"4.3.0\" #> Amelia       NA                    NA      NA     \"yes\"            \"4.3.0\" #> arm          NA                    NA      NA     \"no\"             \"4.3.0\" #> askpass      NA                    NA      NA     \"yes\"            \"4.3.0\" #> backports    NA                    NA      NA     \"yes\"            \"4.3.0\" #> base64enc    NA                    NA      NA     \"yes\"            \"4.3.0\" #> bit          NA                    NA      NA     \"yes\"            \"4.3.0\" #> bit64        NA                    NA      NA     \"yes\"            \"4.3.0\" #> bmemLavaan   NA                    NA      NA     \"no\"             \"4.3.0\" #> brio         NA                    NA      NA     \"yes\"            \"4.3.0\" #> broom        NA                    NA      NA     \"no\"             \"4.3.0\" #> bslib        NA                    NA      NA     \"no\"             \"4.3.0\" #> cachem       NA                    NA      NA     \"yes\"            \"4.3.0\" #> callr        NA                    NA      NA     \"no\"             \"4.3.0\" #> cli          NA                    NA      NA     \"yes\"            \"4.3.0\" #> clipr        NA                    NA      NA     \"no\"             \"4.3.0\" #> coda         NA                    NA      NA     \"no\"             \"4.3.0\" #> covr         NA                    NA      NA     \"yes\"            \"4.3.0\" #> crayon       NA                    NA      NA     \"no\"             \"4.3.0\" #> curl         NA                    NA      NA     \"yes\"            \"4.3.0\" #> cyclocomp    NA                    NA      NA     \"no\"             \"4.3.0\" #> desc         NA                    NA      NA     \"no\"             \"4.3.0\" #> diffobj      NA                    NA      NA     \"yes\"            \"4.3.0\" #> digest       NA                    NA      NA     \"yes\"            \"4.3.0\" #> downlit      NA                    NA      NA     \"no\"             \"4.3.0\" #> dplyr        NA                    NA      NA     \"yes\"            \"4.3.0\" #> ellipsis     NA                    NA      NA     \"yes\"            \"4.3.0\" #> evaluate     NA                    NA      NA     \"no\"             \"4.3.0\" #> fansi        NA                    NA      NA     \"yes\"            \"4.3.0\" #> fastmap      NA                    NA      NA     \"yes\"            \"4.3.0\" #> fontawesome  NA                    NA      NA     \"no\"             \"4.3.0\" #> forcats      NA                    NA      NA     \"no\"             \"4.3.0\" #> foreach      NA                    NA      NA     \"no\"             \"4.3.0\" #> fs           NA                    NA      NA     \"yes\"            \"4.3.0\" #> generics     NA                    NA      NA     \"no\"             \"4.3.0\" #> glmnet       NA                    NA      NA     \"yes\"            \"4.3.0\" #> glue         NA                    NA      NA     \"yes\"            \"4.3.0\" #> haven        NA                    NA      NA     \"yes\"            \"4.3.0\" #> highr        NA                    NA      NA     \"no\"             \"4.3.0\" #> hms          NA                    NA      NA     \"no\"             \"4.3.0\" #> htmltools    NA                    NA      NA     \"yes\"            \"4.3.0\" #> httr         NA                    NA      NA     \"no\"             \"4.3.0\" #> iterators    NA                    NA      NA     \"no\"             \"4.3.0\" #> jomo         NA                    NA      NA     \"yes\"            \"4.3.0\" #> jquerylib    NA                    NA      NA     \"no\"             \"4.3.0\" #> jsonlite     NA                    NA      NA     \"yes\"            \"4.3.0\" #> knitr        NA                    NA      NA     \"no\"             \"4.3.0\" #> lavaan       NA                    NA      NA     \"no\"             \"4.3.0\" #> lazyeval     NA                    NA      NA     \"yes\"            \"4.3.0\" #> lifecycle    NA                    NA      NA     \"no\"             \"4.3.0\" #> lintr        NA                    NA      NA     \"no\"             \"4.3.0\" #> lme4         NA                    NA      NA     \"yes\"            \"4.3.0\" #> magrittr     NA                    NA      NA     \"yes\"            \"4.3.0\" #> memoise      NA                    NA      NA     \"no\"             \"4.3.0\" #> mi           NA                    NA      NA     \"no\"             \"4.3.0\" #> mice         NA                    NA      NA     \"yes\"            \"4.3.0\" #> mime         NA                    NA      NA     \"yes\"            \"4.3.0\" #> minqa        NA                    NA      NA     \"yes\"            \"4.3.0\" #> mitml        NA                    NA      NA     \"no\"             \"4.3.0\" #> mnormt       NA                    NA      NA     \"yes\"            \"4.3.0\" #> nloptr       NA                    NA      NA     \"yes\"            \"4.3.0\" #> numDeriv     NA                    NA      NA     \"no\"             \"4.3.0\" #> openssl      NA                    NA      NA     \"yes\"            \"4.3.0\" #> ordinal      NA                    NA      NA     \"yes\"            \"4.3.0\" #> pan          \"no\"                  NA      NA     \"yes\"            \"4.3.0\" #> pbivnorm     NA                    NA      NA     \"yes\"            \"4.3.0\" #> pillar       NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgbuild     NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgconfig    NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgdown      NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgload      NA                    NA      NA     \"no\"             \"4.3.0\" #> praise       NA                    NA      NA     \"no\"             \"4.3.0\" #> prettyunits  NA                    NA      NA     \"no\"             \"4.3.0\" #> processx     NA                    NA      NA     \"yes\"            \"4.3.0\" #> ps           NA                    NA      NA     \"yes\"            \"4.3.0\" #> psych        NA                    NA      NA     \"no\"             \"4.3.0\" #> purrr        NA                    NA      NA     \"yes\"            \"4.3.0\" #> quadprog     NA                    NA      NA     \"yes\"            \"4.3.0\" #> R6           NA                    NA      NA     \"no\"             \"4.3.0\" #> ragg         NA                    NA      NA     \"yes\"            \"4.3.0\" #> rappdirs     NA                    NA      NA     \"yes\"            \"4.3.0\" #> rcmdcheck    NA                    NA      NA     \"no\"             \"4.3.0\" #> Rcpp         NA                    NA      NA     \"yes\"            \"4.3.0\" #> readr        NA                    NA      NA     \"yes\"            \"4.3.0\" #> rematch2     NA                    NA      NA     \"no\"             \"4.3.0\" #> remotes      NA                    NA      NA     \"no\"             \"4.3.0\" #> rex          NA                    NA      NA     \"no\"             \"4.3.0\" #> rlang        NA                    NA      NA     \"yes\"            \"4.3.0\" #> rmarkdown    NA                    NA      NA     \"no\"             \"4.3.0\" #> rprojroot    NA                    NA      NA     \"no\"             \"4.3.0\" #> rsem         NA                    NA      NA     \"no\"             \"4.3.0\" #> sass         NA                    NA      NA     \"yes\"            \"4.3.0\" #> sem          NA                    NA      NA     \"yes\"            \"4.3.0\" #> semmcci      NA                    NA      NA     \"no\"             \"4.3.1\" #> sessioninfo  NA                    NA      NA     \"no\"             \"4.3.0\" #> shape        NA                    NA      NA     \"no\"             \"4.3.0\" #> snow         NA                    NA      NA     \"no\"             \"4.3.0\" #> snowfall     NA                    NA      NA     \"no\"             \"4.3.0\" #> stringi      NA                    NA      NA     \"yes\"            \"4.3.0\" #> stringr      NA                    NA      NA     \"no\"             \"4.3.0\" #> sys          NA                    NA      NA     \"yes\"            \"4.3.0\" #> systemfonts  NA                    NA      NA     \"yes\"            \"4.3.0\" #> testthat     NA                    NA      NA     \"yes\"            \"4.3.0\" #> textshaping  NA                    NA      NA     \"yes\"            \"4.3.0\" #> tibble       NA                    NA      NA     \"yes\"            \"4.3.0\" #> tidyr        NA                    NA      NA     \"yes\"            \"4.3.0\" #> tidyselect   NA                    NA      NA     \"no\"             \"4.3.0\" #> tinytex      NA                    NA      NA     \"no\"             \"4.3.0\" #> tzdb         NA                    NA      NA     \"yes\"            \"4.3.0\" #> ucminf       NA                    NA      NA     \"yes\"            \"4.3.0\" #> utf8         NA                    NA      NA     \"yes\"            \"4.3.0\" #> vctrs        NA                    NA      NA     \"yes\"            \"4.3.0\" #> vroom        NA                    NA      NA     \"yes\"            \"4.3.0\" #> waldo        NA                    NA      NA     \"no\"             \"4.3.0\" #> whisker      NA                    NA      NA     \"no\"             \"4.3.0\" #> withr        NA                    NA      NA     \"no\"             \"4.3.0\" #> xfun         NA                    NA      NA     \"yes\"            \"4.3.0\" #> xml2         NA                    NA      NA     \"yes\"            \"4.3.0\" #> xmlparsedata NA                    NA      NA     \"no\"             \"4.3.0\" #> xopen        NA                    NA      NA     \"no\"             \"4.3.0\" #> yaml         NA                    NA      NA     \"yes\"            \"4.3.0\" #> pak          NA                    NA      NA     NA               \"4.3.0\" #> base         NA                    NA      NA     NA               \"4.3.1\" #> boot         NA                    NA      NA     \"no\"             \"4.3.1\" #> class        NA                    NA      NA     \"yes\"            \"4.3.1\" #> cluster      NA                    NA      NA     \"yes\"            \"4.3.1\" #> codetools    NA                    NA      NA     \"no\"             \"4.3.1\" #> compiler     NA                    NA      NA     NA               \"4.3.1\" #> datasets     NA                    NA      NA     NA               \"4.3.1\" #> foreign      NA                    NA      NA     \"yes\"            \"4.3.1\" #> graphics     NA                    NA      NA     \"yes\"            \"4.3.1\" #> grDevices    NA                    NA      NA     \"yes\"            \"4.3.1\" #> grid         NA                    NA      NA     \"yes\"            \"4.3.1\" #> KernSmooth   NA                    NA      NA     \"yes\"            \"4.3.1\" #> lattice      NA                    NA      NA     \"yes\"            \"4.3.1\" #> MASS         NA                    NA      NA     \"yes\"            \"4.3.1\" #> Matrix       NA                    NA      NA     \"yes\"            \"4.3.1\" #> methods      NA                    NA      NA     \"yes\"            \"4.3.1\" #> mgcv         NA                    NA      NA     \"yes\"            \"4.3.1\" #> nlme         NA                    NA      NA     \"yes\"            \"4.3.1\" #> nnet         NA                    NA      NA     \"yes\"            \"4.3.1\" #> parallel     NA                    NA      NA     \"yes\"            \"4.3.1\" #> rpart        NA                    NA      NA     \"yes\"            \"4.3.1\" #> spatial      NA                    NA      NA     \"yes\"            \"4.3.1\" #> splines      NA                    NA      NA     \"yes\"            \"4.3.1\" #> stats        NA                    NA      NA     \"yes\"            \"4.3.1\" #> stats4       NA                    NA      NA     NA               \"4.3.1\" #> survival     NA                    NA      NA     \"yes\"            \"4.3.1\" #> tcltk        NA                    NA      NA     \"yes\"            \"4.3.1\" #> tools        NA                    NA      NA     \"yes\"            \"4.3.1\" #> utils        NA                    NA      NA     \"yes\"            \"4.3.1\""},{"path":"https://github.com/jeksterslab/semmcci/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ivan Jacob Agaloos Pesigan. Author, maintainer, copyright holder. Shu Fai Cheung. Contributor.","code":""},{"path":"https://github.com/jeksterslab/semmcci/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pesigan, . J. . & Cheung, S. F. (2023). Monte Carlo Confidence Intervals Structural Equation Modeling. Behavior Research Methods. https://doi.org/10.3758/s13428-023-02114-4","code":"@Article{,   author = {Ivan Jacob Agaloos Pesigan and Shu Fai Cheung},   title = {Monte Carlo Confidence Intervals in Structural Equation Modeling},   year = {2023},   doi = {10.3758/s13428-023-02114-4},   journal = {Behavior Research Methods},   note = {R package version 1.1.2.9000}, }"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"semmcci","dir":"","previous_headings":"","what":"Monte Carlo Confidence Intervals in Structural Equation Modeling","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"Ivan Jacob Agaloos Pesigan 2023-08-10","code":""},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"can install CRAN release semmcci : can install development version semmcci GitHub :","code":"install.packages(\"semmcci\") if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"jeksterslab/semmcci\")"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"Monte Carlo method, sampling distribution parameter estimates generated multivariate normal distribution using parameter estimates sampling variance-covariance matrix. Confidence intervals defined parameters generated obtaining percentiles corresponding 100(1 - α)% generated sampling distribution, α significance level. Monte Carlo confidence intervals free defined parameters models fitted structural equation modeling package lavaan can generated using semmcci package. package three main functions, namely, MC(), MCMI(), MCStd(). output lavaan passed first argument MC() function MCMI() function generate Monte Carlo confidence intervals. Monte Carlo confidence intervals standardized estimates can also generated passing output MC() function MCMI() function MCStd() function. description package code examples presented Pesigan Cheung (2023: https://doi.org/10.3758/s13428-023-02114-4).","code":""},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"common application Monte Carlo method generate confidence intervals indirect effect. simple mediation model, variable X effect variable Y, mediating variable M. mediating indirect effect product path coefficients fitted model.","code":"library(semmcci) library(lavaan)"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"data","dir":"","previous_headings":"Example","what":"Data","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"","code":"summary(df) #>        X                  M                  Y            #>  Min.   :-3.21455   Min.   :-4.18563   Min.   :-3.29115   #>  1st Qu.:-0.60366   1st Qu.:-0.67064   1st Qu.:-0.64340   #>  Median : 0.11833   Median : 0.03038   Median :-0.00055   #>  Mean   : 0.05353   Mean   : 0.00673   Mean   : 0.01279   #>  3rd Qu.: 0.72831   3rd Qu.: 0.71519   3rd Qu.: 0.66714   #>  Max.   : 3.25113   Max.   : 3.56169   Max.   : 3.15741   #>  NA's   :100        NA's   :100        NA's   :100"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"model-specification","dir":"","previous_headings":"Example","what":"Model Specification","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"monte-carlo-confidence-intervals","dir":"","previous_headings":"Example","what":"Monte Carlo Confidence Intervals","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"can now fit model using sem() function lavaan. use full-information maximum likelihood deal missing values. fit lavaan object can passed MC() function generate Monte Carlo confidence intervals.","code":"fit <- sem(data = df, model = model, missing = \"fiml\") mc <- MC(fit, R = 20000L, alpha = 0.05) mc #> Monte Carlo Confidence Intervals #>              est     se     R    2.5%  97.5% #> cp        0.2058 0.0302 20000  0.1468 0.2653 #> b         0.5211 0.0292 20000  0.4641 0.5772 #> a         0.5475 0.0289 20000  0.4920 0.6041 #> X~~X      1.0462 0.0488 20000  0.9503 1.1414 #> Y~~Y      0.5370 0.0262 20000  0.4859 0.5891 #> M~~M      0.7640 0.0366 20000  0.6937 0.8366 #> Y~1      -0.0008 0.0248 20000 -0.0486 0.0477 #> M~1      -0.0100 0.0291 20000 -0.0675 0.0471 #> X~1       0.0360 0.0335 20000 -0.0294 0.1022 #> indirect  0.2853 0.0218 20000  0.2438 0.3290 #> direct    0.2058 0.0302 20000  0.1468 0.2653 #> total     0.4910 0.0288 20000  0.4346 0.5472"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"monte-carlo-confidence-intervals---multiple-imputation","dir":"","previous_headings":"Example","what":"Monte Carlo Confidence Intervals - Multiple Imputation","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"MCMI() function can used handle missing values using multiple imputation. MCMI() accepts output mice::mice(), Amelia::amelia(), list multiply imputed data sets. example, impute multivariate missing data normal model. fit model using lavaan using default listwise deletion. fit lavaan object mi object can passed MCMI() function generate Monte Carlo confidence intervals.","code":"mi <- mice::mice(   df,   method = \"norm\",   m = 100,   print = FALSE,   seed = 42 ) fit <- sem(data = df, model = model) mcmi <- MCMI(fit, mi = mi, R = 20000L, alpha = 0.05, seed = 42) mcmi #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>             est     se     R   2.5%  97.5% #> cp       0.2065 0.0301 20000 0.1469 0.2658 #> b        0.5197 0.0296 20000 0.4615 0.5776 #> a        0.5478 0.0289 20000 0.4909 0.6044 #> X~~X     1.0487 0.0492 20000 0.9527 1.1455 #> Y~~Y     0.5367 0.0262 20000 0.4853 0.5879 #> M~~M     0.7638 0.0371 20000 0.6904 0.8362 #> indirect 0.2847 0.0220 20000 0.2427 0.3286 #> direct   0.2065 0.0301 20000 0.1469 0.2658 #> total    0.4912 0.0285 20000 0.4357 0.5473"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"standardized-monte-carlo-confidence-intervals","dir":"","previous_headings":"Example","what":"Standardized Monte Carlo Confidence Intervals","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCMI() function MCStd().","code":"MCStd(mc, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>              est     se     R   2.5%  97.5% #> cp        0.2108 0.0306 20000 0.1506 0.2705 #> b         0.5418 0.0272 20000 0.4873 0.5937 #> a         0.5394 0.0239 20000 0.4918 0.5856 #> X~~X      1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y      0.5388 0.0249 20000 0.4902 0.5878 #> M~~M      0.7090 0.0258 20000 0.6571 0.7581 #> indirect -0.0008 0.0199 20000 0.2536 0.3317 #> direct   -0.0097 0.0306 20000 0.1506 0.2705 #> total     0.0352 0.0255 20000 0.4514 0.5518 MCStd(mcmi, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2042 0.0308 20000 0.1509 0.2722 #> b        0.5505 0.0275 20000 0.4855 0.5936 #> a        0.5364 0.0241 20000 0.4921 0.5867 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y     0.5347 0.0249 20000 0.4896 0.5874 #> M~~M     0.7123 0.0260 20000 0.6558 0.7578 #> indirect 0.2953 0.0201 20000 0.2527 0.3317 #> direct   0.2042 0.0308 20000 0.1509 0.2722 #> total    0.4995 0.0256 20000 0.4528 0.5525"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"See GitHub Pages package documentation.","code":""},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"cite semmcci publications, please cite Pesigan & Cheung (2023).","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Confidence Intervals — MC","title":"Monte Carlo Confidence Intervals — MC","text":"Calculates Monte Carlo confidence intervals free defined parameters.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Confidence Intervals — MC","text":"","code":"MC(   lav,   R = 20000L,   alpha = c(0.001, 0.01, 0.05),   decomposition = \"eigen\",   pd = TRUE,   tol = 1e-06,   seed = NULL )"},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Confidence Intervals — MC","text":"lav Object class lavaan. R Positive integer. Number Monte Carlo replications. alpha Numeric vector. Significance level \\(\\alpha\\). decomposition Character string. Matrix decomposition sampling variance-covariance matrix data generation. decomposition = \"chol\", use Cholesky decomposition. decomposition = \"eigen\", use eigenvalue decomposition. decomposition = \"svd\", use singular value decomposition. pd Logical. pd = TRUE, check sampling variance-covariance matrix positive definite using tol. tol Numeric. Tolerance used pd. seed Integer. Random seed reproducibility.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Confidence Intervals — MC","text":"Returns object class semmcci list following elements: call Function call. args List function arguments. thetahat Parameter estimates \\(\\hat{\\theta}\\). thetahatstar Sampling distribution parameter estimates \\(\\hat{\\theta}^{\\ast}\\). fun Function used (\"MC\").","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Monte Carlo Confidence Intervals — MC","text":"sampling distribution parameter estimates generated multivariate normal distribution using parameter estimates sampling variance-covariance matrix. Confidence intervals free defined parameters generated using simulated sampling distribution. Parameters can defined using := operator lavaan model syntax.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Monte Carlo Confidence Intervals — MC","text":"MacKinnon, D. P., Lockwood, C. M., & Williams, J. (2004). Confidence limits indirect effect: Distribution product resampling methods. Multivariate Behavioral Research, 39(1), 99-128. doi:10.1207/s15327906mbr3901_4 Pesigan, . J. ., & Cheung, S. F. (2023). Monte Carlo confidence intervals indirect effect missing data. Behavior Research Methods. doi:10.3758/s13428-023-02114-4 Preacher, K. J., & Selig, J. P. (2012). Advantages Monte Carlo confidence intervals indirect effects. Communication Methods Measures, 6(2), 77–98. doi:10.1080/19312458.2012.679848","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Monte Carlo Confidence Intervals — MC","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte Carlo Confidence Intervals — MC","text":"","code":"library(semmcci) library(lavaan) #> This is lavaan 0.6-16 #> lavaan is FREE software! Please report any bugs.  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- MC(   fit,   R = 20L, # use a large value e.g., 20000L for actual research   alpha = 0.05 ) #> Monte Carlo Confidence Intervals #>                       est     se  R    2.5%  97.5% #> cp                 0.3569 0.2167 20  0.1122 0.8369 #> b                  0.5006 0.0918 20  0.3562 0.6606 #> a                  0.3776 0.2768 20  0.0348 0.8875 #> cond~~cond         0.2491 0.0301 20  0.2072 0.3094 #> reaction~~reaction 1.9343 0.2641 20  1.4617 2.2778 #> pmi~~pmi           1.7683 0.2182 20  1.5029 2.1915 #> reaction~1         0.5196 0.5225 20 -0.4337 1.2798 #> pmi~1              5.4313 0.1376 20  5.1565 5.5910 #> cond~1             0.4722 0.0491 20  0.4005 0.5832 #> indirect           0.1890 0.1607 20  0.0211 0.5292 #> direct             0.3569 0.2167 20  0.1122 0.8369 #> total              0.5459 0.2846 20  0.2182 1.2120"},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"Calculates Monte Carlo confidence intervals free defined parameters. Missing values handled using multilple imputation.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"","code":"MCMI(   lav,   mi,   R = 20000L,   alpha = c(0.001, 0.01, 0.05),   decomposition = \"eigen\",   pd = TRUE,   tol = 1e-06,   seed = NULL )"},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"lav Object class lavaan. mi Object class mids (output mice::mice()), object class amelia (output Amelia::amelia()), list multiply imputed data sets. R Positive integer. Number Monte Carlo replications. alpha Numeric vector. Significance level \\(\\alpha\\). decomposition Character string. Matrix decomposition sampling variance-covariance matrix data generation. decomposition = \"chol\", use Cholesky decomposition. decomposition = \"eigen\", use eigenvalue decomposition. decomposition = \"svd\", use singular value decomposition. pd Logical. pd = TRUE, check sampling variance-covariance matrix positive definite using tol. tol Numeric. Tolerance used pd. seed Integer. Random seed reproducibility.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"Returns object class semmcci list following elements: call Function call. args List function arguments. thetahat Parameter estimates \\(\\hat{\\theta}\\). thetahatstar Sampling distribution parameter estimates \\(\\hat{\\theta}^{\\ast}\\). fun Function used (\"MCMI\").","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"sampling distribution parameter estimates generated multivariate normal distribution using parameter estimates sampling variance-covariance matrix obtained using multiple imputation. Confidence intervals free defined parameters generated using simulated sampling distribution. Parameters can defined using := operator lavaan model syntax.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"Pesigan, . J. ., & Cheung, S. F. (2023). Monte Carlo confidence intervals indirect effect missing data. Behavior Research Methods. doi:10.3758/s13428-023-02114-4 Rubin, D. B. (1987). Multiple imputation nonresponse surveys. John Wiley & Sons, Inc.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ MCMI(   fit,   mi = mi,   R = 20L, # use a large value e.g., 20000L for actual research   alpha = 0.05 ) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>                        est     se  R    2.5%  97.5% #> cp                 -0.0268 0.2823 20 -0.4260 0.4724 #> b                   0.5047 0.0998 20  0.2790 0.6215 #> a                   0.6275 0.2504 20  0.2892 1.1691 #> cond~~cond          0.2497 0.0402 20  0.1952 0.3281 #> reaction~~reaction  1.9103 0.3483 20  1.1535 2.2031 #> pmi~~pmi            1.7050 0.2083 20  1.3130 2.0409 #> indirect            0.3141 0.1433 20  0.1441 0.6747 #> direct             -0.0268 0.2823 20 -0.4260 0.4724 #> total               0.2873 0.3053 20 -0.0886 0.9942"},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals — MCStd","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"Calculates standardized Monte Carlo confidence intervals free defined parameters.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"","code":"MCStd(mc, alpha = c(0.001, 0.01, 0.05))"},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"mc Output MC() MCMI() function. alpha Numeric vector. Significance level \\(\\alpha\\).","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"Returns object class semmcci list following elements: call Function call. args List function arguments. thetahat Parameter estimates \\(\\hat{\\theta}\\). thetahatstar Sampling distribution parameter estimates \\(\\hat{\\theta}^{\\ast}\\). fun Function used (\"MCStd\").","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"empirical sampling distribution parameter estimates argument mc standardized, , randomly generated vector parameters standardized. Defined parameters computed standardized component parameters. Confidence intervals generated using standardized empirical sampling distribution.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"Pesigan, . J. ., & Cheung, S. F. (2023). Monte Carlo confidence intervals indirect effect missing data. Behavior Research Methods. doi:10.3758/s13428-023-02114-4","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 20L, # use a large value e.g., 20000L for actual research   alpha = 0.05 )  ## Standardized Monte Carlo ------------------------------------------------ MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>                       est     se  R   2.5%  97.5% #> cp                 0.1288 0.0913 20 0.0054 0.3123 #> b                  0.4102 0.0930 20 0.2514 0.5812 #> a                  0.1967 0.0991 20 0.0114 0.3868 #> cond~~cond         1.0000 0.0000 20 1.0000 1.0000 #> reaction~~reaction 0.7944 0.0972 20 0.5815 0.9166 #> pmi~~pmi           0.9613 0.0420 20 0.8481 0.9952 #> indirect           0.4567 0.0525 20 0.0034 0.1962 #> direct             3.9865 0.0913 20 0.0054 0.3123 #> total              0.9589 0.1055 20 0.0506 0.3877  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 20L, # use a large value e.g., 20000L for actual research   alpha = 0.05 )  ## Standardized Monte Carlo ------------------------------------------------ MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>                       est     se  R    2.5%  97.5% #> cp                 0.1058 0.0741 20 -0.0010 0.2769 #> b                  0.4100 0.0592 20  0.3315 0.5287 #> a                  0.1813 0.0794 20 -0.0002 0.2734 #> cond~~cond         1.0000 0.0000 20  1.0000 1.0000 #> reaction~~reaction 0.8050 0.0520 20  0.6850 0.8496 #> pmi~~pmi           0.9671 0.0221 20  0.9251 0.9999 #> indirect           0.0743 0.0347 20  0.0004 0.1184 #> direct             0.1058 0.0741 20 -0.0010 0.2769 #> total              0.1802 0.0783 20  0.0627 0.3208"},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Estimates — coef.semmcci","title":"Parameter Estimates — coef.semmcci","text":"Parameter Estimates","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Estimates — coef.semmcci","text":"","code":"# S3 method for semmcci coef(object, ...)"},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Estimates — coef.semmcci","text":"object Object class semmcci. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Estimates — coef.semmcci","text":"Returns vector parameter estimates.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parameter Estimates — coef.semmcci","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter Estimates — coef.semmcci","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 20L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) coef(unstd) #>                 cp                  b                  a         cond~~cond  #>          0.3327044          0.5391863          0.3802566          0.2495345  #> reaction~~reaction           pmi~~pmi         reaction~1              pmi~1  #>          1.8786305          1.6236241          0.3248730          5.3925884  #>             cond~1           indirect             direct              total  #>          0.4931112          0.2050291          0.3327044          0.5377335  coef(std) #>                 cp                  b                  a         cond~~cond  #>         0.10677370         0.44626707         0.14744378         1.00000000  #> reaction~~reaction           pmi~~pmi         reaction~1              pmi~1  #>         0.77539381         0.97826033         0.20871521         4.18583160  #>             cond~1           indirect             direct              total  #>         0.98714191         0.06579931         0.10677370         0.17257301   # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 20L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) coef(unstd) #>                 cp                  b                  a         cond~~cond  #>          0.2776344          0.5338611          0.3252248          0.2493490  #> reaction~~reaction           pmi~~pmi           indirect             direct  #>          1.9031550          1.6272819          0.1735452          0.2776344  #>              total  #>          0.4511796  coef(std) #>                 cp                  b                  a         cond~~cond  #>         0.08419234         0.46480589         0.14632761         1.00000000  #> reaction~~reaction           pmi~~pmi           indirect             direct  #>         0.76541463         0.97858823         0.06801393         0.08419234  #>              total  #>         0.15220628"},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"Monte Carlo Confidence Intervals Parameter Estimates","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"","code":"# S3 method for semmcci confint(object, parm = NULL, level = 0.95, ...)"},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"object Object class semmcci. parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. level confidence level required. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"Returns matrix confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 20L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) confint(unstd) #>                          2.5 %    97.5 % #> cp                 -0.01557234 0.7013070 #> b                   0.32142540 0.6684731 #> a                   0.23610668 0.9653778 #> cond~~cond          0.20138832 0.2768066 #> reaction~~reaction  1.47690588 2.2584526 #> pmi~~pmi            1.02219896 2.0233074 #> reaction~1         -0.45916610 1.4204023 #> pmi~1               5.11907114 5.6137721 #> cond~1              0.35462873 0.5387477 #> indirect            0.13030821 0.5852828 #> direct             -0.01557234 0.7013070 #> total               0.14910437 1.1468288 confint(std) #>                           2.5 %    97.5 % #> cp                 -0.005508058 0.2189590 #> b                   0.292639426 0.5672739 #> a                   0.091670029 0.3414584 #> cond~~cond          1.000000000 1.0000000 #> reaction~~reaction  0.640614344 0.8964992 #> pmi~~pmi            0.883271740 0.9915852 #> indirect            0.043222153 0.1683554 #> direct             -0.005508058 0.2189590 #> total               0.050218338 0.3468649  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 20L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) confint(unstd) #>                          2.5 %    97.5 % #> cp                 -0.17074004 0.6325873 #> b                   0.39144739 0.8121481 #> a                  -0.01541409 0.7529755 #> cond~~cond          0.20925380 0.3013419 #> reaction~~reaction  1.35022964 2.1389499 #> pmi~~pmi            1.42371092 2.0133935 #> indirect           -0.01326449 0.4416948 #> direct             -0.17074004 0.6325873 #> total              -0.01292748 0.7486956 confint(std) #>                           2.5 %    97.5 % #> cp                 -0.051520793 0.2005323 #> b                   0.339863945 0.6495827 #> a                  -0.006441733 0.3027016 #> cond~~cond          1.000000000 1.0000000 #> reaction~~reaction  0.558846505 0.8865265 #> pmi~~pmi            0.908145644 0.9995395 #> indirect           -0.004568658 0.1482878 #> direct             -0.051520793 0.2005323 #> total              -0.004113802 0.2383087"},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for Object of Class semmcci — print.semmcci","title":"Print Method for Object of Class semmcci — print.semmcci","text":"Print Method Object Class semmcci","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for Object of Class semmcci — print.semmcci","text":"","code":"# S3 method for semmcci print(x, alpha = NULL, digits = 4, ...)"},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for Object of Class semmcci — print.semmcci","text":"x object class semmcci. alpha Numeric vector. Significance level \\(\\alpha\\). alpha = NULL, use argument alpha used x. digits Integer indicating number decimal places display. ... arguments.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Method for Object of Class semmcci — print.semmcci","text":"Returns matrix estimates, standard errors, number Monte Carlo replications, confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print Method for Object of Class semmcci — print.semmcci","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Method for Object of Class semmcci — print.semmcci","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 20L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) print(unstd) #> Monte Carlo Confidence Intervals #>                       est     se  R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.4518 0.3378 20 -0.0774 -0.0765 -0.0726 0.9661 0.9782 #> b                  0.5243 0.1044 20  0.2790  0.2801  0.2850 0.6714 0.6970 #> a                  0.4679 0.2861 20 -0.1084 -0.0998 -0.0617 0.8859 0.9045 #> cond~~cond         0.2500 0.0333 20  0.2072  0.2077  0.2096 0.3005 0.3020 #> reaction~~reaction 1.7846 0.2384 20  1.3493  1.3592  1.4034 2.2371 2.3613 #> pmi~~pmi           1.7411 0.3232 20  1.1517  1.1548  1.1685 2.2711 2.3302 #> reaction~1         0.2930 0.5311 20 -0.6489 -0.6445 -0.6250 1.3876 1.4800 #> pmi~1              5.3438 0.1862 20  4.9613  4.9743  5.0322 5.6493 5.6587 #> cond~1             0.4905 0.0482 20  0.3881  0.3904  0.4007 0.5740 0.5883 #> indirect           0.2453 0.1486 20 -0.0590 -0.0544 -0.0337 0.4796 0.5023 #> direct             0.4518 0.3378 20 -0.0774 -0.0765 -0.0726 0.9661 0.9782 #> total              0.6971 0.3400 20  0.0212  0.0279  0.0580 1.1642 1.1867 #>                    99.95% #> cp                 0.9809 #> b                  0.7027 #> a                  0.9087 #> cond~~cond         0.3023 #> reaction~~reaction 2.3892 #> pmi~~pmi           2.3436 #> reaction~1         1.5007 #> pmi~1              5.6609 #> cond~1             0.5915 #> indirect           0.5073 #> direct             0.9809 #> total              1.1917 print(std) #> Standardized Monte Carlo Confidence Intervals #>                       est     se  R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.1463 0.1160 20 -0.0250 -0.0246 -0.0232 0.3330 0.3393 #> b                  0.4550 0.0791 20  0.2407  0.2479  0.2801 0.5749 0.5935 #> a                  0.1746 0.1107 20 -0.0433 -0.0398 -0.0245 0.3378 0.3453 #> cond~~cond         1.0000 0.0000 20  1.0000  1.0000  1.0000 1.0000 1.0000 #> reaction~~reaction 0.7483 0.0511 20  0.6261  0.6267  0.6293 0.8017 0.8025 #> pmi~~pmi           0.9695 0.0372 20  0.8796  0.8808  0.8858 0.9999 1.0000 #> indirect           0.1897 0.0480 20 -0.0196 -0.0180 -0.0111 0.1533 0.1591 #> direct             3.9877 0.1160 20 -0.0250 -0.0246 -0.0232 0.3330 0.3393 #> total              0.9811 0.1187 20  0.0067  0.0089  0.0187 0.4085 0.4194 #>                    99.95% #> cp                 0.3408 #> b                  0.5977 #> a                  0.3469 #> cond~~cond         1.0000 #> reaction~~reaction 0.8026 #> pmi~~pmi           1.0000 #> indirect           0.1604 #> direct             0.3408 #> total              0.4219  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 20L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) print(unstd) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>                       est     se  R  0.05%   0.5%   2.5%  97.5%  99.5% 99.95% #> cp                 0.4429 0.1486 20 0.0625 0.0776 0.1443 0.6962 0.7195 0.7247 #> b                  0.5361 0.1005 20 0.1716 0.1927 0.2863 0.6218 0.6256 0.6265 #> a                  0.4287 0.2082 20 0.0919 0.0942 0.1044 0.7687 0.8828 0.9085 #> cond~~cond         0.2495 0.0268 20 0.1843 0.1858 0.1925 0.2831 0.2876 0.2887 #> reaction~~reaction 1.7859 0.2290 20 1.3090 1.3211 1.3752 2.1141 2.1358 2.1407 #> pmi~~pmi           1.7413 0.2490 20 1.2419 1.2538 1.3065 2.1711 2.2276 2.2404 #> indirect           0.2293 0.1025 20 0.0545 0.0552 0.0584 0.3678 0.3967 0.4033 #> direct             0.4429 0.1486 20 0.0625 0.0776 0.1443 0.6962 0.7195 0.7247 #> total              0.6722 0.1699 20 0.3588 0.3627 0.3802 0.9500 0.9834 0.9909 print(std) #> Standardized Monte Carlo Confidence Intervals #>                       est     se  R  0.05%   0.5%   2.5%  97.5%  99.5% 99.95% #> cp                 0.1809 0.0462 20 0.0192 0.0243 0.0468 0.2139 0.2171 0.2178 #> b                  0.4067 0.0917 20 0.1558 0.1710 0.2387 0.5475 0.5553 0.5570 #> a                  0.2720 0.0726 20 0.0350 0.0358 0.0396 0.2712 0.3258 0.3380 #> cond~~cond         1.0000 0.0000 20 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 #> reaction~~reaction 0.7619 0.0685 20 0.6676 0.6676 0.6678 0.8915 0.9135 0.9185 #> pmi~~pmi           0.9260 0.0253 20 0.8855 0.8921 0.9213 0.9984 0.9987 0.9988 #> indirect           0.1106 0.0319 20 0.0195 0.0195 0.0199 0.1161 0.1321 0.1357 #> direct             0.1809 0.0462 20 0.0192 0.0243 0.0468 0.2139 0.2171 0.2178 #> total              0.2915 0.0492 20 0.1097 0.1118 0.1209 0.2802 0.2836 0.2843"},{"path":"https://github.com/jeksterslab/semmcci/reference/semmcci-package.html","id":null,"dir":"Reference","previous_headings":"","what":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling — semmcci-package","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling — semmcci-package","text":"Monte Carlo confidence intervals free defined parameters models fitted structural equation modeling package 'lavaan' can generated using 'semmcci' package. 'semmcci' three main functions, namely, MC(), MCMI(), MCStd(). output 'lavaan' passed first argument MC() function MCMI() function generate Monte Carlo confidence intervals. Monte Carlo confidence intervals standardized estimates can also generated passing output MC() function MCMI() function MCStd() function. description package code examples presented Pesigan Cheung (2023) doi:10.3758/s13428-023-02114-4 .","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/reference/semmcci-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling — semmcci-package","text":"Maintainer: Ivan Jacob Agaloos Pesigan r.jeksterslab@gmail.com (ORCID) [copyright holder] contributors: Shu Fai Cheung shufai.cheung@gmail.com (ORCID) [contributor]","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Method for an Object of Class semmcci — summary.semmcci","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"Summary Method Object Class semmcci","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"","code":"# S3 method for semmcci summary(object, alpha = NULL, digits = 4, ...)"},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"object Object class semmcci. alpha Numeric vector. Significance level \\(\\alpha\\). alpha = NULL, use argument alpha used object. digits Digits print. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"Returns matrix estimates, standard errors, number Monte Carlo replications, confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 20L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) summary(unstd) #> Monte Carlo Confidence Intervals #>                       est     se  R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.3138 0.2237 20 -0.0210 -0.0171  0.0005 0.7489 0.8136 #> b                  0.5336 0.0906 20  0.4180  0.4186  0.4215 0.7155 0.7215 #> a                  0.4578 0.2225 20  0.0677  0.0702  0.0811 0.8645 0.9166 #> cond~~cond         0.2478 0.0311 20  0.1990  0.2001  0.2049 0.3103 0.3128 #> reaction~~reaction 1.7026 0.2112 20  1.2861  1.2901  1.3077 1.9901 2.0326 #> pmi~~pmi           1.7313 0.2305 20  1.2078  1.2133  1.2380 2.0435 2.1316 #> reaction~1         0.3672 0.4679 20 -0.6213 -0.6169 -0.5978 0.8748 0.8845 #> pmi~1              5.3687 0.1691 20  5.0843  5.0897  5.1137 5.7237 5.7748 #> cond~1             0.4603 0.0361 20  0.4189  0.4191  0.4196 0.5315 0.5498 #> indirect           0.2443 0.1346 20  0.0323  0.0337  0.0398 0.4909 0.5317 #> direct             0.3138 0.2237 20 -0.0210 -0.0171  0.0005 0.7489 0.8136 #> total              0.5581 0.2457 20  0.2651  0.2699  0.2911 1.1120 1.1548 #>                    99.95% #> cp                 0.8282 #> b                  0.7228 #> a                  0.9283 #> cond~~cond         0.3133 #> reaction~~reaction 2.0421 #> pmi~~pmi           2.1514 #> reaction~1         0.8867 #> pmi~1              5.7862 #> cond~1             0.5539 #> indirect           0.5409 #> direct             0.8282 #> total              1.1645 summary(std) #> Standardized Monte Carlo Confidence Intervals #>                       est     se  R   0.05%    0.5%   2.5%  97.5%  99.5% 99.95% #> cp                 0.1036 0.0758 20 -0.0064 -0.0052 0.0004 0.2601 0.2890 0.2955 #> b                  0.4726 0.0658 20  0.3644  0.3659 0.3728 0.6027 0.6136 0.6160 #> a                  0.1707 0.0755 20  0.0232  0.0246 0.0312 0.3001 0.3181 0.3222 #> cond~~cond         1.0000 0.0000 20  1.0000  1.0000 1.0000 1.0000 1.0000 1.0000 #> reaction~~reaction 0.7492 0.0776 20  0.5593  0.5629 0.5791 0.8267 0.8279 0.8282 #> pmi~~pmi           0.9709 0.0266 20  0.8962  0.8986 0.9094 0.9990 0.9994 0.9995 #> indirect           0.2436 0.0408 20  0.0092  0.0099 0.0129 0.1524 0.1643 0.1669 #> direct             4.0203 0.0758 20 -0.0064 -0.0052 0.0004 0.2601 0.2890 0.2955 #> total              0.9246 0.0799 20  0.0815  0.0847 0.0987 0.3682 0.3743 0.3757  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 20L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) summary(unstd) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>                       est     se  R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.2708 0.2360 20 -0.1664 -0.1553 -0.1061 0.6473 0.7115 #> b                  0.5023 0.1039 20  0.3184  0.3199  0.3266 0.6515 0.6641 #> a                  0.4214 0.2916 20 -0.1701 -0.1632 -0.1322 0.8936 0.9185 #> cond~~cond         0.2483 0.0319 20  0.2008  0.2016  0.2049 0.3093 0.3262 #> reaction~~reaction 1.7670 0.2507 20  1.3052  1.3148  1.3579 2.1307 2.1381 #> pmi~~pmi           1.7456 0.2985 20  1.2266  1.2298  1.2439 2.1679 2.2295 #> indirect           0.2133 0.1697 20 -0.0638 -0.0630 -0.0595 0.5134 0.5717 #> direct             0.2708 0.2360 20 -0.1664 -0.1553 -0.1061 0.6473 0.7115 #> total              0.4841 0.2882 20  0.1085  0.1107  0.1202 1.0163 1.1193 #>                    99.95% #> cp                 0.7259 #> b                  0.6669 #> a                  0.9241 #> cond~~cond         0.3300 #> reaction~~reaction 2.1398 #> pmi~~pmi           2.2433 #> indirect           0.5849 #> direct             0.7259 #> total              1.1425 summary(std) #> Standardized Monte Carlo Confidence Intervals #>                       est     se  R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.1402 0.0743 20 -0.0533 -0.0497 -0.0335 0.1975 0.2054 #> b                  0.4700 0.0878 20  0.2886  0.2894  0.2932 0.5768 0.5777 #> a                  0.2010 0.1065 20 -0.0732 -0.0700 -0.0554 0.3053 0.3158 #> cond~~cond         1.0000 0.0000 20  1.0000  1.0000  1.0000 1.0000 1.0000 #> reaction~~reaction 0.7330 0.0910 20  0.5869  0.5904  0.6063 0.8963 0.9115 #> pmi~~pmi           0.9596 0.0291 20  0.8988  0.9002  0.9066 0.9999 1.0000 #> indirect           0.0945 0.0521 20 -0.0212 -0.0207 -0.0185 0.1586 0.1662 #> direct             0.1402 0.0743 20 -0.0533 -0.0497 -0.0335 0.1975 0.2054 #> total              0.2347 0.0872 20  0.0322  0.0332  0.0379 0.3097 0.3245 #>                    99.95% #> cp                 0.2071 #> b                  0.5779 #> a                  0.3182 #> cond~~cond         1.0000 #> reaction~~reaction 0.9149 #> pmi~~pmi           1.0000 #> indirect           0.1679 #> direct             0.2071 #> total              0.3279"},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"Sampling Covariance Matrix Parameter Estimates","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"","code":"# S3 method for semmcci vcov(object, ...)"},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"object Object class semmcci. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"Returns matrix variance-covariance matrix parameter estimates.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 20L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) vcov(unstd) #>                              cp             b            a    cond~~cond #> cp                  0.070018550 -0.0115510535  0.017387002  0.0035070916 #> b                  -0.011551054  0.0117293031 -0.004214466 -0.0004574929 #> a                   0.017387002 -0.0042144665  0.034518725  0.0010226350 #> cond~~cond          0.003507092 -0.0004574929  0.001022635  0.0011023743 #> reaction~~reaction  0.029481963  0.0084319513 -0.010975165  0.0038886756 #> pmi~~pmi           -0.022775832  0.0084015803 -0.020586164  0.0030490319 #> reaction~1          0.033690979 -0.0594801219  0.015941732  0.0012255694 #> pmi~1              -0.018124479  0.0085445136 -0.016259702 -0.0008432055 #> cond~1              0.004203503  0.0003549425  0.001338033  0.0003335460 #> indirect            0.005444964  0.0019846502  0.018072803  0.0003861333 #> direct              0.070018550 -0.0115510535  0.017387002  0.0035070916 #> total               0.075463514 -0.0095664033  0.035459806  0.0038932249 #>                    reaction~~reaction     pmi~~pmi   reaction~1         pmi~1 #> cp                        0.029481963 -0.022775832  0.033690979 -0.0181244786 #> b                         0.008431951  0.008401580 -0.059480122  0.0085445136 #> a                        -0.010975165 -0.020586164  0.015941732 -0.0162597021 #> cond~~cond                0.003888676  0.003049032  0.001225569 -0.0008432055 #> reaction~~reaction        0.098893437 -0.002646333 -0.054178930 -0.0014766748 #> pmi~~pmi                 -0.002646333  0.082166476 -0.037965192  0.0204918829 #> reaction~1               -0.054178930 -0.037965192  0.330300307 -0.0386903850 #> pmi~1                    -0.001476675  0.020491883 -0.038690385  0.0273624621 #> cond~1                    0.006115230  0.001777142 -0.002890339  0.0022186497 #> indirect                 -0.003488608 -0.007911357 -0.012735347 -0.0057741709 #> direct                    0.029481963 -0.022775832  0.033690979 -0.0181244786 #> total                     0.025993354 -0.030687188  0.020955631 -0.0238986495 #>                           cond~1      indirect       direct        total #> cp                  0.0042035031  0.0054449639  0.070018550  0.075463514 #> b                   0.0003549425  0.0019846502 -0.011551054 -0.009566403 #> a                   0.0013380330  0.0180728033  0.017387002  0.035459806 #> cond~~cond          0.0003335460  0.0003861333  0.003507092  0.003893225 #> reaction~~reaction  0.0061152298 -0.0034886085  0.029481963  0.025993354 #> pmi~~pmi            0.0017771419 -0.0079113566 -0.022775832 -0.030687188 #> reaction~1         -0.0028903393 -0.0127353473  0.033690979  0.020955631 #> pmi~1               0.0022186497 -0.0057741709 -0.018124479 -0.023898649 #> cond~1              0.0027188456  0.0010044262  0.004203503  0.005207929 #> indirect            0.0010044262  0.0112225335  0.005444964  0.016667497 #> direct              0.0042035031  0.0054449639  0.070018550  0.075463514 #> total               0.0052079293  0.0166674974  0.075463514  0.092131012 vcov(std) #>                               cp             b             a    cond~~cond #> cp                  7.417650e-03 -5.049332e-03  2.840525e-03 -1.702029e-18 #> b                  -5.049332e-03  8.304133e-03 -1.975534e-03  8.393244e-19 #> a                   2.840525e-03 -1.975534e-03  5.515587e-03 -2.736592e-19 #> cond~~cond         -1.702029e-18  8.393244e-19 -2.736592e-19  1.946203e-32 #> reaction~~reaction  2.037211e-03 -5.553466e-03  3.410884e-04 -1.017462e-19 #> pmi~~pmi           -8.857194e-04  4.830439e-04 -1.723609e-03  1.841825e-19 #> indirect            6.044299e-04  3.124469e-04  2.312308e-03 -9.167141e-20 #> direct              7.417650e-03 -5.049332e-03  2.840525e-03 -1.702029e-18 #> total               8.022080e-03 -4.736885e-03  5.152833e-03 -1.793700e-18 #>                    reaction~~reaction      pmi~~pmi      indirect        direct #> cp                       2.037211e-03 -8.857194e-04  6.044299e-04  7.417650e-03 #> b                       -5.553466e-03  4.830439e-04  3.124469e-04 -5.049332e-03 #> a                        3.410884e-04 -1.723609e-03  2.312308e-03  2.840525e-03 #> cond~~cond              -1.017462e-19  1.841825e-19 -9.167141e-20 -1.702029e-18 #> reaction~~reaction       4.706750e-03  3.545833e-05 -6.026052e-04  2.037211e-03 #> pmi~~pmi                 3.545833e-05  5.589947e-04 -7.372965e-04 -8.857194e-04 #> indirect                -6.026052e-04 -7.372965e-04  1.168425e-03  6.044299e-04 #> direct                   2.037211e-03 -8.857194e-04  6.044299e-04  7.417650e-03 #> total                    1.434605e-03 -1.623016e-03  1.772855e-03  8.022080e-03 #>                            total #> cp                  8.022080e-03 #> b                  -4.736885e-03 #> a                   5.152833e-03 #> cond~~cond         -1.793700e-18 #> reaction~~reaction  1.434605e-03 #> pmi~~pmi           -1.623016e-03 #> indirect            1.772855e-03 #> direct              8.022080e-03 #> total               9.794935e-03  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 20L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) vcov(unstd) #>                               cp             b            a   cond~~cond #> cp                  0.1467383505 -0.0059977062 -0.007114803 0.0006834401 #> b                  -0.0059977062  0.0100898855  0.003930300 0.0008952251 #> a                  -0.0071148031  0.0039302999  0.087717859 0.0016789248 #> cond~~cond          0.0006834401  0.0008952251  0.001678925 0.0004759700 #> reaction~~reaction  0.0207072297  0.0034217742 -0.012609459 0.0011947202 #> pmi~~pmi            0.0459013284  0.0051674468 -0.009272313 0.0007334897 #> indirect           -0.0040432243  0.0068138547  0.049743674 0.0014039126 #> direct              0.1467383505 -0.0059977062 -0.007114803 0.0006834401 #> total               0.1426951262  0.0008161485  0.042628871 0.0020873528 #>                    reaction~~reaction      pmi~~pmi     indirect        direct #> cp                        0.020707230  0.0459013284 -0.004043224  0.1467383505 #> b                         0.003421774  0.0051674468  0.006813855 -0.0059977062 #> a                        -0.012609459 -0.0092723133  0.049743674 -0.0071148031 #> cond~~cond                0.001194720  0.0007334897  0.001403913  0.0006834401 #> reaction~~reaction        0.053796630  0.0097697813 -0.005271339  0.0207072297 #> pmi~~pmi                  0.009769781  0.0483070984 -0.001648107  0.0459013284 #> indirect                 -0.005271339 -0.0016481066  0.031122037 -0.0040432243 #> direct                    0.020707230  0.0459013284 -0.004043224  0.1467383505 #> total                     0.015435891  0.0442532219  0.027078812  0.1426951262 #>                           total #> cp                 0.1426951262 #> b                  0.0008161485 #> a                  0.0426288708 #> cond~~cond         0.0020873528 #> reaction~~reaction 0.0154358909 #> pmi~~pmi           0.0442532219 #> indirect           0.0270788122 #> direct             0.1426951262 #> total              0.1697739384 vcov(std) #>                               cp             b             a    cond~~cond #> cp                  1.304626e-02 -1.745079e-03 -1.028644e-03 -2.924609e-18 #> b                  -1.745079e-03  5.708816e-03  1.414082e-03  8.137966e-19 #> a                  -1.028644e-03  1.414082e-03  1.146256e-02  1.176241e-18 #> cond~~cond         -2.924609e-18  8.137966e-19  1.176241e-18  2.011076e-32 #> reaction~~reaction -2.991771e-03 -4.789852e-03 -2.407455e-03  6.716062e-19 #> pmi~~pmi           -1.589151e-04 -5.257144e-04 -3.821960e-03 -9.369755e-19 #> indirect           -5.429618e-04  1.648991e-03  5.539132e-03  2.008413e-19 #> direct              1.304626e-02 -1.745079e-03 -1.028644e-03 -2.924609e-18 #> total               1.250330e-02 -9.608797e-05  4.510488e-03 -2.723768e-18 #>                    reaction~~reaction      pmi~~pmi      indirect        direct #> cp                      -2.991771e-03 -1.589151e-04 -5.429618e-04  1.304626e-02 #> b                       -4.789852e-03 -5.257144e-04  1.648991e-03 -1.745079e-03 #> a                       -2.407455e-03 -3.821960e-03  5.539132e-03 -1.028644e-03 #> cond~~cond               6.716062e-19 -9.369755e-19  2.008413e-19 -2.924609e-18 #> reaction~~reaction       6.058628e-03  1.030803e-03 -2.105270e-03 -2.991771e-03 #> pmi~~pmi                 1.030803e-03  1.424007e-03 -1.877105e-03 -1.589151e-04 #> indirect                -2.105270e-03 -1.877105e-03  2.920208e-03 -5.429618e-04 #> direct                  -2.991771e-03 -1.589151e-04 -5.429618e-04  1.304626e-02 #> total                   -5.097041e-03 -2.036020e-03  2.377246e-03  1.250330e-02 #>                            total #> cp                  1.250330e-02 #> b                  -9.608797e-05 #> a                   4.510488e-03 #> cond~~cond         -2.723768e-18 #> reaction~~reaction -5.097041e-03 #> pmi~~pmi           -2.036020e-03 #> indirect            2.377246e-03 #> direct              1.250330e-02 #> total               1.488054e-02"},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"semmcci-1129000","dir":"Changelog","previous_headings":"","what":"semmcci 1.1.2.9000","title":"semmcci 1.1.2.9000","text":"Latest development version.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"patch-1-1-2","dir":"Changelog","previous_headings":"","what":"Patch","title":"semmcci 1.1.2","text":"Addressed M1Mac CRAN build issues.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"patch-1-1-1","dir":"Changelog","previous_headings":"","what":"Patch","title":"semmcci 1.1.1","text":"Minor documentation edits.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"minor-1-1-0","dir":"Changelog","previous_headings":"","what":"Minor","title":"semmcci 1.1.0","text":"Added MCMI() function.","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"semmcci-104","dir":"Changelog","previous_headings":"","what":"semmcci 1.0.4","title":"semmcci 1.0.4","text":"CRAN release: 2022-12-17","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"patch-1-0-4","dir":"Changelog","previous_headings":"","what":"Patch","title":"semmcci 1.0.4","text":"Minor refactoring data generation functions.","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"semmcci-103","dir":"Changelog","previous_headings":"","what":"semmcci 1.0.3","title":"semmcci 1.0.3","text":"CRAN release: 2022-10-16","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"patch-1-0-3","dir":"Changelog","previous_headings":"","what":"Patch","title":"semmcci 1.0.3","text":"Added decomposition, pd, tol arguments MC().","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"semmcci-102","dir":"Changelog","previous_headings":"","what":"semmcci 1.0.2","title":"semmcci 1.0.2","text":"CRAN release: 2022-10-04","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"patch-1-0-2","dir":"Changelog","previous_headings":"","what":"Patch","title":"semmcci 1.0.2","text":"Random variates multivatiate normal distribution generated using Cholesky decomposition sampling variance-covariance matrix. Eigen decomposition used Cholesky decomposition fails. NA returned calculation defined parameter fails MC(). NA returned standardization fails MCStd(). Added methods.","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"semmcci-101","dir":"Changelog","previous_headings":"","what":"semmcci 1.0.1","title":"semmcci 1.0.1","text":"CRAN release: 2022-09-13","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"patch-1-0-1","dir":"Changelog","previous_headings":"","what":"Patch","title":"semmcci 1.0.1","text":"Initial CRAN release.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"major-1-0-0","dir":"Changelog","previous_headings":"","what":"Major","title":"semmcci 1.0.0","text":"Initial CRAN submission.","code":""}]

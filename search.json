[{"path":"https://github.com/jeksterslab/semmcci/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Ivan Jacob Agaloos Pesigan Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_complete.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"n <- 1000 a <- 0.50 b <- 0.50 cp <- 0.25 s2_em <- 1 - a^2 s2_ey <- 1 - cp^2 - a^2 * b^2 - b^2 * s2_em - 2 * cp * a * b em <- rnorm(n = n, mean = 0, sd = sqrt(s2_em)) ey <- rnorm(n = n, mean = 0, sd = sqrt(s2_ey)) X <- rnorm(n = n) M <- a * X + em Y <- cp * X + b * M + ey df <- data.frame(X, M, Y)"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_complete.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_complete.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"can now fit model using sem() function lavaan.","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_complete.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"fit lavaan object can passed MC() function semmcci generate Monte Carlo confidence intervals.","code":"MC(fit, R = 100L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>             est     se   R   2.5%  97.5% #> cp       0.2333 0.0263 100 0.1850 0.2784 #> b        0.5082 0.0273 100 0.4595 0.5597 #> a        0.4820 0.0282 100 0.4272 0.5355 #> X~~X     1.0590 0.0472 100 0.9659 1.1469 #> Y~~Y     0.5462 0.0267 100 0.4927 0.5948 #> M~~M     0.7527 0.0316 100 0.6937 0.8062 #> indirect 0.2449 0.0182 100 0.2129 0.2789 #> direct   0.2333 0.0263 100 0.1850 0.2784 #> total    0.4782 0.0276 100 0.4254 0.5367"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_complete.html","id":"nonparametric-bootstrap-confidence-intervals","dir":"Articles","previous_headings":"","what":"Nonparametric Bootstrap Confidence Intervals","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"Nonparametric bootstrap confidence intervals can generated lavaan using following.","code":"parameterEstimates(   sem(     data = df,     model = model,     se = \"bootstrap\",     bootstrap = 100L   ) ) #>        lhs op      rhs    label   est    se      z pvalue ci.lower ci.upper #> 1        Y  ~        X       cp 0.233 0.026  8.817      0    0.184    0.286 #> 2        Y  ~        M        b 0.508 0.027 18.662      0    0.447    0.558 #> 3        M  ~        X        a 0.482 0.024 20.433      0    0.432    0.535 #> 4        X ~~        X          1.059 0.045 23.407      0    0.973    1.151 #> 5        Y ~~        Y          0.546 0.024 22.554      0    0.496    0.591 #> 6        M ~~        M          0.753 0.040 19.023      0    0.671    0.847 #> 7 indirect :=      a*b indirect 0.245 0.018 13.526      0    0.199    0.283 #> 8   direct :=       cp   direct 0.233 0.027  8.773      0    0.184    0.286 #> 9    total := cp+(a*b)    total 0.478 0.025 18.957      0    0.438    0.538"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_complete.html","id":"arguments","dir":"Articles","previous_headings":"Benchmark","what":"Arguments","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"benchmark_complete_01 <- microbenchmark(   MC = {     fit <- sem(       data = df,       model = model     )     MC(       fit,       R = R,       decomposition = \"chol\",       pd = FALSE     )   },   NB = sem(     data = df,     model = model,     se = \"bootstrap\",     bootstrap = B   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_complete.html","id":"summary-of-benchmark-results","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"summary(benchmark_complete_01, unit = \"ms\") #>   expr         min          lq        mean      median          uq        max #> 1   MC    82.06245    82.60348    87.95024    86.48915    91.15124   101.8874 #> 2   NB 14307.78281 14361.87012 14515.04477 14542.46399 14629.29084 14734.3331 #>   neval #> 1    10 #> 2    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_complete.html","id":"summary-of-benchmark-results-relative-to-the-faster-method","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"summary(benchmark_complete_01, unit = \"relative\") #>   expr      min       lq    mean   median       uq      max neval #> 1   MC   1.0000   1.0000   1.000   1.0000   1.0000   1.0000    10 #> 2   NB 174.3524 173.8652 165.037 168.1421 160.4947 144.6139    10"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_complete.html","id":"benchmark---monte-carlo-method-with-precalculated-estimates","dir":"Articles","previous_headings":"","what":"Benchmark - Monte Carlo Method with Precalculated Estimates","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"fit <- sem(   data = df,   model = model ) benchmark_complete_02 <- microbenchmark(   MC = MC(     fit,     R = R,     decomposition = \"chol\",     pd = FALSE   ),   NB = sem(     data = df,     model = model,     se = \"bootstrap\",     bootstrap = B   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_complete.html","id":"summary-of-benchmark-results-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"summary(benchmark_complete_02, unit = \"ms\") #>   expr         min          lq        mean      median          uq         max #> 1   MC    17.31807    22.57695    24.75557    24.91911    27.97839    28.53754 #> 2   NB 14214.18844 14349.72874 14496.25847 14436.42065 14667.06037 14822.97099 #>   neval #> 1    10 #> 2    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_complete.html","id":"summary-of-benchmark-results-relative-to-the-faster-method-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"summary(benchmark_complete_02, unit = \"relative\") #>   expr     min       lq     mean   median       uq      max neval #> 1   MC   1.000   1.0000   1.0000   1.0000   1.0000   1.0000    10 #> 2   NB 820.772 635.5921 585.5757 579.3314 524.2281 519.4201    10"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_fiml.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"n <- 1000 a <- 0.50 b <- 0.50 cp <- 0.25 s2_em <- 1 - a^2 s2_ey <- 1 - cp^2 - a^2 * b^2 - b^2 * s2_em - 2 * cp * a * b em <- rnorm(n = n, mean = 0, sd = sqrt(s2_em)) ey <- rnorm(n = n, mean = 0, sd = sqrt(s2_ey)) X <- rnorm(n = n) M <- a * X + em Y <- cp * X + b * M + ey df <- data.frame(X, M, Y)  # Create data set with missing values.  miss <- sample(1:dim(df)[1], 300) df[miss[1:100], \"X\"] <- NA df[miss[101:200], \"M\"] <- NA df[miss[201:300], \"Y\"] <- NA"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_fiml.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_fiml.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"can now fit model using sem() function lavaan. using missing = \"fiml\" handle missing data lavaan.","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_fiml.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"fit lavaan object can passed MC() function semmcci generate Monte Carlo confidence intervals.","code":"MC(fit, R = 100L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>             est     se   R   2.5%  97.5% #> cp       0.2419 0.0311 100 0.1869 0.2992 #> b        0.5166 0.0302 100 0.4568 0.5777 #> a        0.4989 0.0348 100 0.4395 0.5745 #> X~~X     1.0951 0.0630 100 0.9781 1.2305 #> Y~~Y     0.5796 0.0292 100 0.5165 0.6298 #> M~~M     0.8045 0.0463 100 0.6929 0.8792 #> indirect 0.2577 0.0237 100 0.2178 0.3078 #> direct   0.2419 0.0311 100 0.1869 0.2992 #> total    0.4996 0.0324 100 0.4343 0.5597"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_fiml.html","id":"nonparametric-bootstrap-confidence-intervals","dir":"Articles","previous_headings":"","what":"Nonparametric Bootstrap Confidence Intervals","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"Nonparametric bootstrap confidence intervals can generated lavaan using following.","code":"parameterEstimates(   sem(     data = df,     model = model,     missing = \"fiml\",     se = \"bootstrap\",     bootstrap = 100L   ) ) #>         lhs op      rhs    label    est    se      z pvalue ci.lower ci.upper #> 1         Y  ~        X       cp  0.234 0.029  8.153  0.000    0.161    0.284 #> 2         Y  ~        M        b  0.511 0.032 16.187  0.000    0.450    0.586 #> 3         M  ~        X        a  0.481 0.028 16.939  0.000    0.419    0.535 #> 4         X ~~        X           1.059 0.057 18.536  0.000    0.937    1.174 #> 5         Y ~~        Y           0.554 0.027 20.780  0.000    0.493    0.610 #> 6         M ~~        M           0.756 0.035 21.478  0.000    0.687    0.825 #> 7         Y ~1                   -0.013 0.024 -0.531  0.596   -0.059    0.034 #> 8         M ~1                   -0.022 0.030 -0.754  0.451   -0.085    0.041 #> 9         X ~1                    0.002 0.035  0.071  0.944   -0.079    0.083 #> 10 indirect :=      a*b indirect  0.246 0.021 11.819  0.000    0.208    0.290 #> 11   direct :=       cp   direct  0.234 0.029  8.112  0.000    0.161    0.284 #> 12    total := cp+(a*b)    total  0.479 0.028 16.940  0.000    0.423    0.537"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_fiml.html","id":"arguments","dir":"Articles","previous_headings":"Benchmark","what":"Arguments","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"benchmark_fiml_01 <- microbenchmark(   MC = {     fit <- sem(       data = df,       model = model,       missing = \"fiml\"     )     MC(       fit,       R = R,       decomposition = \"chol\",       pd = FALSE     )   },   NB = sem(     data = df,     model = model,     missing = \"fiml\",     se = \"bootstrap\",     bootstrap = B   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_fiml.html","id":"summary-of-benchmark-results","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"summary(benchmark_fiml_01, unit = \"ms\") #>   expr        min         lq       mean    median         uq        max neval #> 1   MC   114.9944   126.3124   130.2154   127.132   138.9047   142.5911    10 #> 2   NB 31342.1959 31580.0550 31625.6076 31604.095 31722.2621 31854.9536    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_fiml.html","id":"summary-of-benchmark-results-relative-to-the-faster-method","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"summary(benchmark_fiml_01, unit = \"relative\") #>   expr     min       lq     mean   median       uq      max neval #> 1   MC   1.000   1.0000   1.0000   1.0000   1.0000   1.0000    10 #> 2   NB 272.554 250.0155 242.8715 248.5928 228.3743 223.4008    10"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_fiml.html","id":"benchmark---monte-carlo-method-with-precalculated-estimates","dir":"Articles","previous_headings":"","what":"Benchmark - Monte Carlo Method with Precalculated Estimates","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"fit <- sem(   data = df,   model = model,   missing = \"fiml\" ) benchmark_fiml_02 <- microbenchmark(   MC = MC(     fit,     R = R,     decomposition = \"chol\",     pd = FALSE   ),   NB = sem(     data = df,     model = model,     missing = \"fiml\",     se = \"bootstrap\",     bootstrap = B   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_fiml.html","id":"summary-of-benchmark-results-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"summary(benchmark_fiml_02, unit = \"ms\") #>   expr         min          lq        mean      median          uq         max #> 1   MC    23.05337    23.50695    26.17139    25.43854    28.60236    31.77366 #> 2   NB 31248.35639 31487.15863 31910.39247 31972.93451 32304.09779 32478.00963 #>   neval #> 1    10 #> 2    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_fiml.html","id":"summary-of-benchmark-results-relative-to-the-faster-method-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"summary(benchmark_fiml_02, unit = \"relative\") #>   expr      min       lq     mean  median       uq      max neval #> 1   MC    1.000    1.000    1.000    1.00    1.000    1.000    10 #> 2   NB 1355.479 1339.483 1219.285 1256.87 1129.421 1022.168    10"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_mi.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"n <- 1000 a <- 0.50 b <- 0.50 cp <- 0.25 s2_em <- 1 - a^2 s2_ey <- 1 - cp^2 - a^2 * b^2 - b^2 * s2_em - 2 * cp * a * b em <- rnorm(n = n, mean = 0, sd = sqrt(s2_em)) ey <- rnorm(n = n, mean = 0, sd = sqrt(s2_ey)) X <- rnorm(n = n) M <- a * X + em Y <- cp * X + b * M + ey df <- data.frame(X, M, Y)  # Create data set with missing values.  miss <- sample(1:dim(df)[1], 300) df[miss[1:100], \"X\"] <- NA df[miss[101:200], \"M\"] <- NA df[miss[201:300], \"Y\"] <- NA"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_mi.html","id":"multiple-imputation","dir":"Articles","previous_headings":"","what":"Multiple Imputation","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"Perform appropriate multiple imputation approach deal missing values. example, impute multivariate missing data normal model.","code":"mi <- amelia(   x = df,   m = 5L,   p2s = 0 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_mi.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_mi.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"can now fit model using sem() function lavaan. need deal missing values stage.","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_mi.html","id":"monte-carlo-confidence-intervals-multiple-imputation","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals (Multiple Imputation)","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"fit lavaan object mi mids object can passed MCMI() function semmcci generate Monte Carlo confidence intervals using multiple imputation described Pesigan Cheung (2023).","code":"MCMI(fit, R = 100L, alpha = 0.05, mi = mi) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>             est     se   R   2.5%  97.5% #> cp       0.2274 0.0341 100 0.1734 0.2981 #> b        0.5192 0.0359 100 0.4545 0.5807 #> a        0.4790 0.0309 100 0.4277 0.5382 #> X~~X     1.0613 0.0451 100 0.9729 1.1421 #> Y~~Y     0.5439 0.0298 100 0.4850 0.5973 #> M~~M     0.7642 0.0425 100 0.6863 0.8505 #> indirect 0.2486 0.0206 100 0.2075 0.2878 #> direct   0.2274 0.0341 100 0.1734 0.2981 #> total    0.4760 0.0298 100 0.4262 0.5284"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_mi.html","id":"nonparametric-bootstrap-confidence-intervals-multiple-imputation","dir":"Articles","previous_headings":"","what":"Nonparametric Bootstrap Confidence Intervals (Multiple Imputation)","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"Nonparametric bootstrap confidence intervals can generated bmemLavaan using following.","code":"summary(   bmemLavaan::bmem(data = df, model = model, method = \"mi\", boot = 100L, m = 5L) ) #>  #> Estimate method:                          multiple imputation #> Sample size:                              1000       #> Number of request bootstrap draws:        100        #> Number of successful bootstrap draws:     100        #> Type of confidence interval:              perc #>  #> Values of statistics: #>  #>                      Value      SE      2.5%     97.5% #>   chisq               0.000    0.000    0.000    0.000    #>   GFI                 1.000    0.000    1.000    1.000    #>   AGFI                1.000    0.000    1.000    1.000    #>   RMSEA               0.000    0.000    0.000    0.000    #>   NFI                 1.000    0.000    1.000    1.000    #>   NNFI                1.000    0.000    1.000    1.000    #>   CFI                 1.000    0.000    1.000    1.000    #>   BIC                 7741.252 84.465   7592.751 7901.327 #>   SRMR                0.000    0.000    0.000    0.000    #>  #> Estimation of parameters: #>  #>                      Estimate   SE      2.5%     97.5% #> Regressions: #>   Y ~ #>     X        (cp)     0.239    0.027    0.173    0.283 #>     M         (b)     0.508    0.029    0.447    0.558 #>   M ~ #>     X         (a)     0.481    0.030    0.436    0.552 #>  #> Variances: #>     X                 1.053    0.049    0.980    1.163 #>     Y                 0.552    0.026    0.513    0.606 #>     M                 0.762    0.038    0.678    0.838 #>  #>  #>  #> Defined parameters: #>     a*b    (indr)     0.244    0.019    0.213    0.290 #>     cp     (drct)     0.239    0.027    0.173    0.283 #>     cp+(*) (totl)     0.484    0.028    0.426    0.540"},{"path":[]},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_mi.html","id":"benchmark-1","dir":"Articles","previous_headings":"","what":"Benchmark","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"benchmark_mi_01 <- microbenchmark(   MC = {     fit <- sem(       data = df,       model = model     )     mi <- Amelia::amelia(       x = df,       m = m,       p2s = 0     )     MCMI(       fit,       R = R,       decomposition = \"chol\",       pd = FALSE,       mi = mi     )   },   NB = bmemLavaan::bmem(     data = df,     model = model,     method = \"mi\",     boot = B,     m = m   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_mi.html","id":"summary-of-benchmark-results","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"summary(benchmark_mi_01, unit = \"ms\") #>   expr        min         lq       mean     median         uq        max neval #> 1   MC   412.5152   414.3642   432.0241   429.3962   441.9526   474.7375    10 #> 2   NB 41393.1700 41522.6276 41922.6956 41781.6448 42497.0267 42506.0043    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_mi.html","id":"summary-of-benchmark-results-relative-to-the-faster-method","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"summary(benchmark_mi_01, unit = \"relative\") #>   expr      min      lq     mean   median       uq      max neval #> 1   MC   1.0000   1.000  1.00000  1.00000  1.00000  1.00000    10 #> 2   NB 100.3434 100.208 97.03786 97.30324 96.15744 89.53581    10"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_mi.html","id":"benchmark---monte-carlo-method-with-precalculated-estimates-and-multiple-imputation","dir":"Articles","previous_headings":"","what":"Benchmark - Monte Carlo Method with Precalculated Estimates and Multiple Imputation","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"fit <- sem(   data = df,   model = model ) mi <- Amelia::amelia(   x = df,   m = m,   p2s = 0 ) benchmark_mi_02 <- microbenchmark(   MC = MCMI(     fit,     R = R,     decomposition = \"chol\",     pd = FALSE,     mi = mi   ),   NB = bmemLavaan::bmem(     data = df,     model = model,     method = \"mi\",     boot = B,     m = m   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_mi.html","id":"summary-of-benchmark-results-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates and Multiple Imputation","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"summary(benchmark_mi_02, unit = \"ms\") #>   expr        min         lq       mean    median         uq        max neval #> 1   MC   270.7928   282.9387   298.9094   291.502   305.9309   355.1388    10 #> 2   NB 41433.0751 41706.3702 42667.1863 43070.163 43336.0537 43568.0627    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark_mi.html","id":"summary-of-benchmark-results-relative-to-the-faster-method-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates and Multiple Imputation","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"summary(benchmark_mi_02, unit = \"relative\") #>   expr      min       lq     mean   median       uq     max neval #> 1   MC   1.0000   1.0000   1.0000   1.0000   1.0000   1.000    10 #> 2   NB 153.0066 147.4042 142.7429 147.7525 141.6531 122.679    10"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/example_1_simple.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Example 1: The Simple Mediation Model","text":"","code":"summary(df) #>        X                   M                   Y            #>  Min.   :-3.199558   Min.   :-3.371276   Min.   :-3.61432   #>  1st Qu.:-0.636035   1st Qu.:-0.692640   1st Qu.:-0.66146   #>  Median : 0.011377   Median : 0.007125   Median :-0.04726   #>  Mean   :-0.003207   Mean   :-0.023968   Mean   :-0.01677   #>  3rd Qu.: 0.651951   3rd Qu.: 0.647363   3rd Qu.: 0.62640   #>  Max.   : 3.470910   Max.   : 2.963216   Max.   : 3.09950 colMeans(df) #>            X            M            Y  #> -0.003206987 -0.023968103 -0.016774294 var(df) #>           X         M         Y #> X 1.0600162 0.5108780 0.5069458 #> M 0.5108780 0.9996606 0.6272104 #> Y 0.5069458 0.6272104 0.9837255"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_1_simple.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 1: The Simple Mediation Model","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example_1_simple.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 1: The Simple Mediation Model","text":"can now fit model using sem() function lavaan.","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_1_simple.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Example 1: The Simple Mediation Model","text":"fit lavaan object can passed MC() function generate Monte Carlo confidence intervals.","code":"MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2333 0.0259 20000 0.1833 0.2839 #> b        0.5082 0.0270 20000 0.4548 0.5605 #> a        0.4820 0.0266 20000 0.4295 0.5338 #> Y~~Y     0.5462 0.0245 20000 0.4977 0.5939 #> M~~M     0.7527 0.0336 20000 0.6865 0.8192 #> X~~X     1.0590 0.0000 20000 1.0590 1.0590 #> indirect 0.2449 0.0187 20000 0.2091 0.2822 #> direct   0.2333 0.0259 20000 0.1833 0.2839 #> total    0.4782 0.0262 20000 0.4272 0.5296"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_1_simple.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"Example 1: The Simple Mediation Model","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function. Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(data = df, model = model, fixed.x = FALSE) unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2422 0.0268 20000 0.1885 0.2940 #> b        0.5123 0.0246 20000 0.4634 0.5598 #> a        0.4963 0.0239 20000 0.4483 0.5425 #> Y~~Y     0.5558 0.0233 20000 0.5093 0.6014 #> M~~M     0.7537 0.0237 20000 0.7057 0.7990 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> indirect 0.2542 0.0175 20000 0.2203 0.2887 #> direct   0.2422 0.0268 20000 0.1885 0.2940 #> total    0.4964 0.0238 20000 0.4488 0.5420"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_1_simple.html","id":"standardized-monte-carlo-confidence-intervals---an-alternative-approach","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals - An Alternative Approach","title":"Example 1: The Simple Mediation Model","text":"example, confidence intervals standardized indirect effect generated specifying standardized indirect effect derived parameter using := operator. standardized indirect effect simple mediation model involves paths \\(\\) \\(b\\), standard deviations \\(X\\) \\(Y\\). given \\[\\begin{equation}   b   \\frac{s_X}{s_Y} \\end{equation}\\] \\[\\begin{equation}   s_X   =   \\sqrt{     s_{X}^{2}   } \\end{equation}\\] \\[\\begin{equation}   s_Y   =   \\sqrt{     c^{\\prime 2} s_{X}^{2}     + ^2 b^2 s_{X}^{2}     + b^2 s_{e_{M}}^{2}     + 2 c^{\\prime} b s_{X}^{2}     + s_{e_{Y}}^{2}   } \\end{equation}\\] \\(s_{e_{Y}}^{2}\\) \\(s_{e_{M}}^{2}\\) residual variances regression equations. standardized indirect effect can defined using := operator named parameters model. row indirect_std corresponds confidence intervals standardized indirect effect.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ s2_X * X   M ~~ s2_em * M   Y ~~ s2_ey * Y   indirect_std := a * b * (     sqrt(s2_X) / sqrt(       (         cp^2 * s2_X + a^2 * b^2 * s2_X       ) + (         b^2 * s2_em       ) + (         2 * cp * b * a * s2_X       ) + s2_ey     )   ) \" fit <- sem(data = df, model = model, fixed.x = FALSE) MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>                 est     se     R   2.5%  97.5% #> cp           0.2333 0.0263 20000 0.1815 0.2849 #> b            0.5082 0.0270 20000 0.4553 0.5618 #> a            0.4820 0.0269 20000 0.4292 0.5348 #> s2_X         1.0590 0.0476 20000 0.9656 1.1525 #> s2_em        0.7527 0.0338 20000 0.6861 0.8188 #> s2_ey        0.5462 0.0244 20000 0.4982 0.5932 #> indirect_std 0.2542 0.0175 20000 0.2202 0.2890"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_2_serial.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Example 2: The Serial Mediation Model","text":"","code":"summary(df) #>        X                  M1                 M2                 Y            #>  Min.   :-3.37174   Min.   :-3.22690   Min.   :-4.33590   Min.   :-4.29019   #>  1st Qu.:-0.67546   1st Qu.:-0.73709   1st Qu.:-0.82188   1st Qu.:-0.86035   #>  Median :-0.01313   Median :-0.01651   Median :-0.03903   Median :-0.02704   #>  Mean   :-0.02582   Mean   :-0.01823   Mean   :-0.01620   Mean   :-0.03338   #>  3rd Qu.: 0.66400   3rd Qu.: 0.72825   3rd Qu.: 0.80016   3rd Qu.: 0.81721   #>  Max.   : 3.49530   Max.   : 3.69001   Max.   : 3.65147   Max.   : 4.05239 colMeans(df) #>           X          M1          M2           Y  #> -0.02582443 -0.01823021 -0.01619576 -0.03337865 var(df) #>            X        M1        M2         Y #> X  1.0050488 0.5123920 0.3848638 0.3333458 #> M1 0.5123920 1.2334461 0.6645408 0.5108946 #> M2 0.3848638 0.6645408 1.4321822 0.8012638 #> Y  0.3333458 0.5108946 0.8012638 1.4504417"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_2_serial.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 2: The Serial Mediation Model","text":"can define several indirect effects example: \\(X \\rightarrow M1 \\rightarrow M2 \\rightarrow Y\\) \\(X \\rightarrow M1 \\rightarrow M2\\) \\(X \\rightarrow M1 \\rightarrow Y\\) \\(M1 \\rightarrow M2 \\rightarrow Y\\) indirect effects defined using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b1 * M1 + b2 * M2   M2 ~ a2 * X + k * M1   M1 ~ a1 * X   # X -> M1 -> M2 -> Y   a1kb2 := a1 * k * b2   # X -> M1 -> M2   a1k := a1 * k   # X -> M1 -> Y   a2b2 := a2 * b2   # M1 -> M2 -> Y   kb2 := k * b2 \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example_2_serial.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 2: The Serial Mediation Model","text":"","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_2_serial.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Example 2: The Serial Mediation Model","text":"fit lavaan object can passed MC() function semmcci generate Monte Carlo confidence intervals.","code":"MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>           est     se     R   2.5%  97.5% #> cp     0.0868 0.0354 20000 0.0175 0.1568 #> b1     0.1190 0.0349 20000 0.0500 0.1867 #> b2     0.4809 0.0303 20000 0.4213 0.5399 #> a2     0.1373 0.0364 20000 0.0673 0.2090 #> k      0.4817 0.0331 20000 0.4170 0.5470 #> a1     0.5098 0.0309 20000 0.4479 0.5704 #> Y~~Y   0.9744 0.0437 20000 0.8897 1.0607 #> M2~~M2 1.0581 0.0472 20000 0.9655 1.1516 #> M1~~M1 0.9712 0.0434 20000 0.8843 1.0561 #> X~~X   1.0040 0.0000 20000 1.0040 1.0040 #> a1kb2  0.1181 0.0132 20000 0.0936 0.1454 #> a1k    0.2456 0.0226 20000 0.2022 0.2912 #> a2b2   0.0660 0.0180 20000 0.0319 0.1023 #> kb2    0.2317 0.0216 20000 0.1906 0.2754"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_2_serial.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"Example 2: The Serial Mediation Model","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function. Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(data = df, model = model, fixed.x = FALSE) unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>           est     se     R   2.5%  97.5% #> cp     0.0723 0.0295 20000 0.0141 0.1296 #> b1     0.1098 0.0320 20000 0.0472 0.1725 #> b2     0.4779 0.0275 20000 0.4239 0.5317 #> a2     0.1151 0.0307 20000 0.0551 0.1752 #> k      0.4470 0.0283 20000 0.3908 0.5023 #> a1     0.4602 0.0250 20000 0.4103 0.5085 #> Y~~Y   0.6725 0.0244 20000 0.6223 0.7181 #> M2~~M2 0.7396 0.0241 20000 0.6900 0.7849 #> M1~~M1 0.7882 0.0230 20000 0.7415 0.8316 #> X~~X   1.0000 0.0000 20000 1.0000 1.0000 #> a1kb2  0.0983 0.0104 20000 0.0788 0.1196 #> a1k    0.2057 0.0177 20000 0.1717 0.2408 #> a2b2   0.0550 0.0150 20000 0.0260 0.0846 #> kb2    0.2136 0.0189 20000 0.1779 0.2514"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_3_latent.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 3: The Latent Variable Simple Mediation Model","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   X =~ x1 + x2 + x3   M =~ x4 + x5 + x6   Y =~ x7 + x8 + x9   M ~ a * X   Y ~ b * M   indirect := a * b \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example_3_latent.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 3: The Latent Variable Simple Mediation Model","text":"can now fit model using sem() function lavaan using Holzinger Swineford (1939) data set.","code":"df <- lavaan::HolzingerSwineford1939 fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_3_latent.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Example 3: The Latent Variable Simple Mediation Model","text":"fit lavaan object can passed MC() function semmcci generate Monte Carlo confidence intervals.","code":"MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> X=~x1    1.0000 0.0000 20000 1.0000 1.0000 #> X=~x2    0.5554 0.1041 20000 0.3521 0.7591 #> X=~x3    0.7045 0.1169 20000 0.4744 0.9322 #> M=~x4    1.0000 0.0000 20000 1.0000 1.0000 #> M=~x5    1.1106 0.0654 20000 0.9839 1.2390 #> M=~x6    0.9268 0.0551 20000 0.8185 1.0356 #> Y=~x7    1.0000 0.0000 20000 1.0000 1.0000 #> Y=~x8    1.1482 0.1638 20000 0.8199 1.4633 #> Y=~x9    0.8854 0.1237 20000 0.6431 1.1245 #> a        0.5107 0.0962 20000 0.3235 0.6998 #> b        0.1884 0.0518 20000 0.0875 0.2902 #> x1~~x1   0.5320 0.1293 20000 0.2807 0.7868 #> x2~~x2   1.1269 0.1024 20000 0.9255 1.3270 #> x3~~x3   0.8647 0.0949 20000 0.6762 1.0473 #> x4~~x4   0.3714 0.0475 20000 0.2786 0.4643 #> x5~~x5   0.4519 0.0585 20000 0.3373 0.5667 #> x6~~x6   0.3551 0.0429 20000 0.2716 0.4410 #> x7~~x7   0.7309 0.0835 20000 0.5664 0.8945 #> x8~~x8   0.4257 0.0830 20000 0.2623 0.5874 #> x9~~x9   0.6605 0.0704 20000 0.5216 0.7973 #> X~~X     0.8264 0.1579 20000 0.5143 1.1316 #> M~~M     0.7638 0.0969 20000 0.5724 0.9553 #> Y~~Y     0.4175 0.0895 20000 0.2437 0.5944 #> indirect 0.0962 0.0318 20000 0.0398 0.1625"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_3_latent.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"Example 3: The Latent Variable Simple Mediation Model","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function.","code":"fit <- sem(data = df, model = model) unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> X=~x1    0.7800 0.0634 20000 0.6398 0.8890 #> X=~x2    0.4295 0.0617 20000 0.2951 0.5391 #> X=~x3    0.5672 0.0595 20000 0.4352 0.6687 #> M=~x4    0.8515 0.0231 20000 0.8019 0.8916 #> M=~x5    0.8531 0.0226 20000 0.8048 0.8939 #> M=~x6    0.8385 0.0238 20000 0.7877 0.8810 #> Y=~x7    0.6183 0.0553 20000 0.4951 0.7125 #> Y=~x8    0.7639 0.0558 20000 0.6386 0.8578 #> Y=~x9    0.5910 0.0550 20000 0.4734 0.6886 #> a        0.4691 0.0644 20000 0.3294 0.5812 #> b        0.2772 0.0696 20000 0.1398 0.4086 #> x1~~x1   0.3917 0.0970 20000 0.2096 0.5906 #> x2~~x2   0.8155 0.0517 20000 0.7094 0.9129 #> x3~~x3   0.6783 0.0657 20000 0.5528 0.8106 #> x4~~x4   0.2750 0.0391 20000 0.2050 0.3570 #> x5~~x5   0.2722 0.0384 20000 0.2009 0.3522 #> x6~~x6   0.2969 0.0397 20000 0.2238 0.3796 #> x7~~x7   0.6177 0.0668 20000 0.4923 0.7549 #> x8~~x8   0.4165 0.0835 20000 0.2643 0.5922 #> x9~~x9   0.6507 0.0641 20000 0.5258 0.7759 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> M~~M     0.7799 0.0589 20000 0.6622 0.8915 #> Y~~Y     0.9231 0.0389 20000 0.8330 0.9805 #> indirect 0.1301 0.0376 20000 0.0592 0.2063"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_4_1_simple_miss_fiml.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Example 4.1: The Simple Mediation Model with Missing Data (FIML)","text":"","code":"summary(df) #>        X                  M                  Y            #>  Min.   :-3.19956   Min.   :-3.37128   Min.   :-3.61432   #>  1st Qu.:-0.63268   1st Qu.:-0.70516   1st Qu.:-0.66921   #>  Median : 0.02823   Median : 0.02825   Median :-0.04833   #>  Mean   : 0.00269   Mean   :-0.01992   Mean   :-0.01538   #>  3rd Qu.: 0.65754   3rd Qu.: 0.65240   3rd Qu.: 0.65293   #>  Max.   : 3.47091   Max.   : 2.93497   Max.   : 3.09950   #>  NA's   :100        NA's   :100        NA's   :100"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_4_1_simple_miss_fiml.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 4.1: The Simple Mediation Model with Missing Data (FIML)","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example_4_1_simple_miss_fiml.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 4.1: The Simple Mediation Model with Missing Data (FIML)","text":"can now fit model using sem() function lavaan. using missing = \"fiml\" handle missing data lavaan.","code":"fit <- sem(data = df, model = model, missing = \"fiml\")"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_4_1_simple_miss_fiml.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Example 4.1: The Simple Mediation Model with Missing Data (FIML)","text":"fit lavaan object can passed MC() function semmcci generate Monte Carlo confidence intervals.","code":"MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>              est     se     R    2.5%  97.5% #> cp        0.2335 0.0293 20000  0.1753 0.2910 #> b         0.5113 0.0294 20000  0.4532 0.5687 #> a         0.4809 0.0286 20000  0.4244 0.5368 #> X~~X      1.0591 0.0498 20000  0.9612 1.1574 #> Y~~Y      0.5542 0.0269 20000  0.5029 0.6076 #> M~~M      0.7564 0.0362 20000  0.6852 0.8271 #> Y~1      -0.0127 0.0253 20000 -0.0625 0.0365 #> M~1      -0.0223 0.0291 20000 -0.0788 0.0345 #> X~1       0.0025 0.0336 20000 -0.0623 0.0696 #> indirect  0.2458 0.0202 20000  0.2076 0.2870 #> direct    0.2335 0.0293 20000  0.1753 0.2910 #> total     0.4794 0.0285 20000  0.4240 0.5352"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_4_1_simple_miss_fiml.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"Example 4.1: The Simple Mediation Model with Missing Data (FIML)","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function.","code":"fit <- sem(data = df, model = model, missing = \"fiml\") unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>              est     se     R   2.5%  97.5% #> cp        0.2409 0.0298 20000 0.1820 0.2991 #> b         0.5128 0.0268 20000 0.4585 0.5643 #> a         0.4946 0.0258 20000 0.4431 0.5443 #> X~~X      1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y      0.5568 0.0250 20000 0.5074 0.6057 #> M~~M      0.7554 0.0255 20000 0.7038 0.8036 #> indirect -0.0127 0.0188 20000 0.2167 0.2906 #> direct   -0.0222 0.0298 20000 0.1820 0.2991 #> total     0.0024 0.0258 20000 0.4420 0.5433"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_4_2_simple_miss_mi.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"","code":"summary(df) #>        X                  M                  Y            #>  Min.   :-3.19956   Min.   :-3.37128   Min.   :-3.61432   #>  1st Qu.:-0.63268   1st Qu.:-0.70516   1st Qu.:-0.66921   #>  Median : 0.02823   Median : 0.02825   Median :-0.04833   #>  Mean   : 0.00269   Mean   :-0.01992   Mean   :-0.01538   #>  3rd Qu.: 0.65754   3rd Qu.: 0.65240   3rd Qu.: 0.65293   #>  Max.   : 3.47091   Max.   : 2.93497   Max.   : 3.09950   #>  NA's   :100        NA's   :100        NA's   :100"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_4_2_simple_miss_mi.html","id":"multiple-imputation","dir":"Articles","previous_headings":"","what":"Multiple Imputation","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"Perform appropriate multiple imputation approach deal missing values. example, impute multivariate missing data normal model.","code":"mi <- mice::mice(   df,   method = \"norm\",   m = 100,   print = FALSE,   seed = 42 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_4_2_simple_miss_mi.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example_4_2_simple_miss_mi.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"can now fit model using sem() function lavaan. need deal missing values stage.","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_4_2_simple_miss_mi.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"fit lavaan object mi mids object can passed MCMI() function semmcci generate Monte Carlo confidence intervals using multiple imputation described Pesigan Cheung (2023).","code":"MCMI(fit, mi = mi, R = 20000L, alpha = 0.05, seed = 42) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>             est     se     R   2.5%  97.5% #> cp       0.2328 0.0299 20000 0.1741 0.2917 #> b        0.5113 0.0301 20000 0.4529 0.5701 #> a        0.4811 0.0287 20000 0.4241 0.5374 #> X~~X     1.0617 0.0495 20000 0.9650 1.1591 #> Y~~Y     0.5533 0.0272 20000 0.5005 0.6069 #> M~~M     0.7568 0.0361 20000 0.6856 0.8278 #> indirect 0.2460 0.0204 20000 0.2070 0.2864 #> direct   0.2328 0.0299 20000 0.1741 0.2917 #> total    0.4788 0.0285 20000 0.4236 0.5349"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_4_2_simple_miss_mi.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"Standardized Monte Carlo Confidence intervals can generated passing result MCMI() function MCStd() function.","code":"fit <- sem(data = df, model = model) unstd <- MCMI(fit, mi = mi, R = 20000L, alpha = 0.05, seed = 42) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2450 0.0307 20000 0.1802 0.3000 #> b        0.5189 0.0277 20000 0.4587 0.5663 #> a        0.5031 0.0260 20000 0.4429 0.5454 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y     0.5429 0.0250 20000 0.5071 0.6053 #> M~~M     0.7469 0.0258 20000 0.7026 0.8038 #> indirect 0.2610 0.0190 20000 0.2168 0.2915 #> direct   0.2450 0.0307 20000 0.1802 0.3000 #> total    0.5060 0.0261 20000 0.4416 0.5444"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_5_composite_reliability.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 5: Composite Reliability","text":"Assuming latent variable variance constrained one, omega total reliability coefficient given \\[\\begin{equation}   \\omega_{\\mathrm{total}}   =   \\frac{   \\left(   \\sum_{= 1}^{k}   \\lambda_{}   \\right)^2   }{   \\left(   \\sum_{= 1}^{k}   \\lambda_{}   \\right)^2   +   \\sum_{= 1}^{k}   \\theta_{\\varepsilon_{ii}}   } \\end{equation}\\] \\(\\lambda_{}\\) factor loading item \\(\\), \\(\\theta_{\\varepsilon_{ii}}\\) residual variance item \\(\\), \\(k\\) number items particular latent variable. model specification , variances latent variables eta1, eta2, eta3 constrained one, relevant parameters labeled particularly factor loadings error variances, omega total reliability coefficient per latent variable defined using := operator.","code":"model <- \"   # fix latent variable variances to 1   eta1 ~~ 1 * eta1   eta2 ~~ 1 * eta2   eta3 ~~ 1 * eta3   # factor loadings   eta1 =~ NA * x1 + l11 * x1 + l12 * x2 + l13 * x3   eta2 =~ NA * x4 + l24 * x4 + l25 * x5 + l26 * x6   eta3 =~ NA * x7 + l37 * x7 + l38 * x8 + l39 * x9   # error variances   x1 ~~ t1 * x1   x2 ~~ t2 * x2   x3 ~~ t3 * x3   x4 ~~ t4 * x4   x5 ~~ t5 * x5   x6 ~~ t6 * x6   x7 ~~ t7 * x7   x8 ~~ t8 * x8   x9 ~~ t9 * x9   # composite reliability   omega1 := (l11 + l12 + l13)^2 / ((l11 + l12 + l13)^2 + (t1 + t2 + t3))   omega2 := (l24 + l25 + l26)^2 / ((l24 + l25 + l26)^2 + (t4 + t5 + t6))   omega3 := (l37 + l38 + l39)^2 / ((l37 + l38 + l39)^2 + (t7 + t8 + t9)) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example_5_composite_reliability.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 5: Composite Reliability","text":"can now fit model using cfa() function lavaan.","code":"fit <- cfa(model = model, data = HolzingerSwineford1939)"},{"path":"https://github.com/jeksterslab/semmcci/articles/example_5_composite_reliability.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"Model Fitting","what":"Monte Carlo Confidence Intervals","title":"Example 5: Composite Reliability","text":"fit lavaan object can passed MC() function generate Monte Carlo confidence intervals.","code":"MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>               est     se     R   2.5%  97.5% #> eta1~~eta1 1.0000 0.0000 20000 1.0000 1.0000 #> eta2~~eta2 1.0000 0.0000 20000 1.0000 1.0000 #> eta3~~eta3 1.0000 0.0000 20000 1.0000 1.0000 #> l11        0.8996 0.0806 20000 0.7446 1.0598 #> l12        0.4979 0.0775 20000 0.3459 0.6498 #> l13        0.6562 0.0749 20000 0.5107 0.8030 #> l24        0.9897 0.0564 20000 0.8786 1.1001 #> l25        1.1016 0.0626 20000 0.9791 1.2244 #> l26        0.9166 0.0537 20000 0.8111 1.0221 #> l37        0.6195 0.0693 20000 0.4847 0.7569 #> l38        0.7309 0.0661 20000 0.6004 0.8575 #> l39        0.6700 0.0650 20000 0.5420 0.7965 #> t1         0.5491 0.1142 20000 0.3244 0.7695 #> t2         1.1338 0.1010 20000 0.9333 1.3298 #> t3         0.8443 0.0915 20000 0.6651 1.0219 #> t4         0.3712 0.0475 20000 0.2778 0.4639 #> t5         0.4463 0.0580 20000 0.3318 0.5582 #> t6         0.3562 0.0431 20000 0.2719 0.4410 #> t7         0.7994 0.0815 20000 0.6387 0.9590 #> t8         0.4877 0.0736 20000 0.3437 0.6324 #> t9         0.5661 0.0702 20000 0.4295 0.7014 #> eta1~~eta2 0.4585 0.0636 20000 0.3338 0.5809 #> eta1~~eta3 0.4705 0.0728 20000 0.3264 0.6131 #> eta2~~eta3 0.2830 0.0683 20000 0.1483 0.4165 #> omega1     0.6253 0.0368 20000 0.5487 0.6914 #> omega2     0.8852 0.0116 20000 0.8599 0.9055 #> omega3     0.6878 0.0311 20000 0.6214 0.7428"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_1_std_regression.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MCStd Function Use Case 1: Standardized Regression Coefficients","text":"example, use data Kwan Chan (2011) child’s reading ability (\\(Y_{1}\\)) regressed parental occupational status (\\(X_{1}\\)), parental educational level (\\(X_{2}\\)), child’s home possession (\\(X_{3}\\)) \\[\\begin{equation}     Y_{1}     =     \\alpha_{1}     +     \\gamma_{1}     X_{1}     +     \\gamma_{2}     X_{2}     +     \\gamma_{3}     X_{3}     +     \\zeta_{1} . \\end{equation}\\] Note \\(\\zeta_{1}\\) stochastic error term expected value zero finite variance \\(\\psi_{1}\\), \\(\\alpha_{1}\\) intercept, \\(\\gamma_{1}\\), \\(\\gamma_{2}\\), \\(\\gamma_{3}\\) regression coefficients. Three-Regressor Multiple Regression Model (Covariance Structure)","code":"covs #>           Y1       X1      X2      X3 #> Y1 6088.8281 271.1429 49.5848 20.0337 #> X1  271.1429 226.2577 29.9232  4.8812 #> X2   49.5848  29.9232  9.0692  1.0312 #> X3   20.0337   4.8812  1.0312  0.8371 nobs #> [1] 200"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_1_std_regression.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"MCStd Function Use Case 1: Standardized Regression Coefficients","text":"regress Y1 X1, X2, X3.","code":"model <- \"   Y1 ~ X1 + X2 + X3 \""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_1_std_regression.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"MCStd Function Use Case 1: Standardized Regression Coefficients","text":"can now fit model using sem() function lavaan mimic = \"eqs\" ensure compatibility results Kwan Chan (2011). Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(   model = model, mimic = \"eqs\", fixed.x = FALSE,   sample.cov = covs, sample.nobs = nobs )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_1_std_regression.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"MCStd Function Use Case 1: Standardized Regression Coefficients","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function.","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>           est     se     R    2.5%  97.5% #> Y1~X1  0.1207 0.0894 20000 -0.0583 0.2949 #> Y1~X2  0.0491 0.0902 20000 -0.1285 0.2249 #> Y1~X3  0.2194 0.0714 20000  0.0756 0.3569 #> Y1~~Y1 0.9002 0.0406 20000  0.8005 0.9572 #> X1~~X1 1.0000 0.0000 20000  1.0000 1.0000 #> X1~~X2 0.6606 0.0407 20000  0.5740 0.7342 #> X1~~X3 0.3547 0.0630 20000  0.2247 0.4728 #> X2~~X2 1.0000 0.0000 20000  1.0000 1.0000 #> X2~~X3 0.3743 0.0617 20000  0.2474 0.4895 #> X3~~X3 1.0000 0.0000 20000  1.0000 1.0000"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_1_std_regression.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"MCStd Function Use Case 1: Standardized Regression Coefficients","text":"Kwan, J. L. Y., & Chan, W. (2011). Comparing standardized coefficients structural equation modeling: model reparameterization approach. Behavior Research Methods, 43(3), 730-745. https://doi.org/10.3758/s13428-011-0088-6","code":""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_2_difference_regression_coefficients.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MCStd Function Use Case 2: Difference of Standardized Regression Coefficients","text":"example, use data Kwan Chan (2011) child’s reading ability (\\(Y_{1}\\)) regressed parental occupational status (\\(X_{1}\\)), parental educational level (\\(X_{2}\\)), child’s home possession (\\(X_{3}\\)) \\[\\begin{equation}     Y_{1}     =     \\alpha_{1}     +     \\gamma_{1}     X_{1}     +     \\gamma_{2}     X_{2}     +     \\gamma_{3}     X_{3}     +     \\zeta_{1} . \\end{equation}\\] Note \\(\\zeta_{1}\\) stochastic error term expected value zero finite variance \\(\\psi_{1}\\), \\(\\alpha_{1}\\) intercept, \\(\\gamma_{1}\\), \\(\\gamma_{2}\\), \\(\\gamma_{3}\\) regression coefficients. Three-Regressor Multiple Regression Model (Covariance Structure)","code":"#>           Y1       X1      X2      X3 #> Y1 6088.8281 271.1429 49.5848 20.0337 #> X1  271.1429 226.2577 29.9232  4.8812 #> X2   49.5848  29.9232  9.0692  1.0312 #> X3   20.0337   4.8812  1.0312  0.8371 covs #>           Y1       X1      X2      X3 #> Y1 6088.8281 271.1429 49.5848 20.0337 #> X1  271.1429 226.2577 29.9232  4.8812 #> X2   49.5848  29.9232  9.0692  1.0312 #> X3   20.0337   4.8812  1.0312  0.8371 nobs #> [1] 200"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_2_difference_regression_coefficients.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"MCStd Function Use Case 2: Difference of Standardized Regression Coefficients","text":"regress Y1 X1, X2, X3. label regression coefficients gamma1, gamma2, gamma3. specify difference coefficients using := operator.","code":"model <- \"   Y1 ~ gamma1 * X1 + gamma2 * X2 + gamma3 * X3   gamma12 := gamma1 - gamma2   gamma13 := gamma1 - gamma3   gamma23 := gamma2 - gamma3 \""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_2_difference_regression_coefficients.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"MCStd Function Use Case 2: Difference of Standardized Regression Coefficients","text":"can now fit model using sem() function lavaan mimic = \"eqs\" ensure compatibility results Kwan Chan (2011). Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(   model = model, mimic = \"eqs\", fixed.x = FALSE,   sample.cov = covs, sample.nobs = nobs )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_2_difference_regression_coefficients.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"MCStd Function Use Case 2: Difference of Standardized Regression Coefficients","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function.","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R    2.5%  97.5% #> gamma1   0.1207 0.0900 20000 -0.0584 0.2980 #> gamma2   0.0491 0.0906 20000 -0.1303 0.2259 #> gamma3   0.2194 0.0711 20000  0.0773 0.3552 #> Y1~~Y1   0.9002 0.0405 20000  0.8005 0.9576 #> X1~~X1   1.0000 0.0000 20000  1.0000 1.0000 #> X1~~X2   0.6606 0.0403 20000  0.5752 0.7345 #> X1~~X3   0.3547 0.0624 20000  0.2276 0.4733 #> X2~~X2   1.0000 0.0000 20000  1.0000 1.0000 #> X2~~X3   0.3743 0.0614 20000  0.2477 0.4902 #> X3~~X3   1.0000 0.0000 20000  1.0000 1.0000 #> gamma12  0.0716 0.1622 20000 -0.2462 0.3900 #> gamma13 -0.0987 0.1251 20000 -0.3438 0.1486 #> gamma23 -0.1703 0.1262 20000 -0.4146 0.0779"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_2_difference_regression_coefficients.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"MCStd Function Use Case 2: Difference of Standardized Regression Coefficients","text":"Kwan, J. L. Y., & Chan, W. (2011). Comparing standardized coefficients structural equation modeling: model reparameterization approach. Behavior Research Methods, 43(3), 730-745. https://doi.org/10.3758/s13428-011-0088-6","code":""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_3_rsqr.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MCStd Function Use Case 3: R-Squared and Adjusted R-Squared","text":"example, use data Kwan Chan (2011) child’s reading ability (\\(Y_{1}\\)) regressed home educational resources home educational resources (\\(Y_{2}\\)) regressed parental occupational status (\\(X_{1}\\)), parental educational level (\\(X_{2}\\)), child’s home possession (\\(X_{3}\\)) \\[\\begin{equation}     Y_{1}     =     \\alpha_{1}     +     \\beta_{1}     Y_{2}     +     \\zeta_{1} , \\end{equation}\\] \\[\\begin{equation}     Y_{2}     =     \\alpha_{2}     +     \\gamma_{1}     X_{1}     +     \\gamma_{2}     X_{2}     +     \\gamma_{3}     X_{3}     +     \\zeta_{2} . \\end{equation}\\] Note \\(\\zeta_{1}\\) \\(\\zeta_{2}\\) stochastic error terms expected value zero finite variance \\(\\psi_{1}\\) \\(\\psi_{2}\\), \\(\\alpha_{1}\\) \\(\\alpha_{2}\\) intercepts, \\(\\beta_{1}\\), \\(\\gamma_{1}\\), \\(\\gamma_{2}\\), \\(\\gamma_{3}\\) regression coefficients. Mediation Model (Covariance Structure)","code":"covs #>           Y1      Y2       X1      X2      X3 #> Y1 6088.8281 15.7012 271.1429 49.5848 20.0337 #> Y2   15.7012  0.7084   1.9878  1.0043  0.2993 #> X1  271.1429  1.9878 226.2577 29.9232  4.8812 #> X2   49.5848  1.0043  29.9232  9.0692  1.0312 #> X3   20.0337  0.2993   4.8812  1.0312  0.8371 nobs #> [1] 200"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_3_rsqr.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"MCStd Function Use Case 3: R-Squared and Adjusted R-Squared","text":"regress Y1 Y2 Y2 X1, X2, X3. label error variances psi1 psi2. \\(R^{2}\\) \\(\\bar{R}^{2}\\) defined using := operator lavaan model syntax using following equations \\[\\begin{equation}     R^{2}     =     1 - \\psi^{\\ast} \\end{equation}\\] \\[\\begin{equation}     \\bar{R}^{2}     =     1     -     \\left(     \\frac{n - 1}{n - p + 1}     \\right)     \\left(     1 - R^2     \\right) \\end{equation}\\] \\(\\psi^{\\ast}\\) standardized error variance, \\(n\\) sample size, \\(p\\) number regressor variables.","code":"model <- \"   Y1 ~ Y2   Y2 ~ X1 + X2 + X3   Y1 ~~ psi1 * Y1   Y2 ~~ psi2 * Y2   rsq1 := 1 - psi1   rsqbar1 := 1 - (     (200 - 1) / (200 - 1 + 1)   ) * (     1 - rsq1   )   rsq2 := 1 - psi2   rsqbar2 := 1 - (     (200 - 1) / (200 - 3 + 1)   ) * (     1 - rsq2   ) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_3_rsqr.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"MCStd Function Use Case 3: R-Squared and Adjusted R-Squared","text":"can now fit model using sem() function lavaan mimic = \"eqs\" ensure compatibility results Kwan Chan (2011). Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(   model = model, mimic = \"eqs\", fixed.x = FALSE,   sample.cov = covs, sample.nobs = nobs )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_3_rsqr.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"MCStd Function Use Case 3: R-Squared and Adjusted R-Squared","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function. Note: parameterization \\(R^{2}\\) \\(\\bar{R}^{2}\\) interpreted using output MCStd() function since input functions defined := require standardized estimates.","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R    2.5%   97.5% #> Y1~Y2    0.2391 0.0670 20000  0.1051  0.3681 #> Y2~X1   -0.2449 0.0813 20000 -0.4010 -0.0814 #> Y2~X2    0.4419 0.0792 20000  0.2827  0.5917 #> Y2~X3    0.3101 0.0638 20000  0.1816  0.4326 #> psi1     0.9428 0.0324 20000  0.8645  0.9889 #> psi2     0.7428 0.0530 20000  0.6288  0.8365 #> X1~~X1   1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2   0.6606 0.0405 20000  0.5762  0.7341 #> X1~~X3   0.3547 0.0622 20000  0.2275  0.4723 #> X2~~X2   1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3   0.3743 0.0612 20000  0.2487  0.4887 #> X3~~X3   1.0000 0.0000 20000  1.0000  1.0000 #> rsq1     0.0572 0.0324 20000  0.0111  0.1355 #> rsqbar1  0.0619 0.0322 20000  0.0160  0.1398 #> rsq2     0.2572 0.0530 20000  0.1635  0.3712 #> rsqbar2  0.2534 0.0533 20000  0.1593  0.3680"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_3_rsqr.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"MCStd Function Use Case 3: R-Squared and Adjusted R-Squared","text":"Kwan, J. L. Y., & Chan, W. (2011). Comparing standardized coefficients structural equation modeling: model reparameterization approach. Behavior Research Methods, 43(3), 730-745. https://doi.org/10.3758/s13428-011-0088-6","code":""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_4_difference_regression_coefficients_multigroup.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MCStd Function Use Case 4: Difference of Standardized Regression Coefficients in Multiple Groups","text":"example, use data Kwan Chan (2014) three groups (Hong Kong, Japan, Korea) child’s reading ability (\\(Y_{1}\\)) regressed parental occupational status (\\(X_{1}\\)), parental educational level (\\(X_{2}\\)), child’s home possession (\\(X_{3}\\)) \\[\\begin{equation}     Y_{1}     =     \\alpha_{1}     +     \\gamma_{1}     X_{1}     +     \\gamma_{2}     X_{2}     +     \\gamma_{3}     X_{3}     +     \\zeta_{1} . \\end{equation}\\] Note \\(\\zeta_{1}\\) stochastic error term expected value zero finite variance \\(\\psi_{1}\\), \\(\\alpha_{1}\\) intercept, \\(\\gamma_{1}\\), \\(\\gamma_{2}\\), \\(\\gamma_{3}\\) regression coefficients. Three-Regressor Multiple Regression Model (Covariance Structure) Covariance Matrix Hong Kong Covariance Matrix Japan Covariance Matrix Korea","code":"knitr::kable(   x = covs_hongkong, digits = 4,   caption = \"Covariance Matrix for Hong Kong\" ) nobs_hongkong #> [1] 4625 knitr::kable(   x = covs_japan, digits = 4,   caption = \"Covariance Matrix for Japan\" ) nobs_japan #> [1] 5943 knitr::kable(   x = covs_korea, digits = 4,   caption = \"Covariance Matrix for Korea\" ) nobs_korea #> [1] 5151"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_4_difference_regression_coefficients_multigroup.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"MCStd Function Use Case 4: Difference of Standardized Regression Coefficients in Multiple Groups","text":"regress Y1 X1, X2, X3. label regression coefficient \\(\\gamma_{1}\\) three groups gamma1.g1, gamma1.g2, gamma1.g3, \\(\\gamma_{2}\\) three groups gamma2.g1, gamma2.g2, gamma2.g3, \\(\\gamma_{3}\\) three groups gamma3.g1, gamma3.g2, gamma3.g3.","code":"model <- \"   Y1 ~ c(gamma1.g1, gamma1.g2, gamma1.g3) * X1   Y1 ~ c(gamma2.g1, gamma2.g2, gamma2.g3) * X2   Y1 ~ c(gamma3.g1, gamma3.g2, gamma3.g3) * X3   gamma1.g12 := gamma1.g1 - gamma1.g2   gamma1.g13 := gamma1.g1 - gamma1.g3   gamma1.g23 := gamma1.g2 - gamma1.g3   gamma2.g12 := gamma2.g1 - gamma2.g2   gamma2.g13 := gamma2.g1 - gamma2.g3   gamma2.g23 := gamma2.g2 - gamma2.g3   gamma3.g12 := gamma3.g1 - gamma3.g2   gamma3.g13 := gamma3.g1 - gamma3.g3   gamma3.g23 := gamma3.g2 - gamma3.g3 \""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_4_difference_regression_coefficients_multigroup.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"MCStd Function Use Case 4: Difference of Standardized Regression Coefficients in Multiple Groups","text":"can now fit model using sem() function lavaan mimic = \"eqs\" ensure compatibility results Kwan Chan (2011). Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(   model = model, mimic = \"eqs\", fixed.x = FALSE,   sample.cov = list(covs_hongkong, covs_japan, covs_korea),   sample.nobs = list(nobs_hongkong, nobs_japan, nobs_korea) )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_4_difference_regression_coefficients_multigroup.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"MCStd Function Use Case 4: Difference of Standardized Regression Coefficients in Multiple Groups","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function.","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>                est     se     R    2.5%   97.5% #> gamma1.g1   0.0568 0.0192 20000  0.0194  0.0946 #> gamma2.g1   0.1985 0.0186 20000  0.1618  0.2347 #> gamma3.g1   0.2500 0.0149 20000  0.2203  0.2787 #> Y1~~Y1      0.8215 0.0101 20000  0.8014  0.8408 #> X1~~X1      1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2      0.6917 0.0077 20000  0.6762  0.7067 #> X1~~X3      0.4702 0.0116 20000  0.4476  0.4930 #> X2~~X2      1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3      0.4471 0.0119 20000  0.4236  0.4701 #> X3~~X3      1.0000 0.0000 20000  1.0000  1.0000 #> gamma1.g2   0.1390 0.0163 20000  0.1070  0.1708 #> gamma2.g2   0.1792 0.0156 20000  0.1486  0.2099 #> gamma3.g2   0.1688 0.0138 20000  0.1418  0.1959 #> Y1~~Y1.g2   0.8371 0.0088 20000  0.8195  0.8537 #> X1~~X1.g2   1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2.g2   0.6525 0.0075 20000  0.6379  0.6671 #> X1~~X3.g2   0.5023 0.0097 20000  0.4830  0.5212 #> X2~~X2.g2   1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3.g2   0.4452 0.0104 20000  0.4244  0.4653 #> X3~~X3.g2   1.0000 0.0000 20000  1.0000  1.0000 #> gamma1.g3   0.0863 0.0169 20000  0.0527  0.1188 #> gamma2.g3   0.2557 0.0162 20000  0.2241  0.2876 #> gamma3.g3   0.2289 0.0138 20000  0.2021  0.2561 #> Y1~~Y1.g3   0.7761 0.0102 20000  0.7556  0.7957 #> X1~~X1.g3   1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2.g3   0.6580 0.0079 20000  0.6421  0.6732 #> X1~~X3.g3   0.4738 0.0108 20000  0.4524  0.4947 #> X2~~X2.g3   1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3.g3   0.4353 0.0113 20000  0.4131  0.4573 #> X3~~X3.g3   1.0000 0.0000 20000  1.0000  1.0000 #> gamma1.g12 -0.0821 0.0252 20000 -0.1315 -0.0324 #> gamma1.g13 -0.0294 0.0256 20000 -0.0794  0.0213 #> gamma1.g23  0.0527 0.0234 20000  0.0070  0.0990 #> gamma2.g12  0.0193 0.0242 20000 -0.0283  0.0667 #> gamma2.g13 -0.0572 0.0246 20000 -0.1054 -0.0088 #> gamma2.g23 -0.0765 0.0224 20000 -0.1209 -0.0326 #> gamma3.g12  0.0811 0.0203 20000  0.0406  0.1203 #> gamma3.g13  0.0211 0.0203 20000 -0.0192  0.0603 #> gamma3.g23 -0.0601 0.0196 20000 -0.0982 -0.0215"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_4_difference_regression_coefficients_multigroup.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"MCStd Function Use Case 4: Difference of Standardized Regression Coefficients in Multiple Groups","text":"Kwan, J. L. Y., & Chan, W. (2014). Comparing squared multiple correlation coefficients using structural equation modeling Structural Equation Modeling: Multidisciplinary Journal, 21(2), 225-238. https://doi.org/10.1080/10705511.2014.882673","code":""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_5_difference_rsq_multigroup.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MCStd Function Use Case 5: Difference of R-Squared in Multiple Groups","text":"example, use data Kwan Chan (2014) three groups (Hong Kong, Japan, Korea) child’s reading ability (\\(Y_{1}\\)) regressed parental occupational status (\\(X_{1}\\)), parental educational level (\\(X_{2}\\)), child’s home possession (\\(X_{3}\\)) \\[\\begin{equation}     Y_{1}     =     \\alpha_{1}     +     \\gamma_{1}     X_{1}     +     \\gamma_{2}     X_{2}     +     \\gamma_{3}     X_{3}     +     \\zeta_{1} . \\end{equation}\\] Note \\(\\zeta_{1}\\) stochastic error term expected value zero finite variance \\(\\psi_{1}\\), \\(\\alpha_{1}\\) intercept, \\(\\gamma_{1}\\), \\(\\gamma_{2}\\), \\(\\gamma_{3}\\) regression coefficients. Three-Regressor Multiple Regression Model (Covariance Structure) Covariance Matrix Hong Kong Covariance Matrix Japan Covariance Matrix Korea","code":"knitr::kable(   x = covs_hongkong, digits = 4,   caption = \"Covariance Matrix for Hong Kong\" ) nobs_hongkong #> [1] 4625 knitr::kable(   x = covs_japan, digits = 4,   caption = \"Covariance Matrix for Japan\" ) nobs_japan #> [1] 5943 nobs_korea <- 5151 covs_korea <- matrix(   data = c(     8187.6921, 31.6266, 37.3062, 30.9021,     31.6266, 0.9271, 0.6338, 0.4088,     37.3062, 0.6338, 1.0007, 0.3902,     30.9021, 0.4088, 0.3902, 0.8031   ),   nrow = 4 ) colnames(covs_korea) <- rownames(covs_korea) <- varnames knitr::kable(   x = covs_korea, digits = 4,   caption = \"Covariance Matrix for Korea\" )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_5_difference_rsq_multigroup.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"MCStd Function Use Case 5: Difference of R-Squared in Multiple Groups","text":"regress Y1 X1, X2, X3. label error variance \\(\\zeta_{1}\\) three groups psi1.g1, psi1.g2, psi1.g3. \\(R^{2}\\) defined using := operator lavaan model syntax using following equation \\[\\begin{equation}     R^{2}     =     1 - \\psi^{\\ast} \\end{equation}\\] \\(\\psi^{\\ast}\\) standardized error variance.","code":"model <- \"   Y1 ~ X1 + X2 + X3   Y1 ~~ c(psi1.g1, psi1.g2, psi1.g3) * Y1   rsq.g1 := 1 - psi1.g1   rsq.g2 := 1 - psi1.g2   rsq.g3 := 1 - psi1.g3   rsq.g12 := rsq.g1 - rsq.g2   rsq.g13 := rsq.g1 - rsq.g3   rsq.g23 := rsq.g2 - rsq.g3 \""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_5_difference_rsq_multigroup.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"MCStd Function Use Case 5: Difference of R-Squared in Multiple Groups","text":"can now fit model using sem() function lavaan mimic = \"eqs\" ensure compatibility results Kwan Chan (2011). Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(   model = model, mimic = \"eqs\", fixed.x = FALSE,   sample.cov = list(covs_hongkong, covs_japan, covs_korea),   sample.nobs = list(nobs_hongkong, nobs_japan, nobs_korea) )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_5_difference_rsq_multigroup.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"MCStd Function Use Case 5: Difference of R-Squared in Multiple Groups","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function. Note: parameterization \\(R^{2}\\) interpreted using output MCStd() function since input functions defined := require standardized estimates.","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>               est     se     R    2.5%   97.5% #> Y1~X1      0.0568 0.0191 20000  0.0192  0.0936 #> Y1~X2      0.1985 0.0184 20000  0.1628  0.2347 #> Y1~X3      0.2500 0.0151 20000  0.2206  0.2798 #> psi1.g1    0.8215 0.0102 20000  0.8011  0.8410 #> X1~~X1     1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2     0.6917 0.0077 20000  0.6764  0.7064 #> X1~~X3     0.4702 0.0114 20000  0.4477  0.4922 #> X2~~X2     1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3     0.4471 0.0118 20000  0.4237  0.4700 #> X3~~X3     1.0000 0.0000 20000  1.0000  1.0000 #> Y1~X1.g2   0.1390 0.0165 20000  0.1070  0.1713 #> Y1~X2.g2   0.1792 0.0158 20000  0.1477  0.2101 #> Y1~X3.g2   0.1688 0.0139 20000  0.1418  0.1960 #> psi1.g2    0.8371 0.0088 20000  0.8190  0.8536 #> X1~~X1.g2  1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2.g2  0.6525 0.0074 20000  0.6378  0.6670 #> X1~~X3.g2  0.5023 0.0097 20000  0.4832  0.5214 #> X2~~X2.g2  1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3.g2  0.4452 0.0103 20000  0.4249  0.4654 #> X3~~X3.g2  1.0000 0.0000 20000  1.0000  1.0000 #> Y1~X1.g3   0.0863 0.0170 20000  0.0522  0.1192 #> Y1~X2.g3   0.2557 0.0163 20000  0.2234  0.2876 #> Y1~X3.g3   0.2289 0.0140 20000  0.2014  0.2561 #> psi1.g3    0.7761 0.0103 20000  0.7554  0.7957 #> X1~~X1.g3  1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2.g3  0.6580 0.0078 20000  0.6422  0.6730 #> X1~~X3.g3  0.4738 0.0108 20000  0.4524  0.4948 #> X2~~X2.g3  1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3.g3  0.4353 0.0113 20000  0.4131  0.4570 #> X3~~X3.g3  1.0000 0.0000 20000  1.0000  1.0000 #> rsq.g1     0.1785 0.0102 20000  0.1590  0.1989 #> rsq.g2     0.1629 0.0088 20000  0.1464  0.1810 #> rsq.g3     0.2239 0.0103 20000  0.2043  0.2446 #> rsq.g12    0.0155 0.0135 20000 -0.0113  0.0419 #> rsq.g13   -0.0455 0.0144 20000 -0.0739 -0.0173 #> rsq.g23   -0.0610 0.0135 20000 -0.0871 -0.0344"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd_5_difference_rsq_multigroup.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"MCStd Function Use Case 5: Difference of R-Squared in Multiple Groups","text":"Kwan, J. L. Y., & Chan, W. (2014). Comparing squared multiple correlation coefficients using structural equation modeling Structural Equation Modeling: Multidisciplinary Journal, 21(2), 225-238. https://doi.org/10.1080/10705511.2014.882673","code":""},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"semmcci: Methods (MC)","text":"","code":"summary(df) #>        X                   M                   Y            #>  Min.   :-3.199558   Min.   :-3.371276   Min.   :-3.61432   #>  1st Qu.:-0.636035   1st Qu.:-0.692640   1st Qu.:-0.66146   #>  Median : 0.011377   Median : 0.007125   Median :-0.04726   #>  Mean   :-0.003207   Mean   :-0.023968   Mean   :-0.01677   #>  3rd Qu.: 0.651951   3rd Qu.: 0.647363   3rd Qu.: 0.62640   #>  Max.   : 3.470910   Max.   : 2.963216   Max.   : 3.09950 colMeans(df) #>            X            M            Y  #> -0.003206987 -0.023968103 -0.016774294 var(df) #>           X         M         Y #> X 1.0600162 0.5108780 0.5069458 #> M 0.5108780 0.9996606 0.6272104 #> Y 0.5069458 0.6272104 0.9837255"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"semmcci: Methods (MC)","text":"","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"semmcci: Methods (MC)","text":"","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"semmcci: Methods (MC)","text":"","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05)"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc.html","id":"print","dir":"Articles","previous_headings":"Methods","what":"print","title":"semmcci: Methods (MC)","text":"","code":"print(unstd) #> Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2333 0.0261 20000 0.1826 0.2853 #> b        0.5082 0.0265 20000 0.4558 0.5601 #> a        0.4820 0.0269 20000 0.4301 0.5357 #> Y~~Y     0.5462 0.0244 20000 0.4987 0.5935 #> M~~M     0.7527 0.0336 20000 0.6872 0.8185 #> X~~X     1.0590 0.0000 20000 1.0590 1.0590 #> indirect 0.2449 0.0187 20000 0.2093 0.2830 #> direct   0.2333 0.0261 20000 0.1826 0.2853 #> total    0.4782 0.0265 20000 0.4272 0.5305"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc.html","id":"summary","dir":"Articles","previous_headings":"Methods","what":"summary","title":"semmcci: Methods (MC)","text":"","code":"summary(unstd) #> Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2333 0.0261 20000 0.1826 0.2853 #> b        0.5082 0.0265 20000 0.4558 0.5601 #> a        0.4820 0.0269 20000 0.4301 0.5357 #> Y~~Y     0.5462 0.0244 20000 0.4987 0.5935 #> M~~M     0.7527 0.0336 20000 0.6872 0.8185 #> X~~X     1.0590 0.0000 20000 1.0590 1.0590 #> indirect 0.2449 0.0187 20000 0.2093 0.2830 #> direct   0.2333 0.0261 20000 0.1826 0.2853 #> total    0.4782 0.0265 20000 0.4272 0.5305"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc.html","id":"coef","dir":"Articles","previous_headings":"Methods","what":"coef","title":"semmcci: Methods (MC)","text":"","code":"coef(unstd) #>        cp         b         a      Y~~Y      M~~M      X~~X  indirect    direct  #> 0.2333230 0.5081833 0.4819530 0.5461589 0.7526879 1.0589562 0.2449205 0.2333230  #>     total  #> 0.4782435"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc.html","id":"vcov","dir":"Articles","previous_headings":"Methods","what":"vcov","title":"semmcci: Methods (MC)","text":"","code":"vcov(unstd) #>                     cp             b             a          Y~~Y          M~~M #> cp        6.802001e-04 -3.399327e-04 -3.063147e-06  3.643746e-06  7.788887e-06 #> b        -3.399327e-04  7.031740e-04  9.298737e-07 -3.209741e-06 -9.493020e-06 #> a        -3.063147e-06  9.298737e-07  7.226408e-04 -1.009015e-05  3.028331e-06 #> Y~~Y      3.643746e-06 -3.209741e-06 -1.009015e-05  5.948879e-04 -2.971987e-06 #> M~~M      7.788887e-06 -9.493020e-06  3.028331e-06 -2.971987e-06  1.131758e-03 #> X~~X      0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00 #> indirect -1.655156e-04  3.396396e-04  3.677379e-04 -6.664237e-06 -3.081979e-06 #> direct    6.802001e-04 -3.399327e-04 -3.063147e-06  3.643746e-06  7.788887e-06 #> total     5.146845e-04 -2.931747e-07  3.646748e-04 -3.020492e-06  4.706908e-06 #>          X~~X      indirect        direct         total #> cp          0 -1.655156e-04  6.802001e-04  5.146845e-04 #> b           0  3.396396e-04 -3.399327e-04 -2.931747e-07 #> a           0  3.677379e-04 -3.063147e-06  3.646748e-04 #> Y~~Y        0 -6.664237e-06  3.643746e-06 -3.020492e-06 #> M~~M        0 -3.081979e-06  7.788887e-06  4.706908e-06 #> X~~X        0  0.000000e+00  0.000000e+00  0.000000e+00 #> indirect    0  3.512366e-04 -1.655156e-04  1.857210e-04 #> direct      0 -1.655156e-04  6.802001e-04  5.146845e-04 #> total       0  1.857210e-04  5.146845e-04  7.004055e-04"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc.html","id":"confint","dir":"Articles","previous_headings":"Methods","what":"confint","title":"semmcci: Methods (MC)","text":"","code":"confint(unstd, level = 0.95) #>              2.5 %    97.5 % #> cp       0.1826008 0.2853134 #> b        0.4557904 0.5600590 #> a        0.4300990 0.5356970 #> Y~~Y     0.4986538 0.5934923 #> M~~M     0.6872228 0.8184559 #> X~~X     1.0589562 1.0589562 #> indirect 0.2092662 0.2829573 #> direct   0.1826008 0.2853134 #> total    0.4271517 0.5305349"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"semmcci: Methods (MC)","text":"","code":"fit <- sem(data = df, model = model, fixed.x = FALSE) unstd <- MC(fit, R = 20000L, alpha = 0.05) std <- MCStd(unstd, alpha = 0.05)"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc.html","id":"print-1","dir":"Articles","previous_headings":"Methods","what":"print","title":"semmcci: Methods (MC)","text":"","code":"print(std) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2422 0.0267 20000 0.1906 0.2948 #> b        0.5123 0.0245 20000 0.4631 0.5587 #> a        0.4963 0.0238 20000 0.4486 0.5415 #> Y~~Y     0.5558 0.0234 20000 0.5097 0.6011 #> M~~M     0.7537 0.0236 20000 0.7068 0.7987 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> indirect 0.2542 0.0175 20000 0.2202 0.2888 #> direct   0.2422 0.0267 20000 0.1906 0.2948 #> total    0.4964 0.0238 20000 0.4491 0.5421"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc.html","id":"summary-1","dir":"Articles","previous_headings":"Methods","what":"summary","title":"semmcci: Methods (MC)","text":"","code":"summary(std) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2422 0.0267 20000 0.1906 0.2948 #> b        0.5123 0.0245 20000 0.4631 0.5587 #> a        0.4963 0.0238 20000 0.4486 0.5415 #> Y~~Y     0.5558 0.0234 20000 0.5097 0.6011 #> M~~M     0.7537 0.0236 20000 0.7068 0.7987 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> indirect 0.2542 0.0175 20000 0.2202 0.2888 #> direct   0.2422 0.0267 20000 0.1906 0.2948 #> total    0.4964 0.0238 20000 0.4491 0.5421"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc.html","id":"coef-1","dir":"Articles","previous_headings":"Methods","what":"coef","title":"semmcci: Methods (MC)","text":"","code":"coef(std) #>        cp         b         a      Y~~Y      M~~M      X~~X  indirect    direct  #> 0.2422015 0.5122827 0.4962890 0.5557501 0.7536972 1.0000000 0.2542403 0.2422015  #>     total  #> 0.4964418"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc.html","id":"vcov-1","dir":"Articles","previous_headings":"Methods","what":"vcov","title":"semmcci: Methods (MC)","text":"","code":"vcov(std) #>                     cp             b             a          Y~~Y          M~~M #> cp        7.110567e-04 -4.614503e-04  5.299849e-06 -1.237739e-04 -5.314522e-06 #> b        -4.614503e-04  5.989546e-04  1.968028e-05 -3.030647e-04 -1.941798e-05 #> a         5.299849e-06  1.968028e-05  5.655204e-04 -1.698989e-04 -5.601226e-04 #> Y~~Y     -1.237739e-04 -3.030647e-04 -1.698989e-04  5.478585e-04  1.682591e-04 #> M~~M     -5.314522e-06 -1.941798e-05 -5.601226e-04  1.682591e-04  5.554209e-04 #> X~~X     -2.802492e-20  2.532196e-20 -1.535221e-21 -4.006103e-21  9.657683e-22 #> indirect -2.263875e-04  3.073751e-04  2.990486e-04 -2.372152e-04 -2.961738e-04 #> direct    7.110567e-04 -4.614503e-04  5.299849e-06 -1.237739e-04 -5.314522e-06 #> total     4.846692e-04 -1.540752e-04  3.043484e-04 -3.609891e-04 -3.014884e-04 #>                   X~~X      indirect        direct         total #> cp       -2.802492e-20 -2.263875e-04  7.110567e-04  4.846692e-04 #> b         2.532196e-20  3.073751e-04 -4.614503e-04 -1.540752e-04 #> a        -1.535221e-21  2.990486e-04  5.299849e-06  3.043484e-04 #> Y~~Y     -4.006103e-21 -2.372152e-04 -1.237739e-04 -3.609891e-04 #> M~~M      9.657683e-22 -2.961738e-04 -5.314522e-06 -3.014884e-04 #> X~~X      1.182180e-32  1.190542e-20 -2.802492e-20 -1.611949e-20 #> indirect  1.190542e-20  3.058825e-04 -2.263875e-04  7.949504e-05 #> direct   -2.802492e-20 -2.263875e-04  7.110567e-04  4.846692e-04 #> total    -1.611949e-20  7.949504e-05  4.846692e-04  5.641642e-04"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc.html","id":"confint-1","dir":"Articles","previous_headings":"Methods","what":"confint","title":"semmcci: Methods (MC)","text":"","code":"confint(std, level = 0.95) #>              2.5 %    97.5 % #> cp       0.1906173 0.2948233 #> b        0.4631238 0.5586629 #> a        0.4486186 0.5414554 #> Y~~Y     0.5096805 0.6011336 #> M~~M     0.7068261 0.7987413 #> X~~X     1.0000000 1.0000000 #> indirect 0.2201909 0.2887578 #> direct   0.1906173 0.2948233 #> total    0.4491151 0.5420578"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc_mi.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"semmcci: Methods (MI)","text":"","code":"summary(df) #>        X                  M                  Y            #>  Min.   :-3.19956   Min.   :-3.37128   Min.   :-3.61432   #>  1st Qu.:-0.63268   1st Qu.:-0.70516   1st Qu.:-0.66921   #>  Median : 0.02823   Median : 0.02825   Median :-0.04833   #>  Mean   : 0.00269   Mean   :-0.01992   Mean   :-0.01538   #>  3rd Qu.: 0.65754   3rd Qu.: 0.65240   3rd Qu.: 0.65293   #>  Max.   : 3.47091   Max.   : 2.93497   Max.   : 3.09950   #>  NA's   :100        NA's   :100        NA's   :100"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc_mi.html","id":"multiple-imputation","dir":"Articles","previous_headings":"","what":"Multiple Imputation","title":"semmcci: Methods (MI)","text":"Perform appropriate multiple imputation approach deal missing values. example, impute multivariate missing data normal model.","code":"mi <- mice::mice(   df,   method = \"norm\",   m = 100,   print = FALSE,   seed = 42 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc_mi.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"semmcci: Methods (MI)","text":"","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc_mi.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"semmcci: Methods (MI)","text":"","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc_mi.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"semmcci: Methods (MI)","text":"","code":"unstd <- MCMI(fit, mi = mi, R = 20000L, alpha = 0.05)"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc_mi.html","id":"print","dir":"Articles","previous_headings":"Methods","what":"print","title":"semmcci: Methods (MI)","text":"","code":"print(unstd) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>             est     se     R   2.5%  97.5% #> cp       0.2328 0.0297 20000 0.1748 0.2910 #> b        0.5113 0.0297 20000 0.4531 0.5688 #> a        0.4811 0.0287 20000 0.4245 0.5376 #> X~~X     1.0617 0.0491 20000 0.9654 1.1580 #> Y~~Y     0.5533 0.0269 20000 0.5003 0.6061 #> M~~M     0.7568 0.0363 20000 0.6854 0.8272 #> indirect 0.2460 0.0202 20000 0.2075 0.2869 #> direct   0.2328 0.0297 20000 0.1748 0.2910 #> total    0.4788 0.0284 20000 0.4226 0.5338"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc_mi.html","id":"summary","dir":"Articles","previous_headings":"Methods","what":"summary","title":"semmcci: Methods (MI)","text":"","code":"summary(unstd) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>             est     se     R   2.5%  97.5% #> cp       0.2328 0.0297 20000 0.1748 0.2910 #> b        0.5113 0.0297 20000 0.4531 0.5688 #> a        0.4811 0.0287 20000 0.4245 0.5376 #> X~~X     1.0617 0.0491 20000 0.9654 1.1580 #> Y~~Y     0.5533 0.0269 20000 0.5003 0.6061 #> M~~M     0.7568 0.0363 20000 0.6854 0.8272 #> indirect 0.2460 0.0202 20000 0.2075 0.2869 #> direct   0.2328 0.0297 20000 0.1748 0.2910 #> total    0.4788 0.0284 20000 0.4226 0.5338"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc_mi.html","id":"coef","dir":"Articles","previous_headings":"Methods","what":"coef","title":"semmcci: Methods (MI)","text":"","code":"coef(unstd) #>        cp         b         a      X~~X      Y~~Y      M~~M  indirect    direct  #> 0.2328242 0.5113353 0.4810732 1.0617011 0.5533052 0.7567771 0.2459664 0.2328242  #>     total  #> 0.4787907"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc_mi.html","id":"vcov","dir":"Articles","previous_headings":"Methods","what":"vcov","title":"semmcci: Methods (MI)","text":"","code":"vcov(unstd) #>                     cp             b             a          X~~X          Y~~Y #> cp        8.809160e-04 -4.664684e-04 -3.242412e-05  1.667052e-05 -1.200634e-05 #> b        -4.664684e-04  8.801712e-04 -2.407047e-05 -1.602451e-05 -2.396632e-05 #> a        -3.242412e-05 -2.407047e-05  8.222995e-04 -2.871276e-05  2.455730e-05 #> X~~X      1.667052e-05 -1.602451e-05 -2.871276e-05  2.408415e-03 -3.612250e-05 #> Y~~Y     -1.200634e-05 -2.396632e-05  2.455730e-05 -3.612250e-05  7.240336e-04 #> M~~M     -3.481851e-06  3.516241e-06 -6.503158e-05 -3.140138e-06 -1.819905e-05 #> indirect -2.410455e-04  4.111807e-04  4.089311e-04 -2.184522e-05  5.952891e-07 #> direct    8.809160e-04 -4.664684e-04 -3.242412e-05  1.667052e-05 -1.200634e-05 #> total     6.398705e-04 -5.528771e-05  3.765069e-04 -5.174701e-06 -1.141105e-05 #>                   M~~M      indirect        direct         total #> cp       -3.481851e-06 -2.410455e-04  8.809160e-04  6.398705e-04 #> b         3.516241e-06  4.111807e-04 -4.664684e-04 -5.528771e-05 #> a        -6.503158e-05  4.089311e-04 -3.242412e-05  3.765069e-04 #> X~~X     -3.140138e-06 -2.184522e-05  1.667052e-05 -5.174701e-06 #> Y~~Y     -1.819905e-05  5.952891e-07 -1.200634e-05 -1.141105e-05 #> M~~M      1.318914e-03 -3.133949e-05 -3.481851e-06 -3.482134e-05 #> indirect -3.133949e-05  4.077033e-04 -2.410455e-04  1.666577e-04 #> direct   -3.481851e-06 -2.410455e-04  8.809160e-04  6.398705e-04 #> total    -3.482134e-05  1.666577e-04  6.398705e-04  8.065282e-04"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc_mi.html","id":"confint","dir":"Articles","previous_headings":"Methods","what":"confint","title":"semmcci: Methods (MI)","text":"","code":"confint(unstd, level = 0.95) #>              2.5 %    97.5 % #> cp       0.1747691 0.2909825 #> b        0.4531340 0.5688425 #> a        0.4244548 0.5376125 #> X~~X     0.9654155 1.1580185 #> Y~~Y     0.5002887 0.6060755 #> M~~M     0.6854486 0.8271549 #> indirect 0.2074722 0.2868720 #> direct   0.1747691 0.2909825 #> total    0.4225818 0.5338379"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc_mi.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"semmcci: Methods (MI)","text":"","code":"fit <- sem(data = df, model = model, fixed.x = FALSE) unstd <- MCMI(fit, mi = mi, R = 20000L, alpha = 0.05) std <- MCStd(unstd, alpha = 0.05)"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc_mi.html","id":"print-1","dir":"Articles","previous_headings":"Methods","what":"print","title":"semmcci: Methods (MI)","text":"","code":"print(std) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2450 0.0303 20000 0.1812 0.2996 #> b        0.5189 0.0273 20000 0.4591 0.5664 #> a        0.5031 0.0261 20000 0.4431 0.5444 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y     0.5429 0.0249 20000 0.5073 0.6050 #> M~~M     0.7469 0.0258 20000 0.7037 0.8036 #> indirect 0.2610 0.0191 20000 0.2170 0.2922 #> direct   0.2450 0.0303 20000 0.1812 0.2996 #> total    0.5060 0.0260 20000 0.4418 0.5438"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc_mi.html","id":"summary-1","dir":"Articles","previous_headings":"Methods","what":"summary","title":"semmcci: Methods (MI)","text":"","code":"summary(std) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2450 0.0303 20000 0.1812 0.2996 #> b        0.5189 0.0273 20000 0.4591 0.5664 #> a        0.5031 0.0261 20000 0.4431 0.5444 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y     0.5429 0.0249 20000 0.5073 0.6050 #> M~~M     0.7469 0.0258 20000 0.7037 0.8036 #> indirect 0.2610 0.0191 20000 0.2170 0.2922 #> direct   0.2450 0.0303 20000 0.1812 0.2996 #> total    0.5060 0.0260 20000 0.4418 0.5438"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc_mi.html","id":"coef-1","dir":"Articles","previous_headings":"Methods","what":"coef","title":"semmcci: Methods (MI)","text":"","code":"coef(std) #>        cp         b         a      X~~X      Y~~Y      M~~M  indirect    direct  #> 0.2449797 0.5188628 0.5030687 1.0000000 0.5428754 0.7469219 0.2610236 0.2449797  #>     total  #> 0.5060033"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc_mi.html","id":"vcov-1","dir":"Articles","previous_headings":"Methods","what":"vcov","title":"semmcci: Methods (MI)","text":"","code":"vcov(std) #>                     cp             b             a          X~~X          Y~~Y #> cp        9.160302e-04 -6.013106e-04 -1.099974e-05 -2.494736e-21 -1.415273e-04 #> b        -6.013106e-04  7.468442e-04  2.480000e-06  7.720093e-21 -3.500514e-04 #> a        -1.099974e-05  2.480000e-06  6.832911e-04 -5.108931e-20 -1.596720e-04 #> X~~X     -2.494736e-21  7.720093e-21 -5.108931e-20  1.201655e-32  4.506098e-21 #> Y~~Y     -1.415273e-04 -3.500514e-04 -1.596720e-04  4.506098e-21  6.217032e-04 #> M~~M      1.094545e-05 -2.571334e-06 -6.744314e-04  5.084951e-20  1.576347e-04 #> indirect -3.029385e-04  3.705658e-04  3.517909e-04 -2.260834e-20 -2.548921e-04 #> direct    9.160302e-04 -6.013106e-04 -1.099974e-05 -2.494736e-21 -1.415273e-04 #> total     6.130916e-04 -2.307448e-04  3.407911e-04 -2.510308e-20 -3.964194e-04 #>                   M~~M      indirect        direct         total #> cp        1.094545e-05 -3.029385e-04  9.160302e-04  6.130916e-04 #> b        -2.571334e-06  3.705658e-04 -6.013106e-04 -2.307448e-04 #> a        -6.744314e-04  3.517909e-04 -1.099974e-05  3.407911e-04 #> X~~X      5.084951e-20 -2.260834e-20 -2.494736e-21 -2.510308e-20 #> Y~~Y      1.576347e-04 -2.548921e-04 -1.415273e-04 -3.964194e-04 #> M~~M      6.666224e-04 -3.472957e-04  1.094545e-05 -3.363503e-04 #> indirect -3.472957e-04  3.642111e-04 -3.029385e-04  6.127260e-05 #> direct    1.094545e-05 -3.029385e-04  9.160302e-04  6.130916e-04 #> total    -3.363503e-04  6.127260e-05  6.130916e-04  6.743642e-04"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods_mc_mi.html","id":"confint-1","dir":"Articles","previous_headings":"Methods","what":"confint","title":"semmcci: Methods (MI)","text":"","code":"confint(std, level = 0.95) #>              2.5 %    97.5 % #> cp       0.1812279 0.2995686 #> b        0.4591074 0.5664076 #> a        0.4431489 0.5443765 #> X~~X     1.0000000 1.0000000 #> Y~~Y     0.5073048 0.6049692 #> M~~M     0.7036542 0.8036190 #> indirect 0.2170326 0.2922048 #> direct   0.1812279 0.2995686 #> total    0.4417658 0.5438412"},{"path":"https://github.com/jeksterslab/semmcci/articles/semmcci.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"can install CRAN release semmcci : can install development version semmcci GitHub :","code":"install.packages(\"semmcci\") if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"jeksterslab/semmcci\")"},{"path":"https://github.com/jeksterslab/semmcci/articles/semmcci.html","id":"the-monte-carlo-method","dir":"Articles","previous_headings":"","what":"The Monte Carlo Method","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"Monte Carlo method, sampling distribution parameter estimates \\(\\hat{\\boldsymbol{\\theta}}^{\\ast}\\) generated multivariate normal distribution using parameter estimates \\(\\hat{\\boldsymbol{\\theta}}\\) corresponding sampling variance-covariance matrix \\(\\widehat{\\mathrm{Var}} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\). \\[\\begin{equation}     \\hat{\\boldsymbol{\\theta}}^{\\ast}     \\sim     \\mathcal{N}     \\left(     \\hat{\\boldsymbol{\\theta}},     \\widehat{\\mathrm{Var}}     \\left(     \\hat{\\boldsymbol{\\theta}}     \\right)     \\right) \\end{equation}\\] Confidence intervals defined parameters \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) generated obtaining percentiles corresponding \\(100(1 - \\alpha)\\%\\) generated sampling distribution, \\(\\alpha\\) significance level.","code":""},{"path":"https://github.com/jeksterslab/semmcci/articles/semmcci.html","id":"semmcci","dir":"Articles","previous_headings":"","what":"semmcci","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"Monte Carlo confidence intervals free defined parameters Monte Carlo confidence intervals free defined parameters models fitted structural equation modeling package lavaan can generated using semmcci package. package three main functions, namely, MC(), MCMI(), MCStd(). output lavaan passed first argument MC() function MCMI() function generate Monte Carlo confidence intervals. Monte Carlo confidence intervals standardized estimates can also generated passing output MC() function MCMI() function MCStd() function. description package code examples presented Pesigan Cheung (2023: https://doi.org/10.3758/s13428-023-02114-4).","code":""},{"path":"https://github.com/jeksterslab/semmcci/articles/semmcci.html","id":"citation","dir":"Articles","previous_headings":"","what":"Citation","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"cite semmcci publications, please use: Pesigan, . J. ., & Cheung, S. F. (2023). Monte Carlo confidence intervals indirect effect missing data. Behavior Research Methods. https://doi.org/10.3758/s13428-023-02114-4","code":""},{"path":"https://github.com/jeksterslab/semmcci/articles/semmcci.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"MacKinnon, D. P., Lockwood, C. M., & Williams, J. (2004). Confidence limits indirect effect: Distribution product resampling methods. Multivariate Behavioral Research, 39(1), 99–128. https://doi.org/10.1207/s15327906mbr3901_4 Pesigan, . J. ., & Cheung, S. F. (2023). Monte Carlo confidence intervals indirect effect missing data. Behavior Research Methods. https://doi.org/10.3758/s13428-023-02114-4 Preacher, K. J., & Selig, J. P. (2012). Advantages Monte Carlo confidence intervals indirect effects. Communication Methods Measures, 6(2), 77–98. https://doi.org/10.1080/19312458.2012.679848 Tofighi, D., & Kelley, K. (2019). Indirect effects sequential mediation models: Evaluating methods hypothesis testing confidence interval formation. Multivariate Behavioral Research, 55(2), 188–210. https://doi.org/10.1080/00273171.2019.1618545 Tofighi, D., & MacKinnon, D. P. (2015). Monte Carlo confidence intervals complex functions indirect effects. Structural Equation Modeling: Multidisciplinary Journal, 23(2), 194–205. https://doi.org/10.1080/10705511.2015.1057284","code":""},{"path":"https://github.com/jeksterslab/semmcci/articles/session.html","id":"session","dir":"Articles","previous_headings":"","what":"Session","title":"semmcci: Session","text":"","code":"sessionInfo() #> R version 4.3.1 (2023-06-16) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] semmcci_1.1.0 #>  #> loaded via a namespace (and not attached): #>  [1] vctrs_0.6.3       cli_3.6.1         knitr_1.43        rlang_1.1.1       #>  [5] xfun_0.39         stringi_1.7.12    purrr_1.0.1       textshaping_0.3.6 #>  [9] jsonlite_1.8.7    glue_1.6.2        rprojroot_2.0.3   htmltools_0.5.5   #> [13] ragg_1.2.5        sass_0.4.6        rmarkdown_2.22    evaluate_0.21     #> [17] jquerylib_0.1.4   fastmap_1.1.1     yaml_2.3.7        lifecycle_1.0.3   #> [21] memoise_2.0.1     stringr_1.5.0     compiler_4.3.1    fs_1.6.2          #> [25] systemfonts_1.0.4 digest_0.6.32     R6_2.5.1          magrittr_2.0.3    #> [29] bslib_0.5.0       tools_4.3.1       pkgdown_2.0.7     cachem_1.0.8      #> [33] desc_1.4.2"},{"path":"https://github.com/jeksterslab/semmcci/articles/session.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"semmcci: Session","text":"","code":"installed.packages() #>             Package       LibPath                           Version      #> abind       \"abind\"       \"/home/runner/work/_temp/Library\" \"1.4-5\"      #> Amelia      \"Amelia\"      \"/home/runner/work/_temp/Library\" \"1.8.1\"      #> arm         \"arm\"         \"/home/runner/work/_temp/Library\" \"1.13-1\"     #> askpass     \"askpass\"     \"/home/runner/work/_temp/Library\" \"1.1\"        #> backports   \"backports\"   \"/home/runner/work/_temp/Library\" \"1.4.1\"      #> base64enc   \"base64enc\"   \"/home/runner/work/_temp/Library\" \"0.1-3\"      #> bit         \"bit\"         \"/home/runner/work/_temp/Library\" \"4.0.5\"      #> bit64       \"bit64\"       \"/home/runner/work/_temp/Library\" \"4.0.5\"      #> bmemLavaan  \"bmemLavaan\"  \"/home/runner/work/_temp/Library\" \"0.5\"        #> brio        \"brio\"        \"/home/runner/work/_temp/Library\" \"1.1.3\"      #> broom       \"broom\"       \"/home/runner/work/_temp/Library\" \"1.0.5\"      #> bslib       \"bslib\"       \"/home/runner/work/_temp/Library\" \"0.5.0\"      #> cachem      \"cachem\"      \"/home/runner/work/_temp/Library\" \"1.0.8\"      #> callr       \"callr\"       \"/home/runner/work/_temp/Library\" \"3.7.3\"      #> cli         \"cli\"         \"/home/runner/work/_temp/Library\" \"3.6.1\"      #> clipr       \"clipr\"       \"/home/runner/work/_temp/Library\" \"0.8.0\"      #> coda        \"coda\"        \"/home/runner/work/_temp/Library\" \"0.19-4\"     #> crayon      \"crayon\"      \"/home/runner/work/_temp/Library\" \"1.5.2\"      #> curl        \"curl\"        \"/home/runner/work/_temp/Library\" \"5.0.1\"      #> desc        \"desc\"        \"/home/runner/work/_temp/Library\" \"1.4.2\"      #> diffobj     \"diffobj\"     \"/home/runner/work/_temp/Library\" \"0.3.5\"      #> digest      \"digest\"      \"/home/runner/work/_temp/Library\" \"0.6.32\"     #> downlit     \"downlit\"     \"/home/runner/work/_temp/Library\" \"0.4.3\"      #> dplyr       \"dplyr\"       \"/home/runner/work/_temp/Library\" \"1.1.2\"      #> ellipsis    \"ellipsis\"    \"/home/runner/work/_temp/Library\" \"0.3.2\"      #> evaluate    \"evaluate\"    \"/home/runner/work/_temp/Library\" \"0.21\"       #> fansi       \"fansi\"       \"/home/runner/work/_temp/Library\" \"1.0.4\"      #> fastmap     \"fastmap\"     \"/home/runner/work/_temp/Library\" \"1.1.1\"      #> fontawesome \"fontawesome\" \"/home/runner/work/_temp/Library\" \"0.5.1\"      #> forcats     \"forcats\"     \"/home/runner/work/_temp/Library\" \"1.0.0\"      #> foreach     \"foreach\"     \"/home/runner/work/_temp/Library\" \"1.5.2\"      #> fs          \"fs\"          \"/home/runner/work/_temp/Library\" \"1.6.2\"      #> generics    \"generics\"    \"/home/runner/work/_temp/Library\" \"0.1.3\"      #> glmnet      \"glmnet\"      \"/home/runner/work/_temp/Library\" \"4.1-7\"      #> glue        \"glue\"        \"/home/runner/work/_temp/Library\" \"1.6.2\"      #> haven       \"haven\"       \"/home/runner/work/_temp/Library\" \"2.5.2\"      #> highr       \"highr\"       \"/home/runner/work/_temp/Library\" \"0.10\"       #> hms         \"hms\"         \"/home/runner/work/_temp/Library\" \"1.1.3\"      #> htmltools   \"htmltools\"   \"/home/runner/work/_temp/Library\" \"0.5.5\"      #> httr        \"httr\"        \"/home/runner/work/_temp/Library\" \"1.4.6\"      #> iterators   \"iterators\"   \"/home/runner/work/_temp/Library\" \"1.0.14\"     #> jomo        \"jomo\"        \"/home/runner/work/_temp/Library\" \"2.7-6\"      #> jquerylib   \"jquerylib\"   \"/home/runner/work/_temp/Library\" \"0.1.4\"      #> jsonlite    \"jsonlite\"    \"/home/runner/work/_temp/Library\" \"1.8.7\"      #> knitr       \"knitr\"       \"/home/runner/work/_temp/Library\" \"1.43\"       #> lavaan      \"lavaan\"      \"/home/runner/work/_temp/Library\" \"0.6-15\"     #> lifecycle   \"lifecycle\"   \"/home/runner/work/_temp/Library\" \"1.0.3\"      #> lme4        \"lme4\"        \"/home/runner/work/_temp/Library\" \"1.1-33\"     #> magrittr    \"magrittr\"    \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> memoise     \"memoise\"     \"/home/runner/work/_temp/Library\" \"2.0.1\"      #> mi          \"mi\"          \"/home/runner/work/_temp/Library\" \"1.1\"        #> mice        \"mice\"        \"/home/runner/work/_temp/Library\" \"3.16.0\"     #> mime        \"mime\"        \"/home/runner/work/_temp/Library\" \"0.12\"       #> minqa       \"minqa\"       \"/home/runner/work/_temp/Library\" \"1.2.5\"      #> mitml       \"mitml\"       \"/home/runner/work/_temp/Library\" \"0.4-5\"      #> mnormt      \"mnormt\"      \"/home/runner/work/_temp/Library\" \"2.1.1\"      #> nloptr      \"nloptr\"      \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> numDeriv    \"numDeriv\"    \"/home/runner/work/_temp/Library\" \"2016.8-1.1\" #> openssl     \"openssl\"     \"/home/runner/work/_temp/Library\" \"2.0.6\"      #> ordinal     \"ordinal\"     \"/home/runner/work/_temp/Library\" \"2022.11-16\" #> pan         \"pan\"         \"/home/runner/work/_temp/Library\" \"1.8\"        #> pbivnorm    \"pbivnorm\"    \"/home/runner/work/_temp/Library\" \"0.6.0\"      #> pillar      \"pillar\"      \"/home/runner/work/_temp/Library\" \"1.9.0\"      #> pkgconfig   \"pkgconfig\"   \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> pkgdown     \"pkgdown\"     \"/home/runner/work/_temp/Library\" \"2.0.7\"      #> pkgload     \"pkgload\"     \"/home/runner/work/_temp/Library\" \"1.3.2\"      #> praise      \"praise\"      \"/home/runner/work/_temp/Library\" \"1.0.0\"      #> processx    \"processx\"    \"/home/runner/work/_temp/Library\" \"3.8.1\"      #> ps          \"ps\"          \"/home/runner/work/_temp/Library\" \"1.7.5\"      #> psych       \"psych\"       \"/home/runner/work/_temp/Library\" \"2.3.6\"      #> purrr       \"purrr\"       \"/home/runner/work/_temp/Library\" \"1.0.1\"      #> quadprog    \"quadprog\"    \"/home/runner/work/_temp/Library\" \"1.5-8\"      #> R6          \"R6\"          \"/home/runner/work/_temp/Library\" \"2.5.1\"      #> ragg        \"ragg\"        \"/home/runner/work/_temp/Library\" \"1.2.5\"      #> rappdirs    \"rappdirs\"    \"/home/runner/work/_temp/Library\" \"0.3.3\"      #> Rcpp        \"Rcpp\"        \"/home/runner/work/_temp/Library\" \"1.0.10\"     #> readr       \"readr\"       \"/home/runner/work/_temp/Library\" \"2.1.4\"      #> rematch2    \"rematch2\"    \"/home/runner/work/_temp/Library\" \"2.1.2\"      #> rlang       \"rlang\"       \"/home/runner/work/_temp/Library\" \"1.1.1\"      #> rmarkdown   \"rmarkdown\"   \"/home/runner/work/_temp/Library\" \"2.22\"       #> rprojroot   \"rprojroot\"   \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> rsem        \"rsem\"        \"/home/runner/work/_temp/Library\" \"0.5.0\"      #> sass        \"sass\"        \"/home/runner/work/_temp/Library\" \"0.4.6\"      #> sem         \"sem\"         \"/home/runner/work/_temp/Library\" \"3.1-15\"     #> semmcci     \"semmcci\"     \"/home/runner/work/_temp/Library\" \"1.1.0\"      #> sessioninfo \"sessioninfo\" \"/home/runner/work/_temp/Library\" \"1.2.2\"      #> shape       \"shape\"       \"/home/runner/work/_temp/Library\" \"1.4.6\"      #> snow        \"snow\"        \"/home/runner/work/_temp/Library\" \"0.4-4\"      #> snowfall    \"snowfall\"    \"/home/runner/work/_temp/Library\" \"1.84-6.2\"   #> stringi     \"stringi\"     \"/home/runner/work/_temp/Library\" \"1.7.12\"     #> stringr     \"stringr\"     \"/home/runner/work/_temp/Library\" \"1.5.0\"      #> sys         \"sys\"         \"/home/runner/work/_temp/Library\" \"3.4.2\"      #> systemfonts \"systemfonts\" \"/home/runner/work/_temp/Library\" \"1.0.4\"      #> testthat    \"testthat\"    \"/home/runner/work/_temp/Library\" \"3.1.9\"      #> textshaping \"textshaping\" \"/home/runner/work/_temp/Library\" \"0.3.6\"      #> tibble      \"tibble\"      \"/home/runner/work/_temp/Library\" \"3.2.1\"      #> tidyr       \"tidyr\"       \"/home/runner/work/_temp/Library\" \"1.3.0\"      #> tidyselect  \"tidyselect\"  \"/home/runner/work/_temp/Library\" \"1.2.0\"      #> tinytex     \"tinytex\"     \"/home/runner/work/_temp/Library\" \"0.45\"       #> tzdb        \"tzdb\"        \"/home/runner/work/_temp/Library\" \"0.4.0\"      #> ucminf      \"ucminf\"      \"/home/runner/work/_temp/Library\" \"1.2.0\"      #> utf8        \"utf8\"        \"/home/runner/work/_temp/Library\" \"1.2.3\"      #> vctrs       \"vctrs\"       \"/home/runner/work/_temp/Library\" \"0.6.3\"      #> vroom       \"vroom\"       \"/home/runner/work/_temp/Library\" \"1.6.3\"      #> waldo       \"waldo\"       \"/home/runner/work/_temp/Library\" \"0.5.1\"      #> whisker     \"whisker\"     \"/home/runner/work/_temp/Library\" \"0.4.1\"      #> withr       \"withr\"       \"/home/runner/work/_temp/Library\" \"2.5.0\"      #> xfun        \"xfun\"        \"/home/runner/work/_temp/Library\" \"0.39\"       #> xml2        \"xml2\"        \"/home/runner/work/_temp/Library\" \"1.3.4\"      #> yaml        \"yaml\"        \"/home/runner/work/_temp/Library\" \"2.3.7\"      #> pak         \"pak\"         \"/opt/R/4.3.1/lib/R/site-library\" \"0.5.1\"      #> base        \"base\"        \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> boot        \"boot\"        \"/opt/R/4.3.1/lib/R/library\"      \"1.3-28.1\"   #> class       \"class\"       \"/opt/R/4.3.1/lib/R/library\"      \"7.3-22\"     #> cluster     \"cluster\"     \"/opt/R/4.3.1/lib/R/library\"      \"2.1.4\"      #> codetools   \"codetools\"   \"/opt/R/4.3.1/lib/R/library\"      \"0.2-19\"     #> compiler    \"compiler\"    \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> datasets    \"datasets\"    \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> foreign     \"foreign\"     \"/opt/R/4.3.1/lib/R/library\"      \"0.8-84\"     #> graphics    \"graphics\"    \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> grDevices   \"grDevices\"   \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> grid        \"grid\"        \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> KernSmooth  \"KernSmooth\"  \"/opt/R/4.3.1/lib/R/library\"      \"2.23-21\"    #> lattice     \"lattice\"     \"/opt/R/4.3.1/lib/R/library\"      \"0.21-8\"     #> MASS        \"MASS\"        \"/opt/R/4.3.1/lib/R/library\"      \"7.3-60\"     #> Matrix      \"Matrix\"      \"/opt/R/4.3.1/lib/R/library\"      \"1.5-4.1\"    #> methods     \"methods\"     \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> mgcv        \"mgcv\"        \"/opt/R/4.3.1/lib/R/library\"      \"1.8-42\"     #> nlme        \"nlme\"        \"/opt/R/4.3.1/lib/R/library\"      \"3.1-162\"    #> nnet        \"nnet\"        \"/opt/R/4.3.1/lib/R/library\"      \"7.3-19\"     #> parallel    \"parallel\"    \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> rpart       \"rpart\"       \"/opt/R/4.3.1/lib/R/library\"      \"4.1.19\"     #> spatial     \"spatial\"     \"/opt/R/4.3.1/lib/R/library\"      \"7.3-16\"     #> splines     \"splines\"     \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> stats       \"stats\"       \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> stats4      \"stats4\"      \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> survival    \"survival\"    \"/opt/R/4.3.1/lib/R/library\"      \"3.5-5\"      #> tcltk       \"tcltk\"       \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> tools       \"tools\"       \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> utils       \"utils\"       \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #>             Priority      #> abind       NA            #> Amelia      NA            #> arm         NA            #> askpass     NA            #> backports   NA            #> base64enc   NA            #> bit         NA            #> bit64       NA            #> bmemLavaan  NA            #> brio        NA            #> broom       NA            #> bslib       NA            #> cachem      NA            #> callr       NA            #> cli         NA            #> clipr       NA            #> coda        NA            #> crayon      NA            #> curl        NA            #> desc        NA            #> diffobj     NA            #> digest      NA            #> downlit     NA            #> dplyr       NA            #> ellipsis    NA            #> evaluate    NA            #> fansi       NA            #> fastmap     NA            #> fontawesome NA            #> forcats     NA            #> foreach     NA            #> fs          NA            #> generics    NA            #> glmnet      NA            #> glue        NA            #> haven       NA            #> highr       NA            #> hms         NA            #> htmltools   NA            #> httr        NA            #> iterators   NA            #> jomo        NA            #> jquerylib   NA            #> jsonlite    NA            #> knitr       NA            #> lavaan      NA            #> lifecycle   NA            #> lme4        NA            #> magrittr    NA            #> memoise     NA            #> mi          NA            #> mice        NA            #> mime        NA            #> minqa       NA            #> mitml       NA            #> mnormt      NA            #> nloptr      NA            #> numDeriv    NA            #> openssl     NA            #> ordinal     NA            #> pan         NA            #> pbivnorm    NA            #> pillar      NA            #> pkgconfig   NA            #> pkgdown     NA            #> pkgload     NA            #> praise      NA            #> processx    NA            #> ps          NA            #> psych       NA            #> purrr       NA            #> quadprog    NA            #> R6          NA            #> ragg        NA            #> rappdirs    NA            #> Rcpp        NA            #> readr       NA            #> rematch2    NA            #> rlang       NA            #> rmarkdown   NA            #> rprojroot   NA            #> rsem        NA            #> sass        NA            #> sem         NA            #> semmcci     NA            #> sessioninfo NA            #> shape       NA            #> snow        NA            #> snowfall    NA            #> stringi     NA            #> stringr     NA            #> sys         NA            #> systemfonts NA            #> testthat    NA            #> textshaping NA            #> tibble      NA            #> tidyr       NA            #> tidyselect  NA            #> tinytex     NA            #> tzdb        NA            #> ucminf      NA            #> utf8        NA            #> vctrs       NA            #> vroom       NA            #> waldo       NA            #> whisker     NA            #> withr       NA            #> xfun        NA            #> xml2        NA            #> yaml        NA            #> pak         NA            #> base        \"base\"        #> boot        \"recommended\" #> class       \"recommended\" #> cluster     \"recommended\" #> codetools   \"recommended\" #> compiler    \"base\"        #> datasets    \"base\"        #> foreign     \"recommended\" #> graphics    \"base\"        #> grDevices   \"base\"        #> grid        \"base\"        #> KernSmooth  \"recommended\" #> lattice     \"recommended\" #> MASS        \"recommended\" #> Matrix      \"recommended\" #> methods     \"base\"        #> mgcv        \"recommended\" #> nlme        \"recommended\" #> nnet        \"recommended\" #> parallel    \"base\"        #> rpart       \"recommended\" #> spatial     \"recommended\" #> splines     \"base\"        #> stats       \"base\"        #> stats4      \"base\"        #> survival    \"recommended\" #> tcltk       \"base\"        #> tools       \"base\"        #> utils       \"base\"        #>             Depends                                                     #> abind       \"R (>= 1.5.0)\"                                              #> Amelia      \"R (>= 3.0.2), Rcpp (>= 0.11)\"                              #> arm         \"R (>= 3.1.0), MASS, Matrix (>= 1.0), stats, lme4 (>= 1.0)\" #> askpass     NA                                                          #> backports   \"R (>= 3.0.0)\"                                              #> base64enc   \"R (>= 2.9.0)\"                                              #> bit         \"R (>= 2.9.2)\"                                              #> bit64       \"R (>= 3.0.1), bit (>= 4.0.0), utils, methods, stats\"       #> bmemLavaan  \"R (>= 3.5.0), Amelia, MASS, snowfall, rsem\"                #> brio        NA                                                          #> broom       \"R (>= 3.5)\"                                                #> bslib       \"R (>= 2.10)\"                                               #> cachem      NA                                                          #> callr       \"R (>= 3.4)\"                                                #> cli         \"R (>= 3.4)\"                                                #> clipr       NA                                                          #> coda        \"R (>= 2.14.0)\"                                             #> crayon      NA                                                          #> curl        \"R (>= 3.0.0)\"                                              #> desc        \"R (>= 3.4)\"                                                #> diffobj     \"R (>= 3.1.0)\"                                              #> digest      \"R (>= 3.3.0)\"                                              #> downlit     \"R (>= 3.4.0)\"                                              #> dplyr       \"R (>= 3.5.0)\"                                              #> ellipsis    \"R (>= 3.2)\"                                                #> evaluate    \"R (>= 3.0.2)\"                                              #> fansi       \"R (>= 3.1.0)\"                                              #> fastmap     NA                                                          #> fontawesome \"R (>= 3.3.0)\"                                              #> forcats     \"R (>= 3.4)\"                                                #> foreach     \"R (>= 2.5.0)\"                                              #> fs          \"R (>= 3.4)\"                                                #> generics    \"R (>= 3.2)\"                                                #> glmnet      \"R (>= 3.6.0), Matrix (>= 1.0-6)\"                           #> glue        \"R (>= 3.4)\"                                                #> haven       \"R (>= 3.4)\"                                                #> highr       \"R (>= 3.3.0)\"                                              #> hms         NA                                                          #> htmltools   \"R (>= 2.14.1)\"                                             #> httr        \"R (>= 3.5)\"                                                #> iterators   \"R (>= 2.5.0), utils\"                                       #> jomo        NA                                                          #> jquerylib   NA                                                          #> jsonlite    \"methods\"                                                   #> knitr       \"R (>= 3.3.0)\"                                              #> lavaan      \"R(>= 3.4)\"                                                 #> lifecycle   \"R (>= 3.4)\"                                                #> lme4        \"R (>= 3.5.0), Matrix (>= 1.2-1), methods, stats\"           #> magrittr    \"R (>= 3.4.0)\"                                              #> memoise     NA                                                          #> mi          \"R (>= 3.0.0), methods, Matrix, stats4\"                     #> mice        \"R (>= 2.10.0)\"                                             #> mime        NA                                                          #> minqa       NA                                                          #> mitml       NA                                                          #> mnormt      \"R (>= 2.2.0)\"                                              #> nloptr      NA                                                          #> numDeriv    \"R (>= 2.11.1)\"                                             #> openssl     NA                                                          #> ordinal     \"R (>= 2.13.0), stats, methods\"                             #> pan         NA                                                          #> pbivnorm    NA                                                          #> pillar      NA                                                          #> pkgconfig   NA                                                          #> pkgdown     \"R (>= 3.1.0)\"                                              #> pkgload     \"R (>= 3.4.0)\"                                              #> praise      NA                                                          #> processx    \"R (>= 3.4.0)\"                                              #> ps          \"R (>= 3.4)\"                                                #> psych       NA                                                          #> purrr       \"R (>= 3.4.0)\"                                              #> quadprog    \"R (>= 3.1.0)\"                                              #> R6          \"R (>= 3.0)\"                                                #> ragg        NA                                                          #> rappdirs    \"R (>= 3.2)\"                                                #> Rcpp        NA                                                          #> readr       \"R (>= 3.5)\"                                                #> rematch2    NA                                                          #> rlang       \"R (>= 3.5.0)\"                                              #> rmarkdown   \"R (>= 3.0)\"                                                #> rprojroot   \"R (>= 3.0.0)\"                                              #> rsem        \"R (>= 2.7), MASS, lavaan\"                                  #> sass        NA                                                          #> sem         \"R (>= 3.5.0), stats\"                                       #> semmcci     \"R (>= 3.0.0)\"                                              #> sessioninfo \"R (>= 2.10)\"                                               #> shape       \"R (>= 2.01)\"                                               #> snow        \"R (>= 2.13.1), utils\"                                      #> snowfall    \"R (>= 2.10), snow\"                                         #> stringi     \"R (>= 3.1)\"                                                #> stringr     \"R (>= 3.3)\"                                                #> sys         NA                                                          #> systemfonts \"R (>= 3.2.0)\"                                              #> testthat    \"R (>= 3.1)\"                                                #> textshaping \"R (>= 3.2.0)\"                                              #> tibble      \"R (>= 3.4.0)\"                                              #> tidyr       \"R (>= 3.4.0)\"                                              #> tidyselect  \"R (>= 3.4)\"                                                #> tinytex     NA                                                          #> tzdb        \"R (>= 3.5.0)\"                                              #> ucminf      \"R (>= 3.5.0)\"                                              #> utf8        \"R (>= 2.10)\"                                               #> vctrs       \"R (>= 3.5.0)\"                                              #> vroom       \"R (>= 3.4)\"                                                #> waldo       NA                                                          #> whisker     NA                                                          #> withr       \"R (>= 3.2.0)\"                                              #> xfun        NA                                                          #> xml2        \"R (>= 3.1.0)\"                                              #> yaml        NA                                                          #> pak         \"R (>= 3.2)\"                                                #> base        NA                                                          #> boot        \"R (>= 3.0.0), graphics, stats\"                             #> class       \"R (>= 3.0.0), stats, utils\"                                #> cluster     \"R (>= 3.5.0)\"                                              #> codetools   \"R (>= 2.1)\"                                                #> compiler    NA                                                          #> datasets    NA                                                          #> foreign     \"R (>= 4.0.0)\"                                              #> graphics    NA                                                          #> grDevices   NA                                                          #> grid        NA                                                          #> KernSmooth  \"R (>= 2.5.0), stats\"                                       #> lattice     \"R (>= 4.0.0)\"                                              #> MASS        \"R (>= 4.0), grDevices, graphics, stats, utils\"             #> Matrix      \"R (>= 3.5.0), methods\"                                     #> methods     NA                                                          #> mgcv        \"R (>= 3.6.0), nlme (>= 3.1-64)\"                            #> nlme        \"R (>= 3.5.0)\"                                              #> nnet        \"R (>= 3.0.0), stats, utils\"                                #> parallel    NA                                                          #> rpart       \"R (>= 2.15.0), graphics, stats, grDevices\"                 #> spatial     \"R (>= 3.0.0), graphics, stats, utils\"                      #> splines     NA                                                          #> stats       NA                                                          #> stats4      NA                                                          #> survival    \"R (>= 3.5.0)\"                                              #> tcltk       NA                                                          #> tools       NA                                                          #> utils       NA                                                          #>             Imports                                                                                                                                                                                                                                                            #> abind       \"methods, utils\"                                                                                                                                                                                                                                                   #> Amelia      \"foreign, utils, grDevices, graphics, methods, stats, rlang\"                                                                                                                                                                                                       #> arm         \"abind, coda, graphics, grDevices, methods, nlme, utils\"                                                                                                                                                                                                           #> askpass     \"sys (>= 2.1)\"                                                                                                                                                                                                                                                     #> backports   NA                                                                                                                                                                                                                                                                 #> base64enc   NA                                                                                                                                                                                                                                                                 #> bit         NA                                                                                                                                                                                                                                                                 #> bit64       NA                                                                                                                                                                                                                                                                 #> bmemLavaan  \"lavaan, sem\"                                                                                                                                                                                                                                                      #> brio        NA                                                                                                                                                                                                                                                                 #> broom       \"backports, dplyr (>= 1.0.0), ellipsis, generics (>= 0.0.2),\\nglue, lifecycle, purrr, rlang, stringr, tibble (>= 3.0.0),\\ntidyr (>= 1.0.0)\"                                                                                                                        #> bslib       \"base64enc, cachem, grDevices, htmltools (>= 0.5.4), jquerylib\\n(>= 0.1.3), jsonlite, memoise (>= 2.0.1), mime, rlang, sass (>=\\n0.4.0)\"                                                                                                                           #> cachem      \"rlang, fastmap (>= 1.1.1)\"                                                                                                                                                                                                                                        #> callr       \"processx (>= 3.6.1), R6, utils\"                                                                                                                                                                                                                                   #> cli         \"utils\"                                                                                                                                                                                                                                                            #> clipr       \"utils\"                                                                                                                                                                                                                                                            #> coda        \"lattice\"                                                                                                                                                                                                                                                          #> crayon      \"grDevices, methods, utils\"                                                                                                                                                                                                                                        #> curl        NA                                                                                                                                                                                                                                                                 #> desc        \"cli, R6, rprojroot, utils\"                                                                                                                                                                                                                                        #> diffobj     \"crayon (>= 1.3.2), tools, methods, utils, stats\"                                                                                                                                                                                                                  #> digest      \"utils\"                                                                                                                                                                                                                                                            #> downlit     \"brio, desc, digest, evaluate, fansi, memoise, rlang, vctrs,\\nwithr, yaml\"                                                                                                                                                                                         #> dplyr       \"cli (>= 3.4.0), generics, glue (>= 1.3.2), lifecycle (>=\\n1.0.3), magrittr (>= 1.5), methods, pillar (>= 1.9.0), R6,\\nrlang (>= 1.1.0), tibble (>= 3.2.0), tidyselect (>= 1.2.0),\\nutils, vctrs (>= 0.6.0)\"                                                       #> ellipsis    \"rlang (>= 0.3.0)\"                                                                                                                                                                                                                                                 #> evaluate    \"methods\"                                                                                                                                                                                                                                                          #> fansi       \"grDevices, utils\"                                                                                                                                                                                                                                                 #> fastmap     NA                                                                                                                                                                                                                                                                 #> fontawesome \"rlang (>= 1.0.6), htmltools (>= 0.5.1.1)\"                                                                                                                                                                                                                         #> forcats     \"cli (>= 3.4.0), glue, lifecycle, magrittr, rlang (>= 1.0.0),\\ntibble\"                                                                                                                                                                                             #> foreach     \"codetools, utils, iterators\"                                                                                                                                                                                                                                      #> fs          \"methods\"                                                                                                                                                                                                                                                          #> generics    \"methods\"                                                                                                                                                                                                                                                          #> glmnet      \"methods, utils, foreach, shape, survival, Rcpp\"                                                                                                                                                                                                                   #> glue        \"methods\"                                                                                                                                                                                                                                                          #> haven       \"cli (>= 3.0.0), forcats (>= 0.2.0), hms, lifecycle, methods,\\nreadr (>= 0.1.0), rlang (>= 0.4.0), tibble, tidyselect, vctrs\\n(>= 0.3.0)\"                                                                                                                          #> highr       \"xfun (>= 0.18)\"                                                                                                                                                                                                                                                   #> hms         \"lifecycle, methods, pkgconfig, rlang (>= 1.0.2), vctrs (>=\\n0.3.8)\"                                                                                                                                                                                               #> htmltools   \"utils, digest, grDevices, base64enc, rlang (>= 0.4.10),\\nfastmap (>= 1.1.0), ellipsis\"                                                                                                                                                                            #> httr        \"curl (>= 3.0.0), jsonlite, mime, openssl (>= 0.8), R6\"                                                                                                                                                                                                            #> iterators   NA                                                                                                                                                                                                                                                                 #> jomo        \"stats, lme4, survival, MASS, ordinal, tibble\"                                                                                                                                                                                                                     #> jquerylib   \"htmltools\"                                                                                                                                                                                                                                                        #> jsonlite    NA                                                                                                                                                                                                                                                                 #> knitr       \"evaluate (>= 0.15), highr, methods, tools, xfun (>= 0.39),\\nyaml (>= 2.1.19)\"                                                                                                                                                                                     #> lavaan      \"methods, stats4, stats, utils, graphics, MASS, mnormt,\\npbivnorm, numDeriv, quadprog\"                                                                                                                                                                             #> lifecycle   \"cli (>= 3.4.0), glue, rlang (>= 1.0.6)\"                                                                                                                                                                                                                           #> lme4        \"graphics, grid, splines, utils, parallel, MASS, lattice, boot,\\nnlme (>= 3.1-123), minqa (>= 1.1.15), nloptr (>= 1.0.4)\"                                                                                                                                          #> magrittr    NA                                                                                                                                                                                                                                                                 #> memoise     \"rlang (>= 0.4.10), cachem\"                                                                                                                                                                                                                                        #> mi          \"arm (>= 1.4-11)\"                                                                                                                                                                                                                                                  #> mice        \"broom, dplyr, generics, glmnet, graphics, grDevices, lattice,\\nmethods, mitml, nnet, Rcpp, rpart, rlang, stats, tidyr, utils\"                                                                                                                                     #> mime        \"tools\"                                                                                                                                                                                                                                                            #> minqa       \"Rcpp (>= 0.9.10)\"                                                                                                                                                                                                                                                 #> mitml       \"pan, jomo, haven, grDevices, graphics, stats, methods, utils\"                                                                                                                                                                                                     #> mnormt      NA                                                                                                                                                                                                                                                                 #> nloptr      NA                                                                                                                                                                                                                                                                 #> numDeriv    NA                                                                                                                                                                                                                                                                 #> openssl     \"askpass\"                                                                                                                                                                                                                                                          #> ordinal     \"ucminf, MASS, Matrix, numDeriv, nlme\"                                                                                                                                                                                                                             #> pan         NA                                                                                                                                                                                                                                                                 #> pbivnorm    NA                                                                                                                                                                                                                                                                 #> pillar      \"cli (>= 2.3.0), fansi, glue, lifecycle, rlang (>= 1.0.2), utf8\\n(>= 1.1.0), utils, vctrs (>= 0.5.0)\"                                                                                                                                                              #> pkgconfig   \"utils\"                                                                                                                                                                                                                                                            #> pkgdown     \"bslib (>= 0.3.1), callr (>= 3.7.3), cli, desc, digest, downlit\\n(>= 0.4.0), fs (>= 1.4.0), httr (>= 1.4.2), jsonlite, magrittr,\\nmemoise, purrr, ragg, rlang (>= 1.0.0), rmarkdown (>=\\n1.1.9007), tibble, whisker, withr (>= 2.4.3), xml2 (>= 1.3.1),\\nyaml\"     #> pkgload     \"cli (>= 3.3.0), crayon, desc, fs, glue, methods, rlang (>=\\n1.0.3), rprojroot, utils, withr (>= 2.4.3)\"                                                                                                                                                           #> praise      NA                                                                                                                                                                                                                                                                 #> processx    \"ps (>= 1.2.0), R6, utils\"                                                                                                                                                                                                                                         #> ps          \"utils\"                                                                                                                                                                                                                                                            #> psych       \"mnormt,parallel,stats,graphics,grDevices,methods,lattice,nlme\"                                                                                                                                                                                                    #> purrr       \"cli (>= 3.4.0), lifecycle (>= 1.0.3), magrittr (>= 1.5.0),\\nrlang (>= 0.4.10), vctrs (>= 0.5.0)\"                                                                                                                                                                  #> quadprogragg        \"systemfonts (>= 1.0.3), textshaping (>= 0.3.0)\"                                                                                                                                                                                                                   #> rappdirs    NA                                                                                                                                                                                                                                                                 #> Rcpp        \"methods, utils\"                                                                                                                                                                                                                                                   #> readr       \"cli (>= 3.2.0), clipr, crayon, hms (>= 0.4.1), lifecycle (>=\\n0.2.0), methods, R6, rlang, tibble, utils, vroom (>= 1.6.0)\"                                                                                                                                        #> rematch2    \"tibble\"                                                                                                                                                                                                                                                           #> rlang       \"utils\"                                                                                                                                                                                                                                                            #> rmarkdown   \"bslib (>= 0.2.5.1), evaluate (>= 0.13), fontawesome (>=\\n0.5.0), htmltools (>= 0.5.1), jquerylib, jsonlite, knitr (>=\\n1.22), methods, stringr (>= 1.2.0), tinytex (>= 0.31), tools,\\nutils, xfun (>= 0.36), yaml (>= 2.1.19)\"                                    #> rprojroot   NA                                                                                                                                                                                                                                                                 #> rsem        NA                                                                                                                                                                                                                                                                 #> sass        \"fs, rlang (>= 0.4.10), htmltools (>= 0.5.1), R6, rappdirs\"                                                                                                                                                                                                        #> sem         \"MASS, boot, mi (>= 0.9-99), utils\"                                                                                                                                                                                                                                #> semmcci     \"stats, lavaan, mice\"                                                                                                                                                                                                                                              #> sessioninfo \"cli (>= 3.1.0), tools, utils\"                                                                                                                                                                                                                                     #> shape       \"stats, graphics, grDevices\"                                                                                                                                                                                                                                       #> snow        NA                                                                                                                                                                                                                                                                 #> snowfall    NA                                                                                                                                                                                                                                                                 #> stringi     \"tools, utils, stats\"                                                                                                                                                                                                                                              #> stringr     \"cli, glue (>= 1.6.1), lifecycle (>= 1.0.3), magrittr, rlang\\n(>= 1.0.0), stringi (>= 1.5.3), vctrs\"                                                                                                                                                               #> sys         NA                                                                                                                                                                                                                                                                 #> systemfonts NA                                                                                                                                                                                                                                                                 #> testthat    \"brio, callr (>= 3.5.1), cli (>= 3.4.0), desc, digest, ellipsis\\n(>= 0.2.0), evaluate, jsonlite, lifecycle, magrittr, methods,\\npkgload (>= 1.3.0), praise, processx, ps (>= 1.3.4), R6 (>=\\n2.2.0), rlang (>= 1.1.0), utils, waldo (>= 0.5.0), withr (>=\\n2.4.3)\" #> textshaping \"systemfonts (>= 1.0.0)\"                                                                                                                                                                                                                                           #> tibble      \"fansi (>= 0.4.0), lifecycle (>= 1.0.0), magrittr, methods,\\npillar (>= 1.8.1), pkgconfig, rlang (>= 1.0.2), utils, vctrs\\n(>= 0.4.2)\"                                                                                                                             #> tidyr       \"cli (>= 3.4.1), dplyr (>= 1.0.10), glue, lifecycle (>= 1.0.3),\\nmagrittr, purrr (>= 1.0.1), rlang (>= 1.0.4), stringr (>=\\n1.5.0), tibble (>= 2.1.1), tidyselect (>= 1.2.0), utils, vctrs\\n(>= 0.5.2)\"                                                            #> tidyselect  \"cli (>= 3.3.0), glue (>= 1.3.0), lifecycle (>= 1.0.3), rlang\\n(>= 1.0.4), vctrs (>= 0.4.1), withr\"                                                                                                                                                                #> tinytex     \"xfun (>= 0.29)\"                                                                                                                                                                                                                                                   #> tzdb        NA                                                                                                                                                                                                                                                                 #> ucminf      NA                                                                                                                                                                                                                                                                 #> utf8        NA                                                                                                                                                                                                                                                                 #> vctrs       \"cli (>= 3.4.0), glue, lifecycle (>= 1.0.3), rlang (>= 1.1.0)\"                                                                                                                                                                                                     #> vroom       \"bit64, cli (>= 3.2.0), crayon, glue, hms, lifecycle (>=\\n1.0.3), methods, rlang (>= 0.4.2), stats, tibble (>= 2.0.0),\\ntidyselect, tzdb (>= 0.1.1), vctrs (>= 0.2.0), withr\"                                                                                      #> waldo       \"cli, diffobj (>= 0.3.4), fansi, glue, methods, rematch2, rlang\\n(>= 1.0.0), tibble\"                                                                                                                                                                               #> whisker     NA                                                                                                                                                                                                                                                                 #> withr       \"graphics, grDevices, stats\"                                                                                                                                                                                                                                       #> xfun        \"stats, tools\"                                                                                                                                                                                                                                                     #> xml2        \"methods\"                                                                                                                                                                                                                                                          #> yaml        NA                                                                                                                                                                                                                                                                 #> pak         \"tools,\\nutils\"                                                                                                                                                                                                                                                    #> base        NA                                                                                                                                                                                                                                                                 #> boot        NA                                                                                                                                                                                                                                                                 #> class       \"MASS\"                                                                                                                                                                                                                                                             #> cluster     \"graphics, grDevices, stats, utils\"                                                                                                                                                                                                                                #> codetools   NA                                                                                                                                                                                                                                                                 #> compiler    NA                                                                                                                                                                                                                                                                 #> datasets    NA                                                                                                                                                                                                                                                                 #> foreign     \"methods, utils, stats\"                                                                                                                                                                                                                                            #> graphics    \"grDevices\"                                                                                                                                                                                                                                                        #> grDevices   NA                                                                                                                                                                                                                                                                 #> grid        \"grDevices, utils\"                                                                                                                                                                                                                                                 #> KernSmooth  NA                                                                                                                                                                                                                                                                 #> lattice     \"grid, grDevices, graphics, stats, utils\"                                                                                                                                                                                                                          #> MASS        \"methods\"                                                                                                                                                                                                                                                          #> Matrix      \"graphics, grid, lattice, stats, utils\"                                                                                                                                                                                                                            #> methods     \"utils, stats\"                                                                                                                                                                                                                                                     #> mgcv        \"methods, stats, graphics, Matrix, splines, utils\"                                                                                                                                                                                                                 #> nlme        \"graphics, stats, utils, lattice\"                                                                                                                                                                                                                                  #> nnet        NA                                                                                                                                                                                                                                                                 #> parallel    \"tools, compiler\"                                                                                                                                                                                                                                                  #> rpart       NA                                                                                                                                                                                                                                                                 #> spatial     NA                                                                                                                                                                                                                                                                 #> splines     \"graphics, stats\"                                                                                                                                                                                                                                                  #> stats       \"utils, grDevices, graphics\"                                                                                                                                                                                                                                       #> stats4      \"graphics, methods, stats\"                                                                                                                                                                                                                                         #> survival    \"graphics, Matrix, methods, splines, stats, utils\"                                                                                                                                                                                                                 #> tcltk       \"utils\"                                                                                                                                                                                                                                                            #> tools       NA                                                                                                                                                                                                                                                                 #> utils       NA                                                                                                                                                                                                                                                                 #>             LinkingTo                                                #> abind       NA                                                       #> Amelia      \"Rcpp (>= 0.11), RcppArmadillo\"                          #> arm         NA                                                       #> askpass     NA                                                       #> backports   NA                                                       #> base64enc   NA                                                       #> bit         NA                                                       #> bit64       NA                                                       #> bmemLavaan  NA                                                       #> brio        NA                                                       #> broom       NA                                                       #> bslib       NA                                                       #> cachem      NA                                                       #> callr       NA                                                       #> cli         NA                                                       #> clipr       NA                                                       #> coda        NA                                                       #> crayon      NA                                                       #> curl        NA                                                       #> desc        NA                                                       #> diffobj     NA                                                       #> digest      NA                                                       #> downlit     NA                                                       #> dplyr       NA                                                       #> ellipsis    NA                                                       #> evaluate    NA                                                       #> fansi       NA                                                       #> fastmap     NA                                                       #> fontawesome NA                                                       #> forcats     NA                                                       #> foreach     NA                                                       #> fs          NA                                                       #> generics    NA                                                       #> glmnet      \"RcppEigen, Rcpp\"                                        #> glue        NA                                                       #> haven       \"cpp11\"                                                  #> highr       NA                                                       #> hms         NA                                                       #> htmltools   NA                                                       #> httr        NA                                                       #> iterators   NA                                                       #> jomo        NA                                                       #> jquerylib   NA                                                       #> jsonlite    NA                                                       #> knitr       NA                                                       #> lavaan      NA                                                       #> lifecycle   NA                                                       #> lme4        \"Rcpp (>= 0.10.5), RcppEigen\"                            #> magrittr    NA                                                       #> memoise     NA                                                       #> mi          NA                                                       #> mice        \"cpp11, Rcpp\"                                            #> mime        NA                                                       #> minqa       \"Rcpp\"                                                   #> mitml       NA                                                       #> mnormt      NA                                                       #> nloptr      \"testthat\"                                               #> numDeriv    NA                                                       #> openssl     NA                                                       #> ordinal     NA                                                       #> pan         NA                                                       #> pbivnorm    NA                                                       #> pillar      NA                                                       #> pkgconfig   NA                                                       #> pkgdown     NA                                                       #> pkgload     NA                                                       #> praise      NA                                                       #> processx    NA                                                       #> ps          NA                                                       #> psych       NA                                                       #> purrr       \"cli\"                                                    #> quadprog    NA                                                       #> R6          NA                                                       #> ragg        \"systemfonts, textshaping\"                               #> rappdirs    NA                                                       #> Rcpp        NA                                                       #> readr       \"cpp11, tzdb (>= 0.1.1)\"                                 #> rematch2    NA                                                       #> rlang       NA                                                       #> rmarkdown   NA                                                       #> rprojroot   NA                                                       #> rsem        NA                                                       #> sass        NA                                                       #> sem         NA                                                       #> semmcci     NA                                                       #> sessioninfo NA                                                       #> shape       NA                                                       #> snow        NA                                                       #> snowfall    NA                                                       #> stringi     NA                                                       #> stringr     NA                                                       #> sys         NA                                                       #> systemfonts \"cpp11 (>= 0.2.1)\"                                       #> testthat    NA                                                       #> textshaping \"cpp11 (>= 0.2.1), systemfonts (>= 1.0.0)\"               #> tibble      NA                                                       #> tidyr       \"cpp11 (>= 0.4.0)\"                                       #> tidyselect  NA                                                       #> tinytex     NA                                                       #> tzdb        \"cpp11 (>= 0.4.2)\"                                       #> ucminf      NA                                                       #> utf8        NA                                                       #> vctrs       NA                                                       #> vroom       \"cpp11 (>= 0.2.0), progress (>= 1.2.1), tzdb (>= 0.1.1)\" #> waldo       NA                                                       #> whisker     NA                                                       #> withr       NA                                                       #> xfun        NA                                                       #> xml2        NA                                                       #> yaml        NA                                                       #> pak         NA                                                       #> base        NA                                                       #> boot        NA                                                       #> class       NA                                                       #> cluster     NA                                                       #> codetools   NA                                                       #> compiler    NA                                                       #> datasets    NA                                                       #> foreign     NA                                                       #> graphics    NA                                                       #> grDevices   NA                                                       #> grid        NA                                                       #> KernSmooth  NA                                                       #> lattice     NA                                                       #> MASS        NA                                                       #> Matrix      NA                                                       #> methods     NA                                                       #> mgcv        NA                                                       #> nlme        NA                                                       #> nnet        NA                                                       #> parallel    NA                                                       #> rpart       NA                                                       #> spatial     NA                                                       #> splines     NA                                                       #> stats       NA                                                       #> stats4      NA                                                       #> survival    NA                                                       #> tcltk       NA                                                       #> tools       NA                                                       #> utils       NA                                                       #>             Suggestsabindmelia      \"tcltk, broom, rmarkdown, knitrarmaskpass     \"testthat\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            #> backportsbase64encbit         \"testthat (>= 0.11.0), roxygen2, knitr, rmarkdown,\\nmicrobenchmark, bit64 (>= 4.0.0), ffbitbmemLavaan  \"R.rspbrio        \"covr, testthatbroom       \"AER, AUC, bbmle, betareg, biglm, binGroup, boot, btergm (>=\\n1.10.6), car, carData, caret, cluster, cmprsk, coda, covr, drc,\\ne1071, emmeans, epiR, ergm (>= 3.10.4), fixest (>= 0.9.0), gam\\n(>= 1.15), gee, geepack, ggplot2, glmnet, glmnetUtils, gmm,\\nHmisc, irlba, interp, joineRML, Kendall, knitr, ks, Lahman,\\nlavaan, leaps, lfe, lm.beta, lme4, lmodel2, lmtest (>= 0.9.38),\\nlsmeans, maps, margins, MASS, mclust, mediation, metafor, mfx,\\nmgcv, mlogit, modeldata, modeltests, muhaz, multcomp, network,\\nnnet, orcutt (>= 2.2), ordinal, plm, poLCA, psych, quantreg,\\nrmarkdown, robust, robustbase, rsample, sandwich, sp, spdep (>=\\n1.1), spatialreg, speedglm, spelling, survey, survival,\\nsystemfit, testthat (>= 2.1.0), tseries, vars, zoo\" #> bslib       \"bsicons, curl, fontawesome, ggplot2, knitr, magrittr,\\nrappdirs, rmarkdown (>= 2.7), shiny (>= 1.6.0), testthat,\\nthematic, withrcachem      \"testthatcallr       \"asciicast, cli (>= 1.1.0), covr, mockery, ps, rprojroot,\\nspelling, testthat (>= 3.0.0), withrcli         \"callr, covr, crayon, digest, glue (>= 1.6.0), grDevices,\\nhtmltools, htmlwidgets, knitr, methods, mockery, processx, ps\\n(>= 1.3.4.9000), rlang (>= 1.0.2.9003), rmarkdown, rprojroot,\\nrstudioapi, testthat, tibble, whoami, withrclipr       \"covr, knitr, rmarkdown, rstudioapi (>= 0.5), testthat (>=\\ncodacrayon      \"mockery, rstudioapi, testthat, withr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                #> curl        \"spelling, testthat (>= 1.0.0), knitr, jsonlite, rmarkdown,\\nmagrittr, httpuv (>= 1.4.4), webutilsdesc        \"callr, covr, gh, spelling, testthat, whoami, withrdiffobj     \"knitr, rmarkdowndigest      \"tinytest, simplermarkdowndownlit     \"covr, htmltools, jsonlite, MASS, MassSpecWavelet, pkgload,\\nrmarkdown, testthat (>= 3.0.0), xmldplyr       \"bench, broom, callr, covr, DBI, dbplyr (>= 2.2.1), ggplot2,\\nknitr, Lahman, lobstr, microbenchmark, nycflights13, purrr,\\nrmarkdown, RMySQL, RPostgreSQL, RSQLite, stringi (>= 1.7.6),\\ntestthat (>= 3.1.5), tidyr (>= 1.3.0), withrellipsis    \"covr, testthatevaluate    \"covr, ggplot2, lattice, rlang, testthat (>= 3.0.0), withrfansi       \"unitizer, knitr, rmarkdown\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          #> fastmap     \"testthatfontawesome \"covr, dplyr (>= 1.0.8), knitr (>= 1.31), testthat (>= 3.0.0),\\nrsvgforcats     \"covr, dplyr, ggplot2, knitr, readr, rmarkdown, testthat (>=\\n3.0.0), withrforeach     \"randomForest, doMC, doParallel, testthat, knitr, rmarkdownfs          \"covr, crayon, knitr, pillar (>= 1.0.0), rmarkdown, spelling,\\ntestthat (>= 3.0.0), tibble (>= 1.1.0), vctrs (>= 0.3.0), withr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       #> generics    \"covr, pkgload, testthat (>= 3.0.0), tibble, withrglmnet      \"knitr, lars, testthat, xfun, rmarkdownglue        \"covr, crayon, DBI, dplyr, forcats, ggplot2, knitr, magrittr,\\nmicrobenchmark, R.utils, rmarkdown, rprintf, RSQLite, stringr,\\ntestthat (>= 3.0.0), vctrs (>= 0.3.0), waldo (>= 0.3.0), withrhaven       \"covr, crayon, fs, knitr, pillar (>= 1.4.0), rmarkdown,\\ntestthat (>= 3.0.0), utfhighr       \"knitr, markdown, testithms         \"crayon, lubridate, pillar (>= 1.1.0), testthathtmltools   \"markdown, testthat, withr, Cairo, ragg, shinyhttr        \"covr, httpuv, jpeg, knitr, png, readr, rmarkdown, testthat\\n(>= 0.8.0), xmliterators   \"RUnit, foreachjomo        \"mitmljquerylib   \"testthatjsonlite    \"httr, vctrs, testthat, knitr, rmarkdown, R.rsp, sfknitr       \"bslib, codetools, DBI (>= 0.4-1), digest, formatR, gifski,\\ngridSVG, htmlwidgets (>= 0.7), curl, jpeg, JuliaCall (>=\\n0.11.1), magick, markdown (>= 1.3), png, ragg, reticulate (>=\\n1.4), rgl (>= 0.95.1201), rlang, rmarkdown, sass, showtext,\\nstyler (>= 1.2.0), targets (>= 0.6.0), testit, tibble,\\ntikzDevice (>= 0.10), tinytex, webshot, rstudioapi, xml2 (>=\\n1.2.0)\"                                                                                                                                                                                                                                                                                                                                                                                      #> lavaanlifecycle   \"covr, crayon, knitr, lintr, rmarkdown, testthat (>= 3.0.1),\\ntibble, tidyverse, tools, vctrs, withrlme4        \"knitr, rmarkdown, MEMSS, testthat (>= 0.8.1), ggplot2,\\nmlmRev, optimx (>= 2013.8.6), gamm4, pbkrtest, HSAUR3,\\nnumDeriv, car, dfoptim, mgcv, statmod, rr2, semEff, tibble,\\nmerDeriv\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               #> magrittr    \"covr, knitr, rlang, rmarkdown, testthatmemoise     \"digest, aws.s3, covr, googleAuthR, googleCloudStorageR, httr,\\ntestthatmi          \"betareg, lattice, knitr, MASS, nnet, parallel, sn, survival,\\ntruncnorm, foreignmice        \"broom.mixed, future, furrr, haven, knitr, lme4, MASS,\\nmiceadds, pan, parallelly, purrr, ranger, randomForest,\\nrmarkdown, rstan, survival, testthatmimeminqamitml       \"mice, miceadds, Amelia, lme4, nlme, lavaan, geepack, glmmTMB,\\nsurvival, knitr, rmarkdownmnormtnloptr      \"knitr, rmarkdown, xml2, testthat (>= 3.0.0), covr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   #> numDerivopenssl     \"curl, testthat (>= 2.1.0), digest, knitr, rmarkdown,\\njsonlite, jose, sodiumordinal     \"lme4, nnet, xtable, testthat (>= 0.8), toolspan         \"mitools, lmepbivnormpillar      \"bit64, DBI, debugme, DiagrammeR, dplyr, formattable, ggplot2,\\nknitr, lubridate, nanotime, nycflights13, palmerpenguins,\\nrmarkdown, scales, stringi, survival, testthat (>= 3.1.1),\\ntibble, units (>= 0.7.2), vdiffr, withrpkgconfig   \"covr, testthat, disposablespkgdown     \"covr, diffviewer, evaluate, htmltools, htmlwidgets, knitr,\\nlifecycle, methods, openssl, pkgload (>= 1.0.2), rsconnect,\\nrstudioapi, rticles, sass, testthat (>= 3.1.3), toolspkgload     \"bitops, covr, mathjaxr, mockr, pak, pkgbuild, Rcpp, remotes,\\nrstudioapi, testthatpraise      \"testthatprocessx    \"callr (>= 3.7.3), cli (>= 3.3.0), codetools, covr, curl,\\ndebugme, parallel, rlang (>= 1.0.2), testthat (>= 3.0.0),\\nwebfakes, withr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                #> ps          \"callr, covr, curl, pillar, pingr, processx (>= 3.1.0), R6,\\nrlang, testthat (>= 3.0.0), webfakes\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #> psych       \"psychTools, GPArotation, lavaan, lme4, Rcsdp, graph, knitr,\\nRgraphvizpurrr       \"covr, dplyr (>= 0.7.8), httr, knitr, lubridate, rmarkdown,\\ntestthat (>= 3.0.0), tibble, tidyselectquadprogtestthat, pryrragg        \"covr, graphics, grid, testthatrappdirs    \"roxygen2, testthat (>= 3.0.0), covr, withrcpp        \"tinytest, inline, rbenchmark, pkgKittenreadr       \"covr, curl, datasets, knitr, rmarkdown, spelling, stringi,\\ntestthat (>= 3.1.2), tzdb (>= 0.1.1), waldo, withr, xmlrematch2    \"covr, testthatrlang       \"cli (>= 3.1.0), covr, crayon, fs, glue, knitr, magrittr,\\nmethods, pillar, rmarkdown, stats, testthat (>= 3.0.0), tibble,\\nusethis, vctrs (>= 0.2.3), withrrmarkdown   \"digest, dygraphs, fs, rsconnect, downlit (>= 0.4.0), katex\\n(>= 1.4.0), sass (>= 0.4.0), shiny (>= 1.6.0), testthat (>=\\n3.0.3), tibble, vctrs, withrrprojroot   \"covr, knitr, lifecycle, mockr, rmarkdown, testthat (>=\\n3.0.0), withrrsemsass        \"testthat, knitr, rmarkdown, withr, shiny, curlsem         \"polycor, Diagrammesemmcci     \"knitr, rmarkdown, testthat, MASS, psych, Amelia, bmemLavaan\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         #> sessioninfo \"callr, covr, mockery, reticulate, rmarkdown, testthat, withrshapesnow        \"rlecuyersnowfall    \"Rmpistringistringr     \"covr, htmltools, htmlwidgets, knitr, rmarkdown, testthat (>=\\nsys         \"unix (>= 1.4), spelling, testthatsystemfonts \"testthat (>= 2.1.0), covr, knitr, rmarkdown, toolstestthat    \"covr, curl (>= 0.9.5), diffviewer (>= 0.1.0), knitr,\\nrmarkdown, rstudioapi, shiny, usethis, vctrs (>= 0.1.0), xmltextshaping \"covr, knitr, rmarkdowntibble      \"bench, bit64, blob, brio, callr, cli, covr, crayon (>=\\n1.3.4), DiagrammeR, dplyr, evaluate, formattable, ggplot2,\\nhere, hms, htmltools, knitr, lubridate, mockr, nycflights13,\\npkgbuild, pkgload, purrr, rmarkdown, stringi, testthat (>=\\n3.0.2), tidyr, withr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  #> tidyr       \"covr, data.table, knitr, readr, repurrrsive (>= 1.1.0),\\nrmarkdown, testthattidyselect  \"covr, crayon, dplyr, knitr, magrittr, rmarkdown, stringr,\\ntestthat (>= 3.1.1), tibbletinytex     \"testit, rstudioapitzdb        \"covr, testthat (>= 3.0.0)\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           #> ucminf      \"numDerivutf8        \"cli, covr, knitr, rlang, rmarkdown, testthat (>= 3.0.0),\\nwithrvctrs       \"bit64, covr, crayon, dplyr (>= 0.8.5), generics, knitr,\\npillar (>= 1.4.4), pkgdown (>= 2.0.1), rmarkdown, testthat (>=\\n3.0.0), tibble (>= 3.1.3), waldo (>= 0.2.0), withr, xml2,\\nzeallot\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         #> vroom       \"archive, bench (>= 1.1.0), covr, curl, dplyr, forcats, fs,\\nggplot2, knitr, patchwork, prettyunits, purrr, rmarkdown,\\nrstudioapi, scales, spelling, testthat (>= 2.1.0), tidyr,\\nutils, waldo, xmlwaldo       \"covr, R6, testthat (>= 3.0.0), withr, xml2\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          #> whisker     \"markdownwithr       \"callr, covr, DBI, knitr, lattice, methods, rlang, rmarkdown\\n(>= 2.12), RSQLite, testthatxfun        \"testit, parallel, codetools, rstudioapi, tinytex (>= 0.30),\\nmime, markdown (>= 1.5), knitr (>= 1.42), htmltools, remotes,\\npak, rhub, renv, curl, jsonlite, magick, yaml, rmarkdownxml2        \"covr, curl, httr, knitr, magrittr, mockery, rmarkdown,\\ntestthatyaml        \"RUnitpak         \"callr (>= 3.7.0),\\ncli (>= 3.2.0),\\ncovr,\\ncurl (>= 4.3.2),\\ndesc (>= 1.4.1),\\ndigest,\\ndistro,\\nfilelock (>= 1.0.2),\\ngitcreds,\\nglue (>= 1.6.2),\\nmockery,\\npingr,\\njsonlite (>= 1.8.0),\\npkgcache (>= 2.0.4),\\npkgdepends (>= 0.4.0),\\npkgsearch (>= 3.1.0),\\nprettyunits,\\nprocessx (>= 3.8.1),\\nps (>= 1.6.0),\\nrprojroot (>= 2.0.2),\\nrstudioapi,\\ntestthat,\\nwithr\"                                                                                                                                                                                                                                                                                                                                                                                           #> base        \"methodsboot        \"MASS, survival\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      #> class       NA                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #> cluster     \"MASS, MatrixcodetoolscompilerdatasetsforeigngraphicsgrDevices   \"KernSmoothgridernSmooth  \"MASS, carDatalattice     \"KernSmooth, MASS, latticeExtra, colorspacelattice, nlme, nnet, survivalatrix      \"MASS, expmmethods     \"codetools\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           #> mgcv        \"parallel, survivalnlme        \"Hmisc, MASS, SASmixednnetparallel    \"methodsrpart       \"survivalspatialsplines     \"Matrix, methodsstats       \"MASS, Matrix, SuppDists, methods, statsstatssurvivaltcltktools       \"codetools, methods, xml2, curl, commonmark, knitr, xfun,\\nmathjaxrutils       \"methods, xml2, commonmark, knitrnhances                                                              #> abind       NA                                                                    #> Amelia      NA                                                                    #> arm         NA                                                                    #> askpass     NA                                                                    #> backports   NA                                                                    #> base64enc   \"png\"                                                                 #> bit         NA                                                                    #> bit64       NA                                                                    #> bmemLavaan  NA                                                                    #> brio        NA                                                                    #> broom       NA                                                                    #> bslib       NA                                                                    #> cachem      NA                                                                    #> callr       NA                                                                    #> cli         NA                                                                    #> clipr       NA                                                                    #> coda        NA                                                                    #> crayon      NA                                                                    #> curl        NA                                                                    #> desc        NA                                                                    #> diffobj     NA                                                                    #> digest      NA                                                                    #> downlit     NA                                                                    #> dplyr       NA                                                                    #> ellipsis    NA                                                                    #> evaluate    NA                                                                    #> fansi       NA                                                                    #> fastmap     NA                                                                    #> fontawesome NA                                                                    #> forcats     NA                                                                    #> foreach     NA                                                                    #> fs          NA                                                                    #> generics    NA                                                                    #> glmnet      NA                                                                    #> glue        NA                                                                    #> haven       NA                                                                    #> highr       NA                                                                    #> hms         NA                                                                    #> htmltools   \"knitr\"                                                               #> httr        NA                                                                    #> iterators   NA                                                                    #> jomo        NA                                                                    #> jquerylib   NA                                                                    #> jsonlite    NA                                                                    #> knitr       NA                                                                    #> lavaan      NA                                                                    #> lifecycle   NA                                                                    #> lme4        NA                                                                    #> magrittr    NA                                                                    #> memoise     NA                                                                    #> mi          NA                                                                    #> mice        NA                                                                    #> mime        NA                                                                    #> minqa       NA                                                                    #> mitml       NA                                                                    #> mnormt      NA                                                                    #> nloptr      NA                                                                    #> numDeriv    NA                                                                    #> openssl     NA                                                                    #> ordinal     NA                                                                    #> pan         NA                                                                    #> pbivnorm    NA                                                                    #> pillar      NA                                                                    #> pkgconfig   NA                                                                    #> pkgdown     NA                                                                    #> pkgload     NA                                                                    #> praise      NA                                                                    #> processx    NA                                                                    #> ps          NA                                                                    #> psych       NA                                                                    #> purrr       NA                                                                    #> quadprog    NA                                                                    #> R6          NA                                                                    #> ragg        NA                                                                    #> rappdirs    NA                                                                    #> Rcpp        NA                                                                    #> readr       NA                                                                    #> rematch2    NA                                                                    #> rlang       \"winch\"                                                               #> rmarkdown   NA                                                                    #> rprojroot   NA                                                                    #> rsem        NA                                                                    #> sass        NA                                                                    #> sem         NA                                                                    #> semmcci     NA                                                                    #> sessioninfo NA                                                                    #> shape       NA                                                                    #> snow        \"Rmpi\"                                                                #> snowfall    NA                                                                    #> stringi     NA                                                                    #> stringr     NA                                                                    #> sys         NA                                                                    #> systemfonts NA                                                                    #> testthat    NA                                                                    #> textshaping NA                                                                    #> tibble      NA                                                                    #> tidyr       NA                                                                    #> tidyselect  NA                                                                    #> tinytex     NA                                                                    #> tzdb        NA                                                                    #> ucminf      NA                                                                    #> utf8        NA                                                                    #> vctrs       NA                                                                    #> vroom       NA                                                                    #> waldo       NA                                                                    #> whisker     NA                                                                    #> withr       NA                                                                    #> xfun        NA                                                                    #> xml2        NA                                                                    #> yaml        NA                                                                    #> pak         NA                                                                    #> base        NA                                                                    #> boot        NA                                                                    #> class       NA                                                                    #> cluster     NA                                                                    #> codetools   NA                                                                    #> compiler    NA                                                                    #> datasets    NA                                                                    #> foreign     NA                                                                    #> graphics    NA                                                                    #> grDevices   NA                                                                    #> grid        NA                                                                    #> KernSmooth  NA                                                                    #> lattice     \"chron\"                                                               #> MASS        NA                                                                    #> Matrix      \"MatrixModels, SparseM, graph, igraph, maptools, sfsmisc, sp,\\nspdep\" #> methods     NA                                                                    #> mgcv        NA                                                                    #> nlme        NA                                                                    #> nnet        NA                                                                    #> parallel    \"snow, Rmpi\"                                                          #> rpart       NA                                                                    #> spatial     NA                                                                    #> splines     NA                                                                    #> stats       NA                                                                    #> stats4      NA                                                                    #> survival    NA                                                                    #> tcltk       NA                                                                    #> tools       NA                                                                    #> utils       NA                                                                    #>             License                                  License_is_FOSS #> abind       \"LGPL (>= 2)\"                            NA              #> Amelia      \"GPL (>= 2)\"                             NA              #> arm         \"GPL (> 2)\"                              NA              #> askpass     \"MIT + file LICENSE\"                     NA              #> backports   \"GPL-2 | GPL-3\"                          NA              #> base64enc   \"GPL-2 | GPL-3\"                          NA              #> bit         \"GPL-2 | GPL-3\"                          NA              #> bit64       \"GPL-2 | GPL-3\"                          NA              #> bmemLavaan  \"GPL-2\"                                  NA              #> brio        \"MIT + file LICENSE\"                     NA              #> broom       \"MIT + file LICENSE\"                     NA              #> bslib       \"MIT + file LICENSE\"                     NA              #> cachem      \"MIT + file LICENSE\"                     NA              #> callr       \"MIT + file LICENSE\"                     NA              #> cli         \"MIT + file LICENSE\"                     NA              #> clipr       \"GPL-3\"                                  NA              #> coda        \"GPL (>= 2)\"                             NA              #> crayon      \"MIT + file LICENSE\"                     NA              #> curl        \"MIT + file LICENSE\"                     NA              #> desc        \"MIT + file LICENSE\"                     NA              #> diffobj     \"GPL-2 | GPL-3\"                          NA              #> digest      \"GPL (>= 2)\"                             NA              #> downlit     \"MIT + file LICENSE\"                     NA              #> dplyr       \"MIT + file LICENSE\"                     NA              #> ellipsis    \"MIT + file LICENSE\"                     NA              #> evaluate    \"MIT + file LICENSE\"                     NA              #> fansi       \"GPL-2 | GPL-3\"                          NA              #> fastmap     \"MIT + file LICENSE\"                     NA              #> fontawesome \"MIT + file LICENSE\"                     NA              #> forcats     \"MIT + file LICENSE\"                     NA              #> foreach     \"Apache License (== 2.0)\"                NA              #> fs          \"MIT + file LICENSE\"                     NA              #> generics    \"MIT + file LICENSE\"                     NA              #> glmnet      \"GPL-2\"                                  NA              #> glue        \"MIT + file LICENSE\"                     NA              #> haven       \"MIT + file LICENSE\"                     NA              #> highr       \"GPL\"                                    NA              #> hms         \"MIT + file LICENSE\"                     NA              #> htmltools   \"GPL (>= 2)\"                             NA              #> httr        \"MIT + file LICENSE\"                     NA              #> iterators   \"Apache License (== 2.0)\"                NA              #> jomo        \"GPL-2\"                                  NA              #> jquerylib   \"MIT + file LICENSE\"                     NA              #> jsonlite    \"MIT + file LICENSE\"                     NA              #> knitr       \"GPL\"                                    NA              #> lavaan      \"GPL (>= 2)\"                             NA              #> lifecycle   \"MIT + file LICENSE\"                     NA              #> lme4        \"GPL (>= 2)\"                             NA              #> magrittr    \"MIT + file LICENSE\"                     NA              #> memoise     \"MIT + file LICENSE\"                     NA              #> mi          \"GPL (>= 2)\"                             NA              #> mice        \"GPL (>= 2)\"                             NA              #> mime        \"GPL\"                                    NA              #> minqa       \"GPL-2\"                                  NA              #> mitml       \"GPL (>= 2)\"                             NA              #> mnormt      \"GPL-2 | GPL-3\"                          NA              #> nloptr      \"LGPL (>= 3)\"                            NA              #> numDeriv    \"GPL-2\"                                  NA              #> openssl     \"MIT + file LICENSE\"                     NA              #> ordinal     \"GPL (>= 2)\"                             NA              #> pan         \"GPL-3\"                                  NA              #> pbivnorm    \"GPL (>= 2)\"                             NA              #> pillar      \"MIT + file LICENSE\"                     NA              #> pkgconfig   \"MIT + file LICENSE\"                     NA              #> pkgdown     \"MIT + file LICENSE\"                     NA              #> pkgload     \"GPL-3\"                                  NA              #> praise      \"MIT + file LICENSE\"                     NA              #> processx    \"MIT + file LICENSE\"                     NA              #> ps          \"MIT + file LICENSE\"                     NA              #> psych       \"GPL (>= 2)\"                             NA              #> purrr       \"MIT + file LICENSE\"                     NA              #> quadprog    \"GPL (>= 2)\"                             NA              #> R6          \"MIT + file LICENSE\"                     NA              #> ragg        \"MIT + file LICENSE\"                     NA              #> rappdirs    \"MIT + file LICENSE\"                     NA              #> Rcpp        \"GPL (>= 2)\"                             NA              #> readr       \"MIT + file LICENSE\"                     NA              #> rematch2    \"MIT + file LICENSE\"                     NA              #> rlang       \"MIT + file LICENSE\"                     NA              #> rmarkdown   \"GPL-3\"                                  NA              #> rprojroot   \"MIT + file LICENSE\"                     NA              #> rsem        \"GPL-2\"                                  NA              #> sass        \"MIT + file LICENSE\"                     NA              #> sem         \"GPL (>= 2)\"                             NA              #> semmcci     \"MIT + file LICENSE\"                     NA              #> sessioninfo \"GPL-2\"                                  NA              #> shape       \"GPL (>= 3)\"                             NA              #> snow        \"GPL\"                                    NA              #> snowfall    \"GPL\"                                    NA              #> stringi     \"file LICENSE\"                           \"yes\"           #> stringr     \"MIT + file LICENSE\"                     NA              #> sys         \"MIT + file LICENSE\"                     NA              #> systemfonts \"MIT + file LICENSE\"                     NA              #> testthat    \"MIT + file LICENSE\"                     NA              #> textshaping \"MIT + file LICENSE\"                     NA              #> tibble      \"MIT + file LICENSE\"                     NA              #> tidyr       \"MIT + file LICENSE\"                     NA              #> tidyselect  \"MIT + file LICENSE\"                     NA              #> tinytex     \"MIT + file LICENSE\"                     NA              #> tzdb        \"MIT + file LICENSE\"                     NA              #> ucminf      \"GPL (>= 2)\"                             NA              #> utf8        \"Apache License (== 2.0) | file LICENSE\" NA              #> vctrs       \"MIT + file LICENSE\"                     NA              #> vroom       \"MIT + file LICENSE\"                     NA              #> waldo       \"MIT + file LICENSE\"                     NA              #> whisker     \"GPL-3\"                                  NA              #> withr       \"MIT + file LICENSE\"                     NA              #> xfun        \"MIT + file LICENSE\"                     NA              #> xml2        \"MIT + file LICENSE\"                     NA              #> yaml        \"BSD_3_clause + file LICENSE\"            NA              #> pak         \"GPL-3\"                                  NA              #> base        \"Part of R 4.3.1\"                        NA              #> boot        \"Unlimited\"                              NA              #> class       \"GPL-2 | GPL-3\"                          NA              #> cluster     \"GPL (>= 2)\"                             NA              #> codetools   \"GPL\"                                    NA              #> compiler    \"Part of R 4.3.1\"                        NA              #> datasets    \"Part of R 4.3.1\"                        NA              #> foreign     \"GPL (>= 2)\"                             NA              #> graphics    \"Part of R 4.3.1\"                        NA              #> grDevices   \"Part of R 4.3.1\"                        NA              #> grid        \"Part of R 4.3.1\"                        NA              #> KernSmooth  \"Unlimited\"                              NA              #> lattice     \"GPL (>= 2)\"                             NA              #> MASS        \"GPL-2 | GPL-3\"                          NA              #> Matrix      \"GPL (>= 2) | file LICENCE\"              NA              #> methods     \"Part of R 4.3.1\"                        NA              #> mgcv        \"GPL (>= 2)\"                             NA              #> nlme        \"GPL (>= 2)\"                             NA              #> nnet        \"GPL-2 | GPL-3\"                          NA              #> parallel    \"Part of R 4.3.1\"                        NA              #> rpart       \"GPL-2 | GPL-3\"                          NA              #> spatial     \"GPL-2 | GPL-3\"                          NA              #> splines     \"Part of R 4.3.1\"                        NA              #> stats       \"Part of R 4.3.1\"                        NA              #> stats4      \"Part of R 4.3.1\"                        NA              #> survival    \"LGPL (>= 2)\"                            NA              #> tcltk       \"Part of R 4.3.1\"                        NA              #> tools       \"Part of R 4.3.1\"                        NA              #> utils       \"Part of R 4.3.1\"                        NA              #>             License_restricts_use OS_type MD5sum NeedsCompilation Built   #> abind       NA                    NA      NA     \"no\"             \"4.3.0\" #> Amelia      NA                    NA      NA     \"yes\"            \"4.3.0\" #> arm         NA                    NA      NA     \"no\"             \"4.3.0\" #> askpass     NA                    NA      NA     \"yes\"            \"4.3.0\" #> backports   NA                    NA      NA     \"yes\"            \"4.3.0\" #> base64enc   NA                    NA      NA     \"yes\"            \"4.3.0\" #> bit         NA                    NA      NA     \"yes\"            \"4.3.0\" #> bit64       NA                    NA      NA     \"yes\"            \"4.3.0\" #> bmemLavaan  NA                    NA      NA     \"no\"             \"4.3.0\" #> brio        NA                    NA      NA     \"yes\"            \"4.3.0\" #> broom       NA                    NA      NA     \"no\"             \"4.3.0\" #> bslib       NA                    NA      NA     \"no\"             \"4.3.0\" #> cachem      NA                    NA      NA     \"yes\"            \"4.3.0\" #> callr       NA                    NA      NA     \"no\"             \"4.3.0\" #> cli         NA                    NA      NA     \"yes\"            \"4.3.0\" #> clipr       NA                    NA      NA     \"no\"             \"4.3.0\" #> coda        NA                    NA      NA     \"no\"             \"4.3.0\" #> crayon      NA                    NA      NA     \"no\"             \"4.3.0\" #> curl        NA                    NA      NA     \"yes\"            \"4.3.0\" #> desc        NA                    NA      NA     \"no\"             \"4.3.0\" #> diffobj     NA                    NA      NA     \"yes\"            \"4.3.0\" #> digest      NA                    NA      NA     \"yes\"            \"4.3.0\" #> downlit     NA                    NA      NA     \"no\"             \"4.3.0\" #> dplyr       NA                    NA      NA     \"yes\"            \"4.3.0\" #> ellipsis    NA                    NA      NA     \"yes\"            \"4.3.0\" #> evaluate    NA                    NA      NA     \"no\"             \"4.3.0\" #> fansi       NA                    NA      NA     \"yes\"            \"4.3.0\" #> fastmap     NA                    NA      NA     \"yes\"            \"4.3.0\" #> fontawesome NA                    NA      NA     \"no\"             \"4.3.0\" #> forcats     NA                    NA      NA     \"no\"             \"4.3.0\" #> foreach     NA                    NA      NA     \"no\"             \"4.3.0\" #> fs          NA                    NA      NA     \"yes\"            \"4.3.0\" #> generics    NA                    NA      NA     \"no\"             \"4.3.0\" #> glmnet      NA                    NA      NA     \"yes\"            \"4.3.0\" #> glue        NA                    NA      NA     \"yes\"            \"4.3.0\" #> haven       NA                    NA      NA     \"yes\"            \"4.3.0\" #> highr       NA                    NA      NA     \"no\"             \"4.3.0\" #> hms         NA                    NA      NA     \"no\"             \"4.3.0\" #> htmltools   NA                    NA      NA     \"yes\"            \"4.3.0\" #> httr        NA                    NA      NA     \"no\"             \"4.3.0\" #> iterators   NA                    NA      NA     \"no\"             \"4.3.0\" #> jomo        NA                    NA      NA     \"yes\"            \"4.3.0\" #> jquerylib   NA                    NA      NA     \"no\"             \"4.3.0\" #> jsonlite    NA                    NA      NA     \"yes\"            \"4.3.0\" #> knitr       NA                    NA      NA     \"no\"             \"4.3.0\" #> lavaan      NA                    NA      NA     \"no\"             \"4.3.0\" #> lifecycle   NA                    NA      NA     \"no\"             \"4.3.0\" #> lme4        NA                    NA      NA     \"yes\"            \"4.3.0\" #> magrittr    NA                    NA      NA     \"yes\"            \"4.3.0\" #> memoise     NA                    NA      NA     \"no\"             \"4.3.0\" #> mi          NA                    NA      NA     \"no\"             \"4.3.0\" #> mice        NA                    NA      NA     \"yes\"            \"4.3.0\" #> mime        NA                    NA      NA     \"yes\"            \"4.3.0\" #> minqa       NA                    NA      NA     \"yes\"            \"4.3.0\" #> mitml       NA                    NA      NA     \"no\"             \"4.3.0\" #> mnormt      NA                    NA      NA     \"yes\"            \"4.3.0\" #> nloptr      NA                    NA      NA     \"yes\"            \"4.3.0\" #> numDeriv    NA                    NA      NA     \"no\"             \"4.3.0\" #> openssl     NA                    NA      NA     \"yes\"            \"4.3.0\" #> ordinal     NA                    NA      NA     \"yes\"            \"4.3.0\" #> pan         \"no\"                  NA      NA     \"yes\"            \"4.3.0\" #> pbivnorm    NA                    NA      NA     \"yes\"            \"4.3.0\" #> pillar      NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgconfig   NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgdown     NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgload     NA                    NA      NA     \"no\"             \"4.3.0\" #> praise      NA                    NA      NA     \"no\"             \"4.3.0\" #> processx    NA                    NA      NA     \"yes\"            \"4.3.0\" #> ps          NA                    NA      NA     \"yes\"            \"4.3.0\" #> psych       NA                    NA      NA     \"no\"             \"4.3.0\" #> purrr       NA                    NA      NA     \"yes\"            \"4.3.0\" #> quadprog    NA                    NA      NA     \"yes\"            \"4.3.0\" #> R6          NA                    NA      NA     \"no\"             \"4.3.0\" #> ragg        NA                    NA      NA     \"yes\"            \"4.3.0\" #> rappdirs    NA                    NA      NA     \"yes\"            \"4.3.0\" #> Rcpp        NA                    NA      NA     \"yes\"            \"4.3.0\" #> readr       NA                    NA      NA     \"yes\"            \"4.3.0\" #> rematch2    NA                    NA      NA     \"no\"             \"4.3.0\" #> rlang       NA                    NA      NA     \"yes\"            \"4.3.0\" #> rmarkdown   NA                    NA      NA     \"no\"             \"4.3.0\" #> rprojroot   NA                    NA      NA     \"no\"             \"4.3.0\" #> rsem        NA                    NA      NA     \"no\"             \"4.3.0\" #> sass        NA                    NA      NA     \"yes\"            \"4.3.0\" #> sem         NA                    NA      NA     \"yes\"            \"4.3.0\" #> semmcci     NA                    NA      NA     \"no\"             \"4.3.1\" #> sessioninfo NA                    NA      NA     \"no\"             \"4.3.0\" #> shape       NA                    NA      NA     \"no\"             \"4.3.0\" #> snow        NA                    NA      NA     \"no\"             \"4.3.0\" #> snowfall    NA                    NA      NA     \"no\"             \"4.3.0\" #> stringi     NA                    NA      NA     \"yes\"            \"4.3.0\" #> stringr     NA                    NA      NA     \"no\"             \"4.3.0\" #> sys         NA                    NA      NA     \"yes\"            \"4.3.0\" #> systemfonts NA                    NA      NA     \"yes\"            \"4.3.0\" #> testthat    NA                    NA      NA     \"yes\"            \"4.3.0\" #> textshaping NA                    NA      NA     \"yes\"            \"4.3.0\" #> tibble      NA                    NA      NA     \"yes\"            \"4.3.0\" #> tidyr       NA                    NA      NA     \"yes\"            \"4.3.0\" #> tidyselect  NA                    NA      NA     \"no\"             \"4.3.0\" #> tinytex     NA                    NA      NA     \"no\"             \"4.3.0\" #> tzdb        NA                    NA      NA     \"yes\"            \"4.3.0\" #> ucminf      NA                    NA      NA     \"yes\"            \"4.3.0\" #> utf8        NA                    NA      NA     \"yes\"            \"4.3.0\" #> vctrs       NA                    NA      NA     \"yes\"            \"4.3.0\" #> vroom       NA                    NA      NA     \"yes\"            \"4.3.0\" #> waldo       NA                    NA      NA     \"no\"             \"4.3.0\" #> whisker     NA                    NA      NA     \"no\"             \"4.3.0\" #> withr       NA                    NA      NA     \"no\"             \"4.3.0\" #> xfun        NA                    NA      NA     \"yes\"            \"4.3.0\" #> xml2        NA                    NA      NA     \"yes\"            \"4.3.0\" #> yaml        NA                    NA      NA     \"yes\"            \"4.3.0\" #> pak         NA                    NA      NA     NA               \"4.3.0\" #> base        NA                    NA      NA     NA               \"4.3.1\" #> boot        NA                    NA      NA     \"no\"             \"4.3.1\" #> class       NA                    NA      NA     \"yes\"            \"4.3.1\" #> cluster     NA                    NA      NA     \"yes\"            \"4.3.1\" #> codetools   NA                    NA      NA     \"no\"             \"4.3.1\" #> compiler    NA                    NA      NA     NA               \"4.3.1\" #> datasets    NA                    NA      NA     NA               \"4.3.1\" #> foreign     NA                    NA      NA     \"yes\"            \"4.3.1\" #> graphics    NA                    NA      NA     \"yes\"            \"4.3.1\" #> grDevices   NA                    NA      NA     \"yes\"            \"4.3.1\" #> grid        NA                    NA      NA     \"yes\"            \"4.3.1\" #> KernSmooth  NA                    NA      NA     \"yes\"            \"4.3.1\" #> lattice     NA                    NA      NA     \"yes\"            \"4.3.1\" #> MASS        NA                    NA      NA     \"yes\"            \"4.3.1\" #> Matrix      NA                    NA      NA     \"yes\"            \"4.3.1\" #> methods     NA                    NA      NA     \"yes\"            \"4.3.1\" #> mgcv        NA                    NA      NA     \"yes\"            \"4.3.1\" #> nlme        NA                    NA      NA     \"yes\"            \"4.3.1\" #> nnet        NA                    NA      NA     \"yes\"            \"4.3.1\" #> parallel    NA                    NA      NA     \"yes\"            \"4.3.1\" #> rpart       NA                    NA      NA     \"yes\"            \"4.3.1\" #> spatial     NA                    NA      NA     \"yes\"            \"4.3.1\" #> splines     NA                    NA      NA     \"yes\"            \"4.3.1\" #> stats       NA                    NA      NA     \"yes\"            \"4.3.1\" #> stats4      NA                    NA      NA     NA               \"4.3.1\" #> survival    NA                    NA      NA     \"yes\"            \"4.3.1\" #> tcltk       NA                    NA      NA     \"yes\"            \"4.3.1\" #> tools       NA                    NA      NA     \"yes\"            \"4.3.1\" #> utils       NA                    NA      NA     \"yes\"            \"4.3.1\""},{"path":"https://github.com/jeksterslab/semmcci/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ivan Jacob Agaloos Pesigan. Author, maintainer, copyright holder. Shu Fai Cheung. Contributor.","code":""},{"path":"https://github.com/jeksterslab/semmcci/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pesigan, . J. . & Cheung, S. F. (2023). Monte Carlo Confidence Intervals Structural Equation Modeling. Behavior Research Methods. https://doi.org/10.3758/s13428-023-02114-4","code":"@Article{,   author = {Ivan Jacob Agaloos Pesigan and Shu Fai Cheung},   title = {Monte Carlo Confidence Intervals in Structural Equation Modeling},   year = {2023},   doi = {10.3758/s13428-023-02114-4},   journal = {Behavior Research Methods},   note = {R package version 1.1.0}, }"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"semmcci","dir":"","previous_headings":"","what":"Monte Carlo Confidence Intervals in Structural Equation Modeling","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"Ivan Jacob Agaloos Pesigan 2023-07-01","code":""},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"can install CRAN release semmcci : can install development version semmcci GitHub :","code":"install.packages(\"semmcci\") if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"jeksterslab/semmcci\")"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"Monte Carlo method, sampling distribution parameter estimates generated multivariate normal distribution using parameter estimates sampling variance-covariance matrix. Confidence intervals defined parameters generated obtaining percentiles corresponding 100(1 - α)% generated sampling distribution, α significance level. Monte Carlo confidence intervals free defined parameters models fitted structural equation modeling package lavaan can generated using semmcci package. package three main functions, namely, MC(), MCMI(), MCStd(). output lavaan passed first argument MC() function MCMI() function generate Monte Carlo confidence intervals. Monte Carlo confidence intervals standardized estimates can also generated passing output MC() function MCMI() function MCStd() function. description package code examples presented Pesigan Cheung (2023: https://doi.org/10.3758/s13428-023-02114-4).","code":""},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"common application Monte Carlo method generate confidence intervals indirect effect. simple mediation model, variable X effect variable Y, mediating variable M. mediating indirect effect product path coefficients fitted model.","code":"library(semmcci) library(lavaan)"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"data","dir":"","previous_headings":"Example","what":"Data","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"","code":"summary(df) #>        X                  M                  Y            #>  Min.   :-3.19956   Min.   :-3.37128   Min.   :-3.61432   #>  1st Qu.:-0.63268   1st Qu.:-0.70516   1st Qu.:-0.66921   #>  Median : 0.02823   Median : 0.02825   Median :-0.04833   #>  Mean   : 0.00269   Mean   :-0.01992   Mean   :-0.01538   #>  3rd Qu.: 0.65754   3rd Qu.: 0.65240   3rd Qu.: 0.65293   #>  Max.   : 3.47091   Max.   : 2.93497   Max.   : 3.09950   #>  NA's   :100        NA's   :100        NA's   :100"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"model-specification","dir":"","previous_headings":"Example","what":"Model Specification","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"monte-carlo-confidence-intervals","dir":"","previous_headings":"Example","what":"Monte Carlo Confidence Intervals","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"can now fit model using sem() function lavaan. use full-information maximum likelihood deal missing values. fit lavaan object can passed MC() function generate Monte Carlo confidence intervals.","code":"fit <- sem(data = df, model = model, missing = \"fiml\") mc <- MC(fit, R = 20000L, alpha = 0.05) mc #> Monte Carlo Confidence Intervals #>              est     se     R    2.5%  97.5% #> cp        0.2335 0.0294 20000  0.1755 0.2910 #> b         0.5113 0.0297 20000  0.4524 0.5687 #> a         0.4809 0.0283 20000  0.4251 0.5360 #> X~~X      1.0591 0.0493 20000  0.9610 1.1575 #> Y~~Y      0.5542 0.0269 20000  0.5014 0.6070 #> M~~M      0.7564 0.0362 20000  0.6869 0.8278 #> Y~1      -0.0127 0.0252 20000 -0.0617 0.0375 #> M~1      -0.0223 0.0292 20000 -0.0792 0.0350 #> X~1       0.0025 0.0339 20000 -0.0638 0.0691 #> indirect  0.2458 0.0202 20000  0.2073 0.2858 #> direct    0.2335 0.0294 20000  0.1755 0.2910 #> total     0.4794 0.0287 20000  0.4230 0.5357"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"monte-carlo-confidence-intervals---multiple-imputation","dir":"","previous_headings":"Example","what":"Monte Carlo Confidence Intervals - Multiple Imputation","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"MCMI() function can used handle missing values using multiple imputation. MCMI() accepts output mice::mice(), Amelia::amelia(), list multiply imputed data sets. example, impute multivariate missing data normal model. fit model using lavaan using default listwise deletion. fit lavaan object mi object can passed MCMI() function generate Monte Carlo confidence intervals.","code":"mi <- mice::mice(   df,   method = \"norm\",   m = 100,   print = FALSE,   seed = 42 ) fit <- sem(data = df, model = model) mcmi <- MCMI(fit, mi = mi, R = 20000L, alpha = 0.05, seed = 42) mcmi #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>             est     se     R   2.5%  97.5% #> cp       0.2328 0.0299 20000 0.1741 0.2917 #> b        0.5113 0.0301 20000 0.4529 0.5701 #> a        0.4811 0.0287 20000 0.4241 0.5374 #> X~~X     1.0617 0.0495 20000 0.9650 1.1591 #> Y~~Y     0.5533 0.0272 20000 0.5005 0.6069 #> M~~M     0.7568 0.0361 20000 0.6856 0.8278 #> indirect 0.2460 0.0204 20000 0.2070 0.2864 #> direct   0.2328 0.0299 20000 0.1741 0.2917 #> total    0.4788 0.0285 20000 0.4236 0.5349"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"standardized-monte-carlo-confidence-intervals","dir":"","previous_headings":"Example","what":"Standardized Monte Carlo Confidence Intervals","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCMI() function MCStd().","code":"MCStd(mc, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>              est     se     R   2.5%  97.5% #> cp        0.2409 0.0299 20000 0.1813 0.2991 #> b         0.5128 0.0271 20000 0.4582 0.5645 #> a         0.4946 0.0256 20000 0.4428 0.5428 #> X~~X      1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y      0.5568 0.0252 20000 0.5075 0.6057 #> M~~M      0.7554 0.0252 20000 0.7054 0.8039 #> indirect -0.0127 0.0189 20000 0.2167 0.2902 #> direct   -0.0222 0.0299 20000 0.1813 0.2991 #> total     0.0024 0.0259 20000 0.4424 0.5434 MCStd(mcmi, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2450 0.0307 20000 0.1802 0.3000 #> b        0.5189 0.0277 20000 0.4587 0.5663 #> a        0.5031 0.0260 20000 0.4429 0.5454 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y     0.5429 0.0250 20000 0.5071 0.6053 #> M~~M     0.7469 0.0258 20000 0.7026 0.8038 #> indirect 0.2610 0.0190 20000 0.2168 0.2915 #> direct   0.2450 0.0307 20000 0.1802 0.3000 #> total    0.5060 0.0261 20000 0.4416 0.5444"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"cite semmcci publications, please use: Pesigan, . J. ., & Cheung, S. F. (2023). Monte Carlo confidence intervals indirect effect missing data. Behavior Research Methods. https://doi.org/10.3758/s13428-023-02114-4","code":""},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"See GitHub Pages package documentation.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Confidence Intervals — MC","title":"Monte Carlo Confidence Intervals — MC","text":"Calculates Monte Carlo confidence intervals free defined parameters.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Confidence Intervals — MC","text":"","code":"MC(   lav,   R = 20000L,   alpha = c(0.001, 0.01, 0.05),   decomposition = \"eigen\",   pd = TRUE,   tol = 1e-06,   seed = NULL )"},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Confidence Intervals — MC","text":"lav Object class lavaan. R Positive integer. Number Monte Carlo replications. alpha Numeric vector. Significance level \\(\\alpha\\). decomposition Character string. Matrix decomposition sampling variance-covariance matrix data generation. decomposition = \"chol\", use Cholesky decomposition. decomposition = \"eigen\", use eigenvalue decomposition. decomposition = \"svd\", use singular value decomposition. pd Logical. pd = TRUE, check sampling variance-covariance matrix positive definite using tol. tol Numeric. Tolerance used pd. seed Integer. Random seed reproducibility.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Confidence Intervals — MC","text":"Returns object class semmcci list following elements: call Function call. args List function arguments. thetahat Parameter estimates \\(\\hat{\\theta}\\). thetahatstar Sampling distribution parameter estimates \\(\\hat{\\theta}^{\\ast}\\). fun Function used (\"MC\").","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Monte Carlo Confidence Intervals — MC","text":"sampling distribution parameter estimates generated multivariate normal distribution using parameter estimates sampling variance-covariance matrix. Confidence intervals free defined parameters generated using simulated sampling distribution. Parameters can defined using := operator lavaan model syntax.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Monte Carlo Confidence Intervals — MC","text":"MacKinnon, D. P., Lockwood, C. M., & Williams, J. (2004). Confidence limits indirect effect: Distribution product resampling methods. Multivariate Behavioral Research, 39(1), 99-128. doi:10.1207/s15327906mbr3901_4 Pesigan, . J. ., & Cheung, S. F. (2023). Monte Carlo confidence intervals indirect effect missing data. Behavior Research Methods. doi:10.3758/s13428-023-02114-4 Preacher, K. J., & Selig, J. P. (2012). Advantages Monte Carlo confidence intervals indirect effects. Communication Methods Measures, 6(2), 77–98. doi:10.1080/19312458.2012.679848","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Monte Carlo Confidence Intervals — MC","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte Carlo Confidence Intervals — MC","text":"","code":"library(semmcci) library(lavaan) #> This is lavaan 0.6-15 #> lavaan is FREE software! Please report any bugs.  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- MC(   fit,   R = 100L, # use a large value e.g., 20000L for actual research   alpha = 0.05 ) #> Monte Carlo Confidence Intervals #>                       est     se   R    2.5%  97.5% #> cp                 0.4894 0.2650 100 -0.0508 1.0035 #> b                  0.4358 0.1072 100  0.2016 0.6495 #> a                  0.3567 0.2831 100 -0.1700 0.8182 #> cond~~cond         0.2475 0.0269 100  0.1999 0.3029 #> reaction~~reaction 1.8674 0.2822 100  1.2644 2.3409 #> pmi~~pmi           1.7404 0.2515 100  1.1647 2.2166 #> reaction~1         0.8238 0.5751 100 -0.1926 2.0939 #> pmi~1              5.3804 0.1682 100  5.0513 5.6874 #> cond~1             0.4578 0.0400 100  0.3921 0.5442 #> indirect           0.1554 0.1305 100 -0.0777 0.4005 #> direct             0.4894 0.2650 100 -0.0508 1.0035 #> total              0.6448 0.3020 100  0.0202 1.1751"},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"Calculates Monte Carlo confidence intervals free defined parameters. Missing values handled using multilple imputation.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"","code":"MCMI(   lav,   mi,   R = 20000L,   alpha = c(0.001, 0.01, 0.05),   decomposition = \"eigen\",   pd = TRUE,   tol = 1e-06,   seed = NULL )"},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"lav Object class lavaan. mi Object class mids (output mice::mice()), object class amelia (output Amelia::amelia()), list multiply imputed data sets. R Positive integer. Number Monte Carlo replications. alpha Numeric vector. Significance level \\(\\alpha\\). decomposition Character string. Matrix decomposition sampling variance-covariance matrix data generation. decomposition = \"chol\", use Cholesky decomposition. decomposition = \"eigen\", use eigenvalue decomposition. decomposition = \"svd\", use singular value decomposition. pd Logical. pd = TRUE, check sampling variance-covariance matrix positive definite using tol. tol Numeric. Tolerance used pd. seed Integer. Random seed reproducibility.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"Returns object class semmcci list following elements: call Function call. args List function arguments. thetahat Parameter estimates \\(\\hat{\\theta}\\). thetahatstar Sampling distribution parameter estimates \\(\\hat{\\theta}^{\\ast}\\). fun Function used (\"MCMI\").","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"sampling distribution parameter estimates generated multivariate normal distribution using parameter estimates sampling variance-covariance matrix obtained using multiple imputation. Confidence intervals free defined parameters generated using simulated sampling distribution. Parameters can defined using := operator lavaan model syntax.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"Pesigan, . J. ., & Cheung, S. F. (2023). Monte Carlo confidence intervals indirect effect missing data. Behavior Research Methods. doi:10.3758/s13428-023-02114-4 Rubin, D. B. (1987). Multiple imputation nonresponse surveys. John Wiley & Sons, Inc.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ MCMI(   fit,   mi = mi,   R = 100L, # use a large value e.g., 20000L for actual research   alpha = 0.05 ) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>                       est     se   R    2.5%  97.5% #> cp                 0.1934 0.2334 100 -0.2694 0.5759 #> b                  0.4982 0.0879 100  0.3528 0.6742 #> a                  0.3470 0.2506 100 -0.1026 0.7787 #> cond~~cond         0.2491 0.0284 100  0.1969 0.2961 #> reaction~~reaction 1.9726 0.2727 100  1.4891 2.4279 #> pmi~~pmi           1.7044 0.1954 100  1.3923 2.1661 #> indirect           0.1738 0.1333 100 -0.0476 0.4414 #> direct             0.1934 0.2334 100 -0.2694 0.5759 #> total              0.3672 0.2699 100 -0.1534 0.8401"},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals — MCStd","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"Calculates standardized Monte Carlo confidence intervals free defined parameters.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"","code":"MCStd(mc, alpha = c(0.001, 0.01, 0.05))"},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"mc Output MC() MCMI() function. alpha Numeric vector. Significance level \\(\\alpha\\).","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"Returns object class semmcci list following elements: call Function call. args List function arguments. thetahat Parameter estimates \\(\\hat{\\theta}\\). thetahatstar Sampling distribution parameter estimates \\(\\hat{\\theta}^{\\ast}\\). fun Function used (\"MCStd\").","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"empirical sampling distribution parameter estimates argument mc standardized, , randomly generated vector parameters standardized. Defined parameters computed standardized component parameters. Confidence intervals generated using standardized empirical sampling distribution.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"Pesigan, . J. ., & Cheung, S. F. (2023). Monte Carlo confidence intervals indirect effect missing data. Behavior Research Methods. doi:10.3758/s13428-023-02114-4","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 100L, # use a large value e.g., 20000L for actual research   alpha = 0.05 )  ## Standardized Monte Carlo ------------------------------------------------ MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>                       est     se   R    2.5%  97.5% #> cp                 0.0609 0.1006 100 -0.1761 0.2108 #> b                  0.4152 0.0827 100  0.2374 0.5511 #> a                  0.2062 0.0975 100  0.0213 0.4070 #> cond~~cond         1.0000 0.0000 100  1.0000 1.0000 #> reaction~~reaction 0.8135 0.0615 100  0.6838 0.9154 #> pmi~~pmi           0.9575 0.0440 100  0.8341 0.9992 #> indirect           0.4498 0.0445 100  0.0085 0.1697 #> direct             4.0110 0.1006 100 -0.1761 0.2108 #> total              0.9761 0.0978 100 -0.0865 0.3213  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 100L, # use a large value e.g., 20000L for actual research   alpha = 0.05 )  ## Standardized Monte Carlo ------------------------------------------------ MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>                        est     se   R    2.5%  97.5% #> cp                 -0.0026 0.0945 100 -0.1055 0.2762 #> b                   0.4214 0.0808 100  0.2337 0.5419 #> a                   0.1746 0.0881 100  0.0128 0.3241 #> cond~~cond          1.0000 0.0000 100  1.0000 1.0000 #> reaction~~reaction  0.8228 0.0611 100  0.6727 0.9358 #> pmi~~pmi            0.9695 0.0344 100  0.8950 0.9983 #> indirect            0.0736 0.0383 100  0.0041 0.1424 #> direct             -0.0026 0.0945 100 -0.1055 0.2762 #> total               0.0710 0.0925 100 -0.0420 0.3570"},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Estimates — coef.semmcci","title":"Parameter Estimates — coef.semmcci","text":"Parameter Estimates","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Estimates — coef.semmcci","text":"","code":"# S3 method for semmcci coef(object, ...)"},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Estimates — coef.semmcci","text":"object Object class semmcci. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Estimates — coef.semmcci","text":"Returns vector parameter estimates.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parameter Estimates — coef.semmcci","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter Estimates — coef.semmcci","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 100L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) coef(unstd) #>                 cp                  b                  a         cond~~cond  #>         0.04952124         0.57917837         0.38386506         0.24865524  #> reaction~~reaction           pmi~~pmi         reaction~1              pmi~1  #>         1.73835989         1.78608384         0.22441614         5.37332137  #>             cond~1           indirect             direct              total  #>         0.46518997         0.22232634         0.04952124         0.27184758  coef(std) #>                 cp                  b                  a         cond~~cond  #>         0.01608846         0.50944441         0.14178065         1.00000000  #> reaction~~reaction           pmi~~pmi         reaction~1              pmi~1  #>         0.73788344         0.97989825         0.14621036         3.97999371  #>             cond~1           indirect             direct              total  #>         0.93289236         0.07222936         0.01608846         0.08831781   # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 100L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) coef(unstd) #>                 cp                  b                  a         cond~~cond  #>         0.09843461         0.58292360         0.41990424         0.24852933  #> reaction~~reaction           pmi~~pmi           indirect             direct  #>         1.77068149         1.71945460         0.24467429         0.09843461  #>              total  #>         0.34310890  coef(std) #>                 cp                  b                  a         cond~~cond  #>        -0.01224136         0.50632161         0.13152092         1.00000000  #> reaction~~reaction           pmi~~pmi           indirect             direct  #>         0.74511893         0.98270225         0.06659189        -0.01224136  #>              total  #>         0.05435053"},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"Monte Carlo Confidence Intervals Parameter Estimates","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"","code":"# S3 method for semmcci confint(object, parm = NULL, level = 0.95, ...)"},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"object Object class semmcci. parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. level confidence level required. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"Returns matrix confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 100L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) confint(unstd) #>                          2.5 %    97.5 % #> cp                 -0.14955742 1.0706821 #> b                   0.30547243 0.6868201 #> a                  -0.14159534 0.7653173 #> cond~~cond          0.18342472 0.3016393 #> reaction~~reaction  1.41667867 2.5244482 #> pmi~~pmi            1.15555518 2.0557096 #> reaction~1         -0.63363066 1.4885339 #> pmi~1               5.15028169 5.7793715 #> cond~1              0.36943362 0.5597697 #> indirect           -0.06475220 0.4273953 #> direct             -0.14955742 1.0706821 #> total               0.02740001 1.2600873 confint(std) #>                           2.5 %    97.5 % #> cp                 -0.051098700 0.3158548 #> b                   0.285651705 0.5643753 #> a                  -0.050614898 0.2803197 #> cond~~cond          1.000000000 1.0000000 #> reaction~~reaction  0.647922671 0.8930743 #> pmi~~pmi            0.921370658 0.9999163 #> indirect           -0.020660200 0.1351427 #> direct             -0.051098700 0.3158548 #> total               0.008558295 0.3797038  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 100L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) confint(unstd) #>                          2.5 %    97.5 % #> cp                  0.02262477 0.9621317 #> b                   0.27338894 0.6379253 #> a                  -0.14759417 0.8219769 #> cond~~cond          0.18949832 0.3009322 #> reaction~~reaction  1.38611782 2.3821633 #> pmi~~pmi            1.23575494 2.0926682 #> indirect           -0.08568780 0.4031538 #> direct              0.02262477 0.9621317 #> total               0.08141188 1.0993551 confint(std) #>                           2.5 %    97.5 % #> cp                  0.007112478 0.3124209 #> b                   0.229103675 0.5087148 #> a                  -0.057526509 0.3014977 #> cond~~cond          1.000000000 1.0000000 #> reaction~~reaction  0.694192597 0.8848101 #> pmi~~pmi            0.908700415 0.9998867 #> indirect           -0.025818304 0.1273052 #> direct              0.007112478 0.3124209 #> total               0.026844205 0.3493191"},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for Object of Class semmcci — print.semmcci","title":"Print Method for Object of Class semmcci — print.semmcci","text":"Print Method Object Class semmcci","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for Object of Class semmcci — print.semmcci","text":"","code":"# S3 method for semmcci print(x, alpha = NULL, digits = 4, ...)"},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for Object of Class semmcci — print.semmcci","text":"x object class semmcci. alpha Numeric vector. Significance level \\(\\alpha\\). alpha = NULL, use argument alpha used x. digits Integer indicating number decimal places display. ... arguments.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Method for Object of Class semmcci — print.semmcci","text":"Returns matrix estimates, standard errors, number Monte Carlo replications, confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print Method for Object of Class semmcci — print.semmcci","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Method for Object of Class semmcci — print.semmcci","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 100L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) print(unstd) #> Monte Carlo Confidence Intervals #>                       est     se   R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.2419 0.3117 100 -0.8247 -0.6097 -0.3339 0.9243 1.0302 #> b                  0.4875 0.1060 100  0.2286  0.2299  0.2528 0.6584 0.7140 #> a                  0.4645 0.2777 100 -0.1081 -0.1061  0.0116 1.0752 1.1592 #> cond~~cond         0.2500 0.0358 100  0.1390  0.1423  0.1597 0.3158 0.3279 #> reaction~~reaction 1.9477 0.2621 100  1.2549  1.3996  1.5953 2.4768 2.5701 #> pmi~~pmi           1.6476 0.2112 100  1.1259  1.1756  1.2630 2.0563 2.0834 #> reaction~1         0.6029 0.5926 100 -0.6883 -0.5524 -0.3473 1.8870 2.0392 #> pmi~1              5.3685 0.1757 100  4.9541  4.9643  5.0021 5.6739 5.7424 #> cond~1             0.4892 0.0419 100  0.4000  0.4004  0.4203 0.5694 0.5936 #> indirect           0.2264 0.1466 100 -0.0518 -0.0448  0.0038 0.5540 0.7235 #> direct             0.2419 0.3117 100 -0.8247 -0.6097 -0.3339 0.9243 1.0302 #> total              0.4683 0.3292 100 -0.3552 -0.3023 -0.0447 1.1135 1.2678 #>                    99.95% #> cp                 1.0509 #> b                  0.7144 #> a                  1.1600 #> cond~~cond         0.3380 #> reaction~~reaction 2.6065 #> pmi~~pmi           2.0865 #> reaction~1         2.1283 #> pmi~1              5.7484 #> cond~1             0.6024 #> indirect           0.8163 #> direct             1.0509 #> total              1.3342 print(std) #> Standardized Monte Carlo Confidence Intervals #>                       est     se   R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.0782 0.0981 100 -0.2808 -0.2064 -0.1038 0.2836 0.3399 #> b                  0.4110 0.0864 100  0.1748  0.1898  0.2118 0.5621 0.5892 #> a                  0.1781 0.1030 100 -0.0387 -0.0368  0.0057 0.3906 0.4119 #> cond~~cond         1.0000 0.0000 100  1.0000  1.0000  1.0000 1.0000 1.0000 #> reaction~~reaction 0.8136 0.0668 100  0.6257  0.6372  0.6589 0.9353 0.9440 #> pmi~~pmi           0.9683 0.0399 100  0.8243  0.8303  0.8474 0.9996 0.9999 #> indirect           0.3897 0.0459 100 -0.0152 -0.0137  0.0015 0.1766 0.2261 #> direct             4.1155 0.0981 100 -0.2808 -0.2064 -0.1038 0.2836 0.3399 #> total              0.9783 0.1021 100 -0.1209 -0.1021 -0.0143 0.3555 0.3993 #>                    99.95% #> cp                 0.3413 #> b                  0.6002 #> a                  0.4191 #> cond~~cond         1.0000 #> reaction~~reaction 0.9481 #> pmi~~pmi           1.0000 #> indirect           0.2499 #> direct             0.3413 #> total              0.4278  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 100L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) print(unstd) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>                       est     se   R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.2864 0.2713 100 -0.3030 -0.2958 -0.2300 0.8131 0.9276 #> b                  0.4655 0.1162 100  0.2039  0.2131  0.2716 0.6688 0.6815 #> a                  0.4215 0.2769 100 -0.3543 -0.2754 -0.1142 0.8513 1.0728 #> cond~~cond         0.2495 0.0295 100  0.1874  0.1898  0.1942 0.3097 0.3128 #> reaction~~reaction 1.9553 0.2629 100  1.4039  1.4277  1.4605 2.5099 2.5802 #> pmi~~pmi           1.6323 0.2286 100  1.1392  1.1431  1.2036 2.1584 2.2198 #> indirect           0.1994 0.1498 100 -0.1806 -0.1337 -0.0399 0.4962 0.6690 #> direct             0.2864 0.2713 100 -0.3030 -0.2958 -0.2300 0.8131 0.9276 #> total              0.4858 0.2911 100 -0.1127 -0.1021 -0.0647 1.0255 1.0806 #>                    99.95% #> cp                 0.9948 #> b                  0.6864 #> a                  1.0943 #> cond~~cond         0.3131 #> reaction~~reaction 2.6021 #> pmi~~pmi           2.2358 #> indirect           0.6989 #> direct             0.9948 #> total              1.0967 print(std) #> Standardized Monte Carlo Confidence Intervals #>                       est     se   R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.0284 0.0897 100 -0.0951 -0.0949 -0.0753 0.2666 0.3096 #> b                  0.3968 0.0887 100  0.1767  0.1817  0.2297 0.5515 0.5722 #> a                  0.1885 0.1067 100 -0.1290 -0.0993 -0.0454 0.3346 0.3829 #> cond~~cond         1.0000 0.0000 100  1.0000  1.0000  1.0000 1.0000 1.0000 #> reaction~~reaction 0.8375 0.0668 100  0.6391  0.6474  0.6593 0.9224 0.9450 #> pmi~~pmi           0.9645 0.0339 100  0.8319  0.8524  0.8880 1.0000 1.0000 #> indirect           0.0748 0.0467 100 -0.0564 -0.0430 -0.0126 0.1632 0.1977 #> direct             0.0284 0.0897 100 -0.0951 -0.0949 -0.0753 0.2666 0.3096 #> total              0.1032 0.0953 100 -0.0382 -0.0344 -0.0218 0.3279 0.3613 #>                    99.95% #> cp                 0.3213 #> b                  0.5805 #> a                  0.4098 #> cond~~cond         1.0000 #> reaction~~reaction 0.9453 #> pmi~~pmi           1.0000 #> indirect           0.2089 #> direct             0.3213 #> total              0.3688"},{"path":"https://github.com/jeksterslab/semmcci/reference/semmcci-package.html","id":null,"dir":"Reference","previous_headings":"","what":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling — semmcci-package","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling — semmcci-package","text":"Monte Carlo confidence intervals free defined parameters models fitted structural equation modeling package 'lavaan' can generated using 'semmcci' package. 'semmcci' three main functions, namely, MC(), MCMI(), MCStd(). output 'lavaan' passed first argument MC() function MCMI() function generate Monte Carlo confidence intervals. Monte Carlo confidence intervals standardized estimates can also generated passing output MC() function MCMI() function MCStd() function. description package code examples presented Pesigan Cheung (2023) doi:10.3758/s13428-023-02114-4 .","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/reference/semmcci-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling — semmcci-package","text":"Maintainer: Ivan Jacob Agaloos Pesigan r.jeksterslab@gmail.com (ORCID) [copyright holder] contributors: Shu Fai Cheung shufai.cheung@gmail.com (ORCID) [contributor]","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Method for an Object of Class semmcci — summary.semmcci","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"Summary Method Object Class semmcci","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"","code":"# S3 method for semmcci summary(object, alpha = NULL, digits = 4, ...)"},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"object Object class semmcci. alpha Numeric vector. Significance level \\(\\alpha\\). alpha = NULL, use argument alpha used object. digits Digits print. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"Returns matrix estimates, standard errors, number Monte Carlo replications, confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 100L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) summary(unstd) #> Monte Carlo Confidence Intervals #>                       est     se   R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.1365 0.3108 100 -0.5375 -0.5295 -0.4923 0.6328 0.8497 #> b                  0.5243 0.1032 100  0.3024  0.3061  0.3557 0.7352 0.7712 #> a                  0.5050 0.2536 100 -0.1754 -0.1503  0.0347 0.9238 1.0959 #> cond~~cond         0.2491 0.0376 100  0.1655  0.1707  0.1876 0.3240 0.3433 #> reaction~~reaction 1.9158 0.2642 100  1.1930  1.2027  1.3801 2.3519 2.5032 #> pmi~~pmi           1.6912 0.2339 100  1.1494  1.1870  1.3193 2.2382 2.2957 #> reaction~1         0.4264 0.5765 100 -0.8822 -0.8171 -0.7211 1.4512 1.6301 #> pmi~1              5.3514 0.1824 100  4.9065  4.9121  5.0019 5.6759 5.7497 #> cond~1             0.4791 0.0476 100  0.3504  0.3543  0.3982 0.5676 0.5743 #> indirect           0.2648 0.1449 100 -0.0775 -0.0737  0.0208 0.5489 0.5787 #> direct             0.1365 0.3108 100 -0.5375 -0.5295 -0.4923 0.6328 0.8497 #> total              0.4013 0.3171 100 -0.3631 -0.3433 -0.2716 0.8880 1.2064 #>                    99.95% #> cp                 1.0307 #> b                  0.7872 #> a                  1.1014 #> cond~~cond         0.3445 #> reaction~~reaction 2.5092 #> pmi~~pmi           2.2971 #> reaction~1         1.6323 #> pmi~1              5.7944 #> cond~1             0.5764 #> indirect           0.5849 #> direct             1.0307 #> total              1.3757 summary(std) #> Standardized Monte Carlo Confidence Intervals #>                       est     se   R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.0438 0.1002 100 -0.1803 -0.1733 -0.1643 0.2109 0.2528 #> b                  0.4463 0.0801 100  0.2851  0.2863  0.3048 0.5968 0.6214 #> a                  0.1903 0.0928 100 -0.0687 -0.0553  0.0130 0.3435 0.4065 #> cond~~cond         1.0000 0.0000 100  1.0000  1.0000  1.0000 1.0000 1.0000 #> reaction~~reaction 0.7914 0.0687 100  0.5878  0.6089  0.6385 0.8783 0.8923 #> pmi~~pmi           0.9638 0.0347 100  0.8197  0.8344  0.8813 0.9995 0.9998 #> indirect           0.2741 0.0467 100 -0.0275 -0.0238  0.0062 0.1720 0.2036 #> direct             4.0398 0.1002 100 -0.1803 -0.1733 -0.1643 0.2109 0.2528 #> total              0.9600 0.1022 100 -0.1230 -0.1150 -0.0887 0.2897 0.3501 #>                    99.95% #> cp                 0.2884 #> b                  0.6384 #> a                  0.4245 #> cond~~cond         1.0000 #> reaction~~reaction 0.9019 #> pmi~~pmi           0.9998 #> indirect           0.2198 #> direct             0.2884 #> total              0.3841  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 100L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) summary(unstd) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>                       est     se   R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.1246 0.2849 100 -0.7952 -0.6922 -0.4341 0.6000 0.7181 #> b                  0.5262 0.1090 100  0.3068  0.3172  0.3555 0.7149 0.7990 #> a                  0.5086 0.3057 100 -0.1205 -0.1181 -0.0830 1.1100 1.1897 #> cond~~cond         0.2493 0.0284 100  0.1657  0.1700  0.1949 0.2962 0.3138 #> reaction~~reaction 1.9478 0.2742 100  1.1996  1.2463  1.3982 2.4187 2.5870 #> pmi~~pmi           1.7237 0.2507 100  1.0858  1.1101  1.2465 2.1834 2.3082 #> indirect           0.2697 0.1981 100 -0.0639 -0.0599 -0.0477 0.7520 0.8082 #> direct             0.1246 0.2849 100 -0.7952 -0.6922 -0.4341 0.6000 0.7181 #> total              0.3944 0.2761 100 -0.2911 -0.2563 -0.1479 0.8936 0.9639 #>                    99.95% #> cp                 0.7185 #> b                  0.8298 #> a                  1.2326 #> cond~~cond         0.3173 #> reaction~~reaction 2.6144 #> pmi~~pmi           2.3655 #> indirect           0.8471 #> direct             0.7185 #> total              0.9769 summary(std) #> Standardized Monte Carlo Confidence Intervals #>                       est     se   R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.0229 0.0910 100 -0.2492 -0.2111 -0.1450 0.1977 0.2169 #> b                  0.4884 0.0865 100  0.2801  0.2913  0.3079 0.6267 0.6721 #> a                  0.2160 0.1086 100 -0.0524 -0.0479 -0.0320 0.3959 0.4088 #> cond~~cond         1.0000 0.0000 100  1.0000  1.0000  1.0000 1.0000 1.0000 #> reaction~~reaction 0.7561 0.0771 100  0.5572  0.5771  0.6064 0.8957 0.9011 #> pmi~~pmi           0.9533 0.0420 100  0.8310  0.8328  0.8432 0.9999 1.0000 #> indirect           0.1055 0.0599 100 -0.0221 -0.0200 -0.0148 0.2285 0.2472 #> direct             0.0229 0.0910 100 -0.2492 -0.2111 -0.1450 0.1977 0.2169 #> total              0.1284 0.0872 100 -0.0912 -0.0782 -0.0440 0.2737 0.2978 #>                    99.95% #> cp                 0.2287 #> b                  0.6914 #> a                  0.4111 #> cond~~cond         1.0000 #> reaction~~reaction 0.9029 #> pmi~~pmi           1.0000 #> indirect           0.2483 #> direct             0.2287 #> total              0.3119"},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"Sampling Covariance Matrix Parameter Estimates","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"","code":"# S3 method for semmcci vcov(object, ...)"},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"object Object class semmcci. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"Returns matrix variance-covariance matrix parameter estimates.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 100L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) vcov(unstd) #>                               cp             b             a    cond~~cond #> cp                  0.0831419480 -4.646637e-03  0.0017847288  9.093732e-04 #> b                  -0.0046466375  1.037562e-02 -0.0012307050 -7.827987e-04 #> a                   0.0017847288 -1.230705e-03  0.0631127477 -5.965913e-04 #> cond~~cond          0.0009093732 -7.827987e-04 -0.0005965913  1.140643e-03 #> reaction~~reaction -0.0217432326 -2.272874e-03  0.0023523395  5.303339e-04 #> pmi~~pmi           -0.0080766580 -5.045951e-03 -0.0014741610  6.691793e-04 #> reaction~1         -0.0081086228 -5.481303e-02  0.0017089764  3.483842e-03 #> pmi~1               0.0003467297 -8.973759e-04 -0.0269381030  3.594071e-04 #> cond~1             -0.0002078192 -4.691101e-05  0.0010017284 -1.624035e-05 #> indirect           -0.0003926934  3.433362e-03  0.0321961672 -6.356603e-04 #> direct              0.0831419480 -4.646637e-03  0.0017847288  9.093732e-04 #> total               0.0827492546 -1.213276e-03  0.0339808960  2.737129e-04 #>                    reaction~~reaction      pmi~~pmi    reaction~1         pmi~1 #> cp                      -0.0217432326 -0.0080766580 -0.0081086228  3.467297e-04 #> b                       -0.0022728741 -0.0050459511 -0.0548130295 -8.973759e-04 #> a                        0.0023523395 -0.0014741610  0.0017089764 -2.693810e-02 #> cond~~cond               0.0005303339  0.0006691793  0.0034838415  3.594071e-04 #> reaction~~reaction       0.0742325548  0.0062238530  0.0165849233  1.306544e-03 #> pmi~~pmi                 0.0062238530  0.0638939688  0.0333357001 -1.755779e-03 #> reaction~1               0.0165849233  0.0333357001  0.3179763444  2.914318e-03 #> pmi~1                    0.0013065441 -0.0017557792  0.0029143180  2.795084e-02 #> cond~1                   0.0005721675  0.0002764573  0.0001810841 -1.068797e-05 #> indirect                 0.0007028797 -0.0034142638 -0.0206458846 -1.414358e-02 #> direct                  -0.0217432326 -0.0080766580 -0.0081086228  3.467297e-04 #> total                   -0.0210403529 -0.0114909217 -0.0287545074 -1.379685e-02 #>                           cond~1      indirect        direct         total #> cp                 -2.078192e-04 -0.0003926934  0.0831419480  0.0827492546 #> b                  -4.691101e-05  0.0034333619 -0.0046466375 -0.0012132755 #> a                   1.001728e-03  0.0321961672  0.0017847288  0.0339808960 #> cond~~cond         -1.624035e-05 -0.0006356603  0.0009093732  0.0002737129 #> reaction~~reaction  5.721675e-04  0.0007028797 -0.0217432326 -0.0210403529 #> pmi~~pmi            2.764573e-04 -0.0034142638 -0.0080766580 -0.0114909217 #> reaction~1          1.810841e-04 -0.0206458846 -0.0081086228 -0.0287545074 #> pmi~1              -1.068797e-05 -0.0141435795  0.0003467297 -0.0137968498 #> cond~1              2.116263e-03  0.0005390288 -0.0002078192  0.0003312096 #> indirect            5.390288e-04  0.0186002036 -0.0003926934  0.0182075102 #> direct             -2.078192e-04 -0.0003926934  0.0831419480  0.0827492546 #> total               3.312096e-04  0.0182075102  0.0827492546  0.1009567649 vcov(std) #>                               cp             b             a    cond~~cond #> cp                  8.460125e-03 -1.163679e-03  2.604808e-04  4.363857e-19 #> b                  -1.163679e-03  5.615108e-03 -3.243388e-04 -1.768151e-18 #> a                   2.604808e-04 -3.243388e-04  8.939767e-03  4.065361e-19 #> cond~~cond          4.363857e-19 -1.768151e-18  4.065361e-19  1.518956e-32 #> reaction~~reaction -5.687678e-04 -4.571521e-03 -1.266348e-04  1.549263e-18 #> pmi~~pmi           -3.754277e-04  2.395848e-04 -2.762855e-03 -1.331489e-19 #> indirect           -6.015985e-05  6.450961e-04  3.828531e-03 -4.327175e-20 #> direct              8.460125e-03 -1.163679e-03  2.604808e-04  4.363857e-19 #> total               8.399966e-03 -5.185830e-04  4.089011e-03  3.931140e-19 #>                    reaction~~reaction      pmi~~pmi      indirect        direct #> cp                      -5.687678e-04 -3.754277e-04 -6.015985e-05  8.460125e-03 #> b                       -4.571521e-03  2.395848e-04  6.450961e-04 -1.163679e-03 #> a                       -1.266348e-04 -2.762855e-03  3.828531e-03  2.604808e-04 #> cond~~cond               1.549263e-18 -1.331489e-19 -4.327175e-20  4.363857e-19 #> reaction~~reaction       4.278631e-03 -1.938155e-05 -6.901311e-04 -5.687678e-04 #> pmi~~pmi                -1.938155e-05  9.876143e-04 -1.161468e-03 -3.754277e-04 #> indirect                -6.901311e-04 -1.161468e-03  1.793571e-03 -6.015985e-05 #> direct                  -5.687678e-04 -3.754277e-04 -6.015985e-05  8.460125e-03 #> total                   -1.258899e-03 -1.536896e-03  1.733411e-03  8.399966e-03 #>                            total #> cp                  8.399966e-03 #> b                  -5.185830e-04 #> a                   4.089011e-03 #> cond~~cond          3.931140e-19 #> reaction~~reaction -1.258899e-03 #> pmi~~pmi           -1.536896e-03 #> indirect            1.733411e-03 #> direct              8.399966e-03 #> total               1.013338e-02  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 100L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) vcov(unstd) #>                               cp             b             a    cond~~cond #> cp                  7.720201e-02  5.147011e-04 -0.0167806459 -4.028262e-05 #> b                   5.147011e-04  1.066779e-02 -0.0001621841  1.899154e-04 #> a                  -1.678065e-02 -1.621841e-04  0.0956401510  2.144149e-04 #> cond~~cond         -4.028262e-05  1.899154e-04  0.0002144149  1.144868e-03 #> reaction~~reaction  1.013195e-02  4.533722e-05 -0.0225096196  1.106222e-03 #> pmi~~pmi           -1.019084e-02 -2.694270e-03 -0.0132826205  2.956937e-05 #> indirect           -7.159467e-03  2.920406e-03  0.0485796062  1.712269e-04 #> direct              7.720201e-02  5.147011e-04 -0.0167806459 -4.028262e-05 #> total               7.004254e-02  3.435107e-03  0.0317989603  1.309443e-04 #>                    reaction~~reaction      pmi~~pmi      indirect        direct #> cp                       1.013195e-02 -1.019084e-02 -0.0071594667  7.720201e-02 #> b                        4.533722e-05 -2.694270e-03  0.0029204057  5.147011e-04 #> a                       -2.250962e-02 -1.328262e-02  0.0485796062 -1.678065e-02 #> cond~~cond               1.106222e-03  2.956937e-05  0.0001712269 -4.028262e-05 #> reaction~~reaction       6.308992e-02  1.230190e-02 -0.0117464537  1.013195e-02 #> pmi~~pmi                 1.230190e-02  7.145785e-02 -0.0070789954 -1.019084e-02 #> indirect                -1.174645e-02 -7.078995e-03  0.0265525456 -7.159467e-03 #> direct                   1.013195e-02 -1.019084e-02 -0.0071594667  7.720201e-02 #> total                   -1.614501e-03 -1.726983e-02  0.0193930789  7.004254e-02 #>                            total #> cp                  0.0700425410 #> b                   0.0034351068 #> a                   0.0317989603 #> cond~~cond          0.0001309443 #> reaction~~reaction -0.0016145013 #> pmi~~pmi           -0.0172698347 #> indirect            0.0193930789 #> direct              0.0700425410 #> total               0.0894356199 vcov(std) #>                               cp             b             a    cond~~cond #> cp                  7.629079e-03 -1.125340e-03 -1.483523e-03  1.812733e-19 #> b                  -1.125340e-03  5.530153e-03  4.614244e-04  9.278141e-19 #> a                  -1.483523e-03  4.614244e-04  1.271762e-02 -1.129346e-18 #> cond~~cond          1.812733e-19  9.278141e-19 -1.129346e-18  1.730613e-32 #> reaction~~reaction -8.801887e-04 -4.937190e-03 -9.838709e-04 -7.256995e-19 #> pmi~~pmi            2.629252e-04  1.215611e-04 -2.960661e-03  3.733401e-19 #> indirect           -7.301432e-04  8.189505e-04  5.677602e-03 -4.054144e-19 #> direct              7.629079e-03 -1.125340e-03 -1.483523e-03  1.812733e-19 #> total               6.898936e-03 -3.063899e-04  4.194080e-03 -2.241411e-19 #>                    reaction~~reaction      pmi~~pmi      indirect        direct #> cp                      -8.801887e-04  2.629252e-04 -7.301432e-04  7.629079e-03 #> b                       -4.937190e-03  1.215611e-04  8.189505e-04 -1.125340e-03 #> a                       -9.838709e-04 -2.960661e-03  5.677602e-03 -1.483523e-03 #> cond~~cond              -7.256995e-19  3.733401e-19 -4.054144e-19  1.812733e-19 #> reaction~~reaction       5.112947e-03  1.348042e-06 -1.027539e-03 -8.801887e-04 #> pmi~~pmi                 1.348042e-06  9.878019e-04 -1.287031e-03  2.629252e-04 #> indirect                -1.027539e-03 -1.287031e-03  2.685633e-03 -7.301432e-04 #> direct                  -8.801887e-04  2.629252e-04 -7.301432e-04  7.629079e-03 #> total                   -1.907728e-03 -1.024106e-03  1.955490e-03  6.898936e-03 #>                            total #> cp                  6.898936e-03 #> b                  -3.063899e-04 #> a                   4.194080e-03 #> cond~~cond         -2.241411e-19 #> reaction~~reaction -1.907728e-03 #> pmi~~pmi           -1.024106e-03 #> indirect            1.955490e-03 #> direct              6.898936e-03 #> total               8.854426e-03"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"minor-1-1-0","dir":"Changelog","previous_headings":"","what":"Minor","title":"semmcci 1.1.0","text":"Added MCMI() function.","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"semmcci-104","dir":"Changelog","previous_headings":"","what":"semmcci 1.0.4","title":"semmcci 1.0.4","text":"CRAN release: 2022-12-17","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"patch-1-0-4","dir":"Changelog","previous_headings":"","what":"Patch","title":"semmcci 1.0.4","text":"Minor refactoring data generation functions.","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"semmcci-103","dir":"Changelog","previous_headings":"","what":"semmcci 1.0.3","title":"semmcci 1.0.3","text":"CRAN release: 2022-10-16","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"patch-1-0-3","dir":"Changelog","previous_headings":"","what":"Patch","title":"semmcci 1.0.3","text":"Added decomposition, pd, tol arguments MC().","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"semmcci-102","dir":"Changelog","previous_headings":"","what":"semmcci 1.0.2","title":"semmcci 1.0.2","text":"CRAN release: 2022-10-04","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"patch-1-0-2","dir":"Changelog","previous_headings":"","what":"Patch","title":"semmcci 1.0.2","text":"Random variates multivatiate normal distribution generated using Cholesky decomposition sampling variance-covariance matrix. Eigen decomposition used Cholesky decomposition fails. NA returned calculation defined parameter fails MC(). NA returned standardization fails MCStd(). Added methods.","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"semmcci-101","dir":"Changelog","previous_headings":"","what":"semmcci 1.0.1","title":"semmcci 1.0.1","text":"CRAN release: 2022-09-13","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"patch-1-0-1","dir":"Changelog","previous_headings":"","what":"Patch","title":"semmcci 1.0.1","text":"Initial CRAN release.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"major-1-0-0","dir":"Changelog","previous_headings":"","what":"Major","title":"semmcci 1.0.0","text":"Initial CRAN submission.","code":""}]

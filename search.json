[{"path":"https://github.com/jeksterslab/semmcci/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Ivan Jacob Agaloos Pesigan Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"n <- 1000 a <- 0.50 b <- 0.50 cp <- 0.25 s2_em <- 1 - a^2 s2_ey <- 1 - cp^2 - a^2 * b^2 - b^2 * s2_em - 2 * cp * a * b em <- rnorm(n = n, mean = 0, sd = sqrt(s2_em)) ey <- rnorm(n = n, mean = 0, sd = sqrt(s2_ey)) X <- rnorm(n = n) M <- a * X + em Y <- cp * X + b * M + ey df <- data.frame(X, M, Y)"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"can now fit model using sem() function lavaan.","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"fit lavaan object can passed MC() function semmcci generate Monte Carlo confidence intervals.","code":"MC(fit, R = 100L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>             est     se   R   2.5%  97.5% #> cp       0.2333 0.0241 100 0.1897 0.2790 #> b        0.5082 0.0297 100 0.4464 0.5603 #> a        0.4820 0.0268 100 0.4292 0.5275 #> X~~X     1.0590 0.0515 100 0.9587 1.1619 #> Y~~Y     0.5462 0.0234 100 0.5032 0.5858 #> M~~M     0.7527 0.0321 100 0.6901 0.8086 #> indirect 0.2449 0.0201 100 0.2087 0.2816 #> direct   0.2333 0.0241 100 0.1897 0.2790 #> total    0.4782 0.0262 100 0.4282 0.5315"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"nonparametric-bootstrap-confidence-intervals","dir":"Articles","previous_headings":"","what":"Nonparametric Bootstrap Confidence Intervals","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"Nonparametric bootstrap confidence intervals can generated lavaan using following.","code":"parameterEstimates(   sem(     data = df,     model = model,     se = \"bootstrap\",     bootstrap = 100L   ) ) #>        lhs op      rhs    label   est    se      z pvalue ci.lower ci.upper #> 1        Y  ~        X       cp 0.233 0.029  7.992      0    0.173    0.291 #> 2        Y  ~        M        b 0.508 0.026 19.278      0    0.455    0.567 #> 3        M  ~        X        a 0.482 0.028 17.060      0    0.416    0.537 #> 4        X ~~        X          1.059 0.042 25.167      0    0.984    1.149 #> 5        Y ~~        Y          0.546 0.023 23.249      0    0.498    0.588 #> 6        M ~~        M          0.753 0.033 22.524      0    0.672    0.819 #> 7 indirect :=      a*b indirect 0.245 0.019 13.024      0    0.212    0.283 #> 8   direct :=       cp   direct 0.233 0.029  7.952      0    0.173    0.291 #> 9    total := cp+(a*b)    total 0.478 0.032 15.109      0    0.413    0.541"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"arguments","dir":"Articles","previous_headings":"Benchmark","what":"Arguments","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"benchmark_complete_01 <- microbenchmark(   MC = {     fit <- sem(       data = df,       model = model     )     MC(       fit,       R = R,       decomposition = \"chol\",       pd = FALSE     )   },   NB = sem(     data = df,     model = model,     se = \"bootstrap\",     bootstrap = B   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"summary-of-benchmark-results","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"summary(benchmark_complete_01, unit = \"ms\") #>   expr        min         lq        mean      median         uq        max #> 1   MC    65.3722    65.8291    66.76137    66.32675    67.4455    70.1746 #> 2   NB 11741.5678 11793.9952 11844.39793 11867.91155 11884.0999 11951.7377 #>   neval #> 1    10 #> 2    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"summary-of-benchmark-results-relative-to-the-faster-method","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"summary(benchmark_complete_01, unit = \"relative\") #>   expr     min       lq     mean  median      uq      max neval #> 1   MC   1.000   1.0000   1.0000   1.000   1.000   1.0000    10 #> 2   NB 179.611 179.1608 177.4139 178.931 176.203 170.3143    10"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"benchmark---monte-carlo-method-with-precalculated-estimates","dir":"Articles","previous_headings":"","what":"Benchmark - Monte Carlo Method with Precalculated Estimates","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"fit <- sem(   data = df,   model = model ) benchmark_complete_02 <- microbenchmark(   MC = MC(     fit,     R = R,     decomposition = \"chol\",     pd = FALSE   ),   NB = sem(     data = df,     model = model,     se = \"bootstrap\",     bootstrap = B   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"summary-of-benchmark-results-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"summary(benchmark_complete_02, unit = \"ms\") #>   expr        min         lq       mean     median         uq        max neval #> 1   MC    18.8116    18.9055    20.1862    19.5254    21.3941    23.1074    10 #> 2   NB 11582.3359 11628.6235 11691.1601 11690.7005 11726.3034 11867.7724    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-complete.html","id":"summary-of-benchmark-results-relative-to-the-faster-method-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping","text":"","code":"summary(benchmark_complete_02, unit = \"relative\") #>   expr      min       lq    mean   median       uq      max neval #> 1   MC   1.0000   1.0000   1.000   1.0000   1.0000   1.0000    10 #> 2   NB 615.7018 615.0921 579.166 598.7432 548.1092 513.5919    10"},{"path":[]},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"n <- 1000 a <- 0.50 b <- 0.50 cp <- 0.25 s2_em <- 1 - a^2 s2_ey <- 1 - cp^2 - a^2 * b^2 - b^2 * s2_em - 2 * cp * a * b em <- rnorm(n = n, mean = 0, sd = sqrt(s2_em)) ey <- rnorm(n = n, mean = 0, sd = sqrt(s2_ey)) X <- rnorm(n = n) M <- a * X + em Y <- cp * X + b * M + ey df <- data.frame(X, M, Y)  # Create data set with missing values.  miss <- sample(1:dim(df)[1], 300) df[miss[1:100], \"X\"] <- NA df[miss[101:200], \"M\"] <- NA df[miss[201:300], \"Y\"] <- NA"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"can now fit model using sem() function lavaan. using missing = \"fiml\" handle missing data lavaan.","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"fit lavaan object can passed MC() function semmcci generate Monte Carlo confidence intervals.","code":"MC(fit, R = 100L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>             est     se   R   2.5%  97.5% #> cp       0.2419 0.0297 100 0.1867 0.2983 #> b        0.5166 0.0330 100 0.4587 0.5821 #> a        0.4989 0.0277 100 0.4490 0.5506 #> X~~X     1.0951 0.0606 100 0.9813 1.2099 #> Y~~Y     0.5796 0.0314 100 0.5227 0.6428 #> M~~M     0.8045 0.0447 100 0.7315 0.8871 #> indirect 0.2577 0.0218 100 0.2231 0.2957 #> direct   0.2419 0.0297 100 0.1867 0.2983 #> total    0.4996 0.0306 100 0.4336 0.5527"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"nonparametric-bootstrap-confidence-intervals","dir":"Articles","previous_headings":"","what":"Nonparametric Bootstrap Confidence Intervals","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"Nonparametric bootstrap confidence intervals can generated lavaan using following.","code":"parameterEstimates(   sem(     data = df,     model = model,     missing = \"fiml\",     se = \"bootstrap\",     bootstrap = 100L   ) ) #>         lhs op      rhs    label    est    se      z pvalue ci.lower ci.upper #> 1         Y  ~        X       cp  0.234 0.029  7.987  0.000    0.166    0.282 #> 2         Y  ~        M        b  0.511 0.034 15.229  0.000    0.451    0.584 #> 3         M  ~        X        a  0.481 0.028 17.328  0.000    0.422    0.537 #> 4         X ~~        X           1.059 0.059 17.937  0.000    0.952    1.191 #> 5         Y ~~        Y           0.554 0.029 19.282  0.000    0.496    0.617 #> 6         M ~~        M           0.756 0.034 22.058  0.000    0.696    0.819 #> 7         Y ~1                   -0.013 0.024 -0.537  0.591   -0.057    0.031 #> 8         M ~1                   -0.022 0.031 -0.721  0.471   -0.083    0.047 #> 9         X ~1                    0.002 0.035  0.071  0.943   -0.067    0.069 #> 10 indirect :=      a*b indirect  0.246 0.021 11.545  0.000    0.203    0.297 #> 11   direct :=       cp   direct  0.234 0.029  7.947  0.000    0.166    0.282 #> 12    total := cp+(a*b)    total  0.479 0.031 15.574  0.000    0.424    0.536"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"arguments","dir":"Articles","previous_headings":"Benchmark","what":"Arguments","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"benchmark_fiml_01 <- microbenchmark(   MC = {     fit <- sem(       data = df,       model = model,       missing = \"fiml\"     )     MC(       fit,       R = R,       decomposition = \"chol\",       pd = FALSE     )   },   NB = sem(     data = df,     model = model,     missing = \"fiml\",     se = \"bootstrap\",     bootstrap = B   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"summary-of-benchmark-results","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"summary(benchmark_fiml_01, unit = \"ms\") #>   expr        min         lq        mean      median         uq        max #> 1   MC    96.5258    97.8883    99.45892    98.79125   102.1592   102.4126 #> 2   NB 24950.6586 25157.1789 25220.64259 25263.64345 25312.2469 25451.7170 #>   neval #> 1    10 #> 2    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"summary-of-benchmark-results-relative-to-the-faster-method","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"summary(benchmark_fiml_01, unit = \"relative\") #>   expr      min       lq     mean   median       uq      max neval #> 1   MC   1.0000   1.0000   1.0000   1.0000   1.0000   1.0000    10 #> 2   NB 258.4869 256.9988 253.5785 255.7275 247.7726 248.5213    10"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"benchmark---monte-carlo-method-with-precalculated-estimates","dir":"Articles","previous_headings":"","what":"Benchmark - Monte Carlo Method with Precalculated Estimates","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"fit <- sem(   data = df,   model = model,   missing = \"fiml\" ) benchmark_fiml_02 <- microbenchmark(   MC = MC(     fit,     R = R,     decomposition = \"chol\",     pd = FALSE   ),   NB = sem(     data = df,     model = model,     missing = \"fiml\",     se = \"bootstrap\",     bootstrap = B   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"summary-of-benchmark-results-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"summary(benchmark_fiml_02, unit = \"ms\") #>   expr        min        lq        mean      median         uq        max neval #> 1   MC    18.9163    19.001    21.14004    21.56215    22.0433    26.5134    10 #> 2   NB 24969.5613 25268.041 25384.80419 25348.82380 25592.1549 25663.4207    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-fiml.html","id":"summary-of-benchmark-results-relative-to-the-faster-method-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (FIML)","text":"","code":"summary(benchmark_fiml_02, unit = \"relative\") #>   expr      min       lq     mean   median       uq      max neval #> 1   MC    1.000    1.000    1.000    1.000    1.000   1.0000    10 #> 2   NB 1320.002 1329.827 1200.793 1175.617 1160.995 967.9415    10"},{"path":[]},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"n <- 1000 a <- 0.50 b <- 0.50 cp <- 0.25 s2_em <- 1 - a^2 s2_ey <- 1 - cp^2 - a^2 * b^2 - b^2 * s2_em - 2 * cp * a * b em <- rnorm(n = n, mean = 0, sd = sqrt(s2_em)) ey <- rnorm(n = n, mean = 0, sd = sqrt(s2_ey)) X <- rnorm(n = n) M <- a * X + em Y <- cp * X + b * M + ey df <- data.frame(X, M, Y)  # Create data set with missing values.  miss <- sample(1:dim(df)[1], 300) df[miss[1:100], \"X\"] <- NA df[miss[101:200], \"M\"] <- NA df[miss[201:300], \"Y\"] <- NA"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"multiple-imputation","dir":"Articles","previous_headings":"","what":"Multiple Imputation","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"Perform appropriate multiple imputation approach deal missing values. example, impute multivariate missing data normal model.","code":"mi <- amelia(   x = df,   m = 5L,   p2s = 0 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"can now fit model using sem() function lavaan. need deal missing values stage.","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"monte-carlo-confidence-intervals-multiple-imputation","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals (Multiple Imputation)","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"fit lavaan object mi mids object can passed MCMI() function semmcci generate Monte Carlo confidence intervals using multiple imputation described Pesigan Cheung (2023).","code":"MCMI(fit, R = 100L, alpha = 0.05, mi = mi) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>             est     se   R   2.5%  97.5% #> cp       0.2274 0.0320 100 0.1670 0.2889 #> b        0.5192 0.0354 100 0.4425 0.5867 #> a        0.4790 0.0337 100 0.4302 0.5479 #> X~~X     1.0613 0.0507 100 0.9709 1.1575 #> Y~~Y     0.5439 0.0286 100 0.4932 0.5997 #> M~~M     0.7642 0.0424 100 0.6928 0.8495 #> indirect 0.2486 0.0235 100 0.2069 0.2991 #> direct   0.2274 0.0320 100 0.1670 0.2889 #> total    0.4760 0.0291 100 0.4213 0.5352"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"nonparametric-bootstrap-confidence-intervals-multiple-imputation","dir":"Articles","previous_headings":"","what":"Nonparametric Bootstrap Confidence Intervals (Multiple Imputation)","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"Nonparametric bootstrap confidence intervals can generated bmemLavaan using following.","code":"summary(   bmemLavaan::bmem(data = df, model = model, method = \"mi\", boot = 100L, m = 5L) ) #>  #> Estimate method:                          multiple imputation #> Sample size:                              1000       #> Number of request bootstrap draws:        100        #> Number of successful bootstrap draws:     100        #> Type of confidence interval:              perc #>  #> Values of statistics: #>  #>                      Value      SE      2.5%     97.5% #>   chisq               0.000    0.000    0.000    0.000    #>   GFI                 1.000    0.000    1.000    1.000    #>   AGFI                1.000    0.000    1.000    1.000    #>   RMSEA               0.000    0.000    0.000    0.000    #>   NFI                 1.000    0.000    1.000    1.000    #>   NNFI                1.000    0.000    1.000    1.000    #>   CFI                 1.000    0.000    1.000    1.000    #>   BIC                 7751.560 108.065  7502.197 7912.936 #>   SRMR                0.000    0.000    0.000    0.000    #>  #> Estimation of parameters: #>  #>                      Estimate   SE      2.5%     97.5% #> Regressions: #>   Y ~ #>     X        (cp)     0.229    0.029    0.189    0.289 #>     M         (b)     0.512    0.027    0.460    0.557 #>   M ~ #>     X         (a)     0.484    0.029    0.425    0.542 #>  #> Variances: #>     X                 1.063    0.053    0.969    1.174 #>     Y                 0.564    0.034    0.493    0.610 #>     M                 0.746    0.038    0.683    0.816 #>  #>  #>  #> Defined parameters: #>     a*b    (indr)     0.247    0.020    0.209    0.289 #>     cp     (drct)     0.229    0.029    0.189    0.289 #>     cp+(*) (totl)     0.477    0.027    0.433    0.533"},{"path":[]},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"benchmark-1","dir":"Articles","previous_headings":"","what":"Benchmark","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"benchmark_mi_01 <- microbenchmark(   MC = {     fit <- sem(       data = df,       model = model     )     mi <- Amelia::amelia(       x = df,       m = m,       p2s = 0     )     MCMI(       fit,       R = R,       decomposition = \"chol\",       pd = FALSE,       mi = mi     )   },   NB = bmemLavaan::bmem(     data = df,     model = model,     method = \"mi\",     boot = B,     m = m   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"summary-of-benchmark-results","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"summary(benchmark_mi_01, unit = \"ms\") #>   expr        min         lq       mean     median        uq        max neval #> 1   MC   322.9186   325.6608   334.4794   333.6859   343.598   346.8487    10 #> 2   NB 31710.9023 32049.7226 32526.9044 32374.6021 33228.441 33399.0067    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"summary-of-benchmark-results-relative-to-the-faster-method","dir":"Articles","previous_headings":"Benchmark","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"summary(benchmark_mi_01, unit = \"relative\") #>   expr      min       lq     mean  median       uq      max neval #> 1   MC  1.00000  1.00000  1.00000  1.0000  1.00000  1.00000    10 #> 2   NB 98.20092 98.41443 97.24637 97.0212 96.70732 96.29273    10"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"benchmark---monte-carlo-method-with-precalculated-estimates-and-multiple-imputation","dir":"Articles","previous_headings":"","what":"Benchmark - Monte Carlo Method with Precalculated Estimates and Multiple Imputation","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"fit <- sem(   data = df,   model = model ) mi <- Amelia::amelia(   x = df,   m = m,   p2s = 0 ) benchmark_mi_02 <- microbenchmark(   MC = MCMI(     fit,     R = R,     decomposition = \"chol\",     pd = FALSE,     mi = mi   ),   NB = bmemLavaan::bmem(     data = df,     model = model,     method = \"mi\",     boot = B,     m = m   ),   times = 10 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"summary-of-benchmark-results-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates and Multiple Imputation","what":"Summary of Benchmark Results","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"summary(benchmark_mi_02, unit = \"ms\") #>   expr        min         lq       mean     median         uq        max neval #> 1   MC   208.5841   210.9004   215.7739   216.6956   220.6441   222.2274    10 #> 2   NB 31337.2935 31422.7515 31564.9589 31564.0430 31632.7318 31871.1077    10"},{"path":"https://github.com/jeksterslab/semmcci/articles/benchmark-mi.html","id":"summary-of-benchmark-results-relative-to-the-faster-method-1","dir":"Articles","previous_headings":"Benchmark - Monte Carlo Method with Precalculated Estimates and Multiple Imputation","what":"Summary of Benchmark Results Relative to the Faster Method","title":"Benchmark: Comparing the Monte Carlo Method with Nonparametric Bootstrapping (MI)","text":"","code":"summary(benchmark_mi_02, unit = \"relative\") #>   expr      min       lq     mean   median       uq      max neval #> 1   MC   1.0000   1.0000   1.0000   1.0000   1.0000   1.0000    10 #> 2   NB 150.2382 148.9933 146.2872 145.6607 143.3654 143.4166    10"},{"path":[]},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/example-1-simple.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Example 1: The Simple Mediation Model","text":"","code":"summary(df) #>        X                   M                   Y            #>  Min.   :-3.199558   Min.   :-3.371276   Min.   :-3.61432   #>  1st Qu.:-0.636035   1st Qu.:-0.692640   1st Qu.:-0.66146   #>  Median : 0.011377   Median : 0.007125   Median :-0.04726   #>  Mean   :-0.003207   Mean   :-0.023968   Mean   :-0.01677   #>  3rd Qu.: 0.651951   3rd Qu.: 0.647363   3rd Qu.: 0.62640   #>  Max.   : 3.470910   Max.   : 2.963216   Max.   : 3.09950 colMeans(df) #>            X            M            Y  #> -0.003206987 -0.023968103 -0.016774294 var(df) #>           X         M         Y #> X 1.0600162 0.5108780 0.5069458 #> M 0.5108780 0.9996606 0.6272104 #> Y 0.5069458 0.6272104 0.9837255"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-1-simple.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 1: The Simple Mediation Model","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example-1-simple.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 1: The Simple Mediation Model","text":"can now fit model using sem() function lavaan.","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-1-simple.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Example 1: The Simple Mediation Model","text":"fit lavaan object can passed MC() function generate Monte Carlo confidence intervals.","code":"MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2333 0.0262 20000 0.1825 0.2846 #> b        0.5082 0.0272 20000 0.4554 0.5609 #> a        0.4820 0.0267 20000 0.4294 0.5345 #> Y~~Y     0.5462 0.0242 20000 0.4991 0.5937 #> M~~M     0.7527 0.0334 20000 0.6872 0.8175 #> X~~X     1.0590 0.0000 20000 1.0590 1.0590 #> indirect 0.2449 0.0189 20000 0.2092 0.2830 #> direct   0.2333 0.0262 20000 0.1825 0.2846 #> total    0.4782 0.0263 20000 0.4268 0.5292"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-1-simple.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"Example 1: The Simple Mediation Model","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function. Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(data = df, model = model, fixed.x = FALSE) unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2422 0.0268 20000 0.1901 0.2948 #> b        0.5123 0.0245 20000 0.4637 0.5597 #> a        0.4963 0.0238 20000 0.4483 0.5417 #> Y~~Y     0.5558 0.0233 20000 0.5093 0.6010 #> M~~M     0.7537 0.0236 20000 0.7065 0.7990 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> indirect 0.2542 0.0174 20000 0.2206 0.2888 #> direct   0.2422 0.0268 20000 0.1901 0.2948 #> total    0.4964 0.0239 20000 0.4486 0.5423"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-1-simple.html","id":"standardized-monte-carlo-confidence-intervals---an-alternative-approach","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals - An Alternative Approach","title":"Example 1: The Simple Mediation Model","text":"example, confidence intervals standardized indirect effect generated specifying standardized indirect effect derived parameter using := operator. standardized indirect effect simple mediation model involves paths \\(\\) \\(b\\), standard deviations \\(X\\) \\(Y\\). given \\[   b   \\frac{s_X}{s_Y} \\] \\[   s_X   =   \\sqrt{     s_{X}^{2}   } \\] \\[   s_Y   =   \\sqrt{     c^{\\prime 2} s_{X}^{2}     + ^2 b^2 s_{X}^{2}     + b^2 s_{e_{M}}^{2}     + 2 c^{\\prime} b s_{X}^{2}     + s_{e_{Y}}^{2}   } \\] \\(s_{e_{Y}}^{2}\\) \\(s_{e_{M}}^{2}\\) residual variances regression equations. standardized indirect effect can defined using := operator named parameters model. row indirect_std corresponds confidence intervals standardized indirect effect.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ s2_X * X   M ~~ s2_em * M   Y ~~ s2_ey * Y   indirect_std := a * b * (     sqrt(s2_X) / sqrt(       (         cp^2 * s2_X + a^2 * b^2 * s2_X       ) + (         b^2 * s2_em       ) + (         2 * cp * b * a * s2_X       ) + s2_ey     )   ) \" fit <- sem(data = df, model = model, fixed.x = FALSE) MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>                 est     se     R   2.5%  97.5% #> cp           0.2333 0.0264 20000 0.1821 0.2851 #> b            0.5082 0.0270 20000 0.4550 0.5615 #> a            0.4820 0.0268 20000 0.4292 0.5349 #> s2_X         1.0590 0.0473 20000 0.9664 1.1514 #> s2_em        0.7527 0.0337 20000 0.6871 0.8191 #> s2_ey        0.5462 0.0244 20000 0.4993 0.5948 #> indirect_std 0.2542 0.0175 20000 0.2202 0.2885"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/example-2-serial.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Example 2: The Serial Mediation Model","text":"","code":"summary(df) #>        X                  M1                 M2                 Y            #>  Min.   :-3.37174   Min.   :-3.22690   Min.   :-4.33590   Min.   :-4.29019   #>  1st Qu.:-0.67546   1st Qu.:-0.73709   1st Qu.:-0.82188   1st Qu.:-0.86035   #>  Median :-0.01313   Median :-0.01651   Median :-0.03903   Median :-0.02704   #>  Mean   :-0.02582   Mean   :-0.01823   Mean   :-0.01620   Mean   :-0.03338   #>  3rd Qu.: 0.66400   3rd Qu.: 0.72825   3rd Qu.: 0.80016   3rd Qu.: 0.81721   #>  Max.   : 3.49530   Max.   : 3.69001   Max.   : 3.65147   Max.   : 4.05239 colMeans(df) #>           X          M1          M2           Y  #> -0.02582443 -0.01823021 -0.01619576 -0.03337865 var(df) #>            X        M1        M2         Y #> X  1.0050488 0.5123920 0.3848638 0.3333458 #> M1 0.5123920 1.2334461 0.6645408 0.5108946 #> M2 0.3848638 0.6645408 1.4321822 0.8012638 #> Y  0.3333458 0.5108946 0.8012638 1.4504417"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-2-serial.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 2: The Serial Mediation Model","text":"can define several indirect effects example: \\(X \\rightarrow M1 \\rightarrow M2 \\rightarrow Y\\) \\(X \\rightarrow M1 \\rightarrow M2\\) \\(X \\rightarrow M1 \\rightarrow Y\\) \\(M1 \\rightarrow M2 \\rightarrow Y\\) indirect effects defined using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b1 * M1 + b2 * M2   M2 ~ a2 * X + k * M1   M1 ~ a1 * X   # X -> M1 -> M2 -> Y   a1kb2 := a1 * k * b2   # X -> M1 -> M2   a1k := a1 * k   # X -> M1 -> Y   a2b2 := a2 * b2   # M1 -> M2 -> Y   kb2 := k * b2 \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example-2-serial.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 2: The Serial Mediation Model","text":"","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-2-serial.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Example 2: The Serial Mediation Model","text":"fit lavaan object can passed MC() function semmcci generate Monte Carlo confidence intervals.","code":"MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>           est     se     R   2.5%  97.5% #> cp     0.0868 0.0355 20000 0.0174 0.1561 #> b1     0.1190 0.0351 20000 0.0508 0.1879 #> b2     0.4809 0.0303 20000 0.4215 0.5404 #> a2     0.1373 0.0364 20000 0.0644 0.2075 #> k      0.4817 0.0332 20000 0.4173 0.5479 #> a1     0.5098 0.0313 20000 0.4488 0.5719 #> Y~~Y   0.9744 0.0437 20000 0.8867 1.0596 #> M2~~M2 1.0581 0.0474 20000 0.9655 1.1521 #> M1~~M1 0.9712 0.0439 20000 0.8854 1.0572 #> X~~X   1.0040 0.0000 20000 1.0040 1.0040 #> a1kb2  0.1181 0.0133 20000 0.0936 0.1458 #> a1k    0.2456 0.0228 20000 0.2033 0.2920 #> a2b2   0.0660 0.0179 20000 0.0307 0.1010 #> kb2    0.2317 0.0217 20000 0.1908 0.2762"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-2-serial.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"Example 2: The Serial Mediation Model","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function. Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(data = df, model = model, fixed.x = FALSE) unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>           est     se     R   2.5%  97.5% #> cp     0.0723 0.0291 20000 0.0154 0.1289 #> b1     0.1098 0.0320 20000 0.0472 0.1719 #> b2     0.4779 0.0276 20000 0.4233 0.5311 #> a2     0.1151 0.0308 20000 0.0534 0.1742 #> k      0.4470 0.0282 20000 0.3912 0.5011 #> a1     0.4602 0.0250 20000 0.4107 0.5086 #> Y~~Y   0.6725 0.0244 20000 0.6228 0.7186 #> M2~~M2 0.7396 0.0238 20000 0.6920 0.7846 #> M1~~M1 0.7882 0.0230 20000 0.7414 0.8314 #> X~~X   1.0000 0.0000 20000 1.0000 1.0000 #> a1kb2  0.0983 0.0104 20000 0.0788 0.1199 #> a1k    0.2057 0.0177 20000 0.1717 0.2414 #> a2b2   0.0550 0.0151 20000 0.0252 0.0846 #> kb2    0.2136 0.0188 20000 0.1779 0.2516"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/example-3-latent.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 3: The Latent Variable Simple Mediation Model","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   X =~ x1 + x2 + x3   M =~ x4 + x5 + x6   Y =~ x7 + x8 + x9   M ~ a * X   Y ~ b * M   indirect := a * b \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example-3-latent.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 3: The Latent Variable Simple Mediation Model","text":"can now fit model using sem() function lavaan using Holzinger Swineford (1939) data set.","code":"df <- lavaan::HolzingerSwineford1939 fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-3-latent.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Example 3: The Latent Variable Simple Mediation Model","text":"fit lavaan object can passed MC() function semmcci generate Monte Carlo confidence intervals.","code":"MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> X=~x1    1.0000 0.0000 20000 1.0000 1.0000 #> X=~x2    0.5554 0.1047 20000 0.3506 0.7614 #> X=~x3    0.7045 0.1162 20000 0.4755 0.9329 #> M=~x4    1.0000 0.0000 20000 1.0000 1.0000 #> M=~x5    1.1106 0.0655 20000 0.9838 1.2393 #> M=~x6    0.9268 0.0554 20000 0.8165 1.0342 #> Y=~x7    1.0000 0.0000 20000 1.0000 1.0000 #> Y=~x8    1.1482 0.1622 20000 0.8273 1.4633 #> Y=~x9    0.8854 0.1234 20000 0.6449 1.1287 #> a        0.5107 0.0961 20000 0.3217 0.6990 #> b        0.1884 0.0519 20000 0.0864 0.2907 #> x1~~x1   0.5320 0.1281 20000 0.2804 0.7815 #> x2~~x2   1.1269 0.1021 20000 0.9254 1.3255 #> x3~~x3   0.8647 0.0948 20000 0.6802 1.0498 #> x4~~x4   0.3714 0.0481 20000 0.2789 0.4668 #> x5~~x5   0.4519 0.0585 20000 0.3365 0.5658 #> x6~~x6   0.3551 0.0429 20000 0.2719 0.4392 #> x7~~x7   0.7309 0.0828 20000 0.5666 0.8926 #> x8~~x8   0.4257 0.0826 20000 0.2643 0.5879 #> x9~~x9   0.6605 0.0706 20000 0.5212 0.7985 #> X~~X     0.8264 0.1584 20000 0.5185 1.1392 #> M~~M     0.7638 0.0974 20000 0.5747 0.9583 #> Y~~Y     0.4175 0.0887 20000 0.2469 0.5942 #> indirect 0.0962 0.0319 20000 0.0395 0.1650"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-3-latent.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"Example 3: The Latent Variable Simple Mediation Model","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function.","code":"fit <- sem(data = df, model = model) unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> X=~x1    0.7800 0.0636 19999 0.6406 0.8901 #> X=~x2    0.4295 0.0613 19999 0.2964 0.5372 #> X=~x3    0.5672 0.0596 19999 0.4336 0.6673 #> M=~x4    0.8515 0.0229 19999 0.8024 0.8925 #> M=~x5    0.8531 0.0227 19999 0.8052 0.8939 #> M=~x6    0.8385 0.0234 19999 0.7890 0.8804 #> Y=~x7    0.6183 0.0548 19999 0.4979 0.7133 #> Y=~x8    0.7639 0.0553 19999 0.6417 0.8598 #> Y=~x9    0.5910 0.0554 19999 0.4735 0.6895 #> a        0.4691 0.0644 19999 0.3299 0.5821 #> b        0.2772 0.0701 19999 0.1369 0.4123 #> x1~~x1   0.3917 0.0974 19999 0.2077 0.5896 #> x2~~x2   0.8155 0.0513 19999 0.7114 0.9121 #> x3~~x3   0.6783 0.0655 19999 0.5548 0.8120 #> x4~~x4   0.2750 0.0389 19999 0.2035 0.3562 #> x5~~x5   0.2722 0.0387 19999 0.2009 0.3516 #> x6~~x6   0.2969 0.0391 19999 0.2249 0.3775 #> x7~~x7   0.6177 0.0664 19999 0.4911 0.7521 #> x8~~x8   0.4165 0.0829 19999 0.2608 0.5882 #> x9~~x9   0.6507 0.0645 19999 0.5245 0.7758 #> X~~X     1.0000 0.0000 19999 1.0000 1.0000 #> M~~M     0.7799 0.0590 19999 0.6611 0.8911 #> Y~~Y     0.9231 0.0394 19999 0.8300 0.9813 #> indirect 0.1301 0.0381 19999 0.0590 0.2075"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-1-simple-miss-fiml.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Example 4.1: The Simple Mediation Model with Missing Data (FIML)","text":"","code":"summary(df) #>        X                  M                  Y            #>  Min.   :-3.19956   Min.   :-3.37128   Min.   :-3.61432   #>  1st Qu.:-0.63268   1st Qu.:-0.70516   1st Qu.:-0.66921   #>  Median : 0.02823   Median : 0.02825   Median :-0.04833   #>  Mean   : 0.00269   Mean   :-0.01992   Mean   :-0.01538   #>  3rd Qu.: 0.65754   3rd Qu.: 0.65240   3rd Qu.: 0.65293   #>  Max.   : 3.47091   Max.   : 2.93497   Max.   : 3.09950   #>  NA's   :100        NA's   :100        NA's   :100"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-1-simple-miss-fiml.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 4.1: The Simple Mediation Model with Missing Data (FIML)","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-1-simple-miss-fiml.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 4.1: The Simple Mediation Model with Missing Data (FIML)","text":"can now fit model using sem() function lavaan. using missing = \"fiml\" handle missing data lavaan.","code":"fit <- sem(data = df, model = model, missing = \"fiml\")"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-1-simple-miss-fiml.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Example 4.1: The Simple Mediation Model with Missing Data (FIML)","text":"fit lavaan object can passed MC() function semmcci generate Monte Carlo confidence intervals.","code":"MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>              est     se     R    2.5%  97.5% #> cp        0.2335 0.0293 20000  0.1760 0.2915 #> b         0.5113 0.0297 20000  0.4526 0.5705 #> a         0.4809 0.0285 20000  0.4238 0.5367 #> X~~X      1.0591 0.0495 20000  0.9630 1.1557 #> Y~~Y      0.5542 0.0270 20000  0.5011 0.6075 #> M~~M      0.7564 0.0360 20000  0.6856 0.8261 #> Y~1      -0.0127 0.0254 20000 -0.0627 0.0375 #> M~1      -0.0223 0.0289 20000 -0.0791 0.0338 #> X~1       0.0025 0.0337 20000 -0.0634 0.0683 #> indirect  0.2458 0.0203 20000  0.2071 0.2872 #> direct    0.2335 0.0293 20000  0.1760 0.2915 #> total     0.4794 0.0286 20000  0.4233 0.5350"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-1-simple-miss-fiml.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"Example 4.1: The Simple Mediation Model with Missing Data (FIML)","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function.","code":"fit <- sem(data = df, model = model, missing = \"fiml\") unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>              est     se     R   2.5%  97.5% #> cp        0.2409 0.0300 20000 0.1816 0.2981 #> b         0.5128 0.0268 20000 0.4596 0.5642 #> a         0.4946 0.0259 20000 0.4426 0.5430 #> X~~X      1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y      0.5568 0.0251 20000 0.5074 0.6061 #> M~~M      0.7554 0.0255 20000 0.7052 0.8041 #> indirect -0.0128 0.0189 20000 0.2170 0.2908 #> direct   -0.0222 0.0300 20000 0.1816 0.2981 #> total     0.0024 0.0260 20000 0.4413 0.5434"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-2-simple-miss-mi.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"","code":"summary(df) #>        X                  M                  Y            #>  Min.   :-3.19956   Min.   :-3.37128   Min.   :-3.61432   #>  1st Qu.:-0.63268   1st Qu.:-0.70516   1st Qu.:-0.66921   #>  Median : 0.02823   Median : 0.02825   Median :-0.04833   #>  Mean   : 0.00269   Mean   :-0.01992   Mean   :-0.01538   #>  3rd Qu.: 0.65754   3rd Qu.: 0.65240   3rd Qu.: 0.65293   #>  Max.   : 3.47091   Max.   : 2.93497   Max.   : 3.09950   #>  NA's   :100        NA's   :100        NA's   :100"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-2-simple-miss-mi.html","id":"multiple-imputation","dir":"Articles","previous_headings":"","what":"Multiple Imputation","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"Perform appropriate multiple imputation approach deal missing values. example, impute multivariate missing data normal model.","code":"mi <- mice::mice(   df,   method = \"norm\",   m = 100,   print = FALSE,   seed = 42 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-2-simple-miss-mi.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-2-simple-miss-mi.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"can now fit model using sem() function lavaan. need deal missing values stage.","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-2-simple-miss-mi.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"fit lavaan object mi mids object can passed MCMI() function semmcci generate Monte Carlo confidence intervals using multiple imputation described Pesigan Cheung (2023).","code":"MCMI(fit, mi = mi, R = 20000L, alpha = 0.05, seed = 42) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>             est     se     R   2.5%  97.5% #> cp       0.2328 0.0299 20000 0.1741 0.2917 #> b        0.5113 0.0301 20000 0.4529 0.5701 #> a        0.4811 0.0287 20000 0.4241 0.5374 #> X~~X     1.0617 0.0495 20000 0.9650 1.1591 #> Y~~Y     0.5533 0.0272 20000 0.5005 0.6069 #> M~~M     0.7568 0.0361 20000 0.6856 0.8278 #> indirect 0.2460 0.0204 20000 0.2070 0.2864 #> direct   0.2328 0.0299 20000 0.1741 0.2917 #> total    0.4788 0.0285 20000 0.4236 0.5349"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-4-2-simple-miss-mi.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"Example 4.2: The Simple Mediation Model with Missing Data (MI)","text":"Standardized Monte Carlo Confidence intervals can generated passing result MCMI() function MCStd() function.","code":"fit <- sem(data = df, model = model) unstd <- MCMI(fit, mi = mi, R = 20000L, alpha = 0.05, seed = 42) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2450 0.0307 20000 0.1802 0.3000 #> b        0.5189 0.0277 20000 0.4587 0.5663 #> a        0.5031 0.0260 20000 0.4429 0.5454 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y     0.5429 0.0250 20000 0.5071 0.6053 #> M~~M     0.7469 0.0258 20000 0.7026 0.8038 #> indirect 0.2610 0.0190 20000 0.2168 0.2915 #> direct   0.2450 0.0307 20000 0.1802 0.3000 #> total    0.5060 0.0261 20000 0.4416 0.5444"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/example-5-composite-reliability.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"Example 5: Composite Reliability","text":"Assuming latent variable variance constrained one, omega total reliability coefficient given \\[   \\omega_{\\mathrm{total}}   =   \\frac{   \\left(   \\sum_{= 1}^{k}   \\lambda_{}   \\right)^2   }{   \\left(   \\sum_{= 1}^{k}   \\lambda_{}   \\right)^2   +   \\sum_{= 1}^{k}   \\theta_{\\varepsilon_{ii}}   } \\] \\(\\lambda_{}\\) factor loading item \\(\\), \\(\\theta_{\\varepsilon_{ii}}\\) residual variance item \\(\\), \\(k\\) number items particular latent variable. model specification , variances latent variables eta1, eta2, eta3 constrained one, relevant parameters labeled particularly factor loadings error variances, omega total reliability coefficient per latent variable defined using := operator.","code":"model <- \"   # fix latent variable variances to 1   eta1 ~~ 1 * eta1   eta2 ~~ 1 * eta2   eta3 ~~ 1 * eta3   # factor loadings   eta1 =~ NA * x1 + l11 * x1 + l12 * x2 + l13 * x3   eta2 =~ NA * x4 + l24 * x4 + l25 * x5 + l26 * x6   eta3 =~ NA * x7 + l37 * x7 + l38 * x8 + l39 * x9   # error variances   x1 ~~ t1 * x1   x2 ~~ t2 * x2   x3 ~~ t3 * x3   x4 ~~ t4 * x4   x5 ~~ t5 * x5   x6 ~~ t6 * x6   x7 ~~ t7 * x7   x8 ~~ t8 * x8   x9 ~~ t9 * x9   # composite reliability   omega1 := (l11 + l12 + l13)^2 / ((l11 + l12 + l13)^2 + (t1 + t2 + t3))   omega2 := (l24 + l25 + l26)^2 / ((l24 + l25 + l26)^2 + (t4 + t5 + t6))   omega3 := (l37 + l38 + l39)^2 / ((l37 + l38 + l39)^2 + (t7 + t8 + t9)) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/example-5-composite-reliability.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"Example 5: Composite Reliability","text":"can now fit model using cfa() function lavaan.","code":"fit <- cfa(model = model, data = HolzingerSwineford1939)"},{"path":"https://github.com/jeksterslab/semmcci/articles/example-5-composite-reliability.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"Model Fitting","what":"Monte Carlo Confidence Intervals","title":"Example 5: Composite Reliability","text":"fit lavaan object can passed MC() function generate Monte Carlo confidence intervals.","code":"MC(fit, R = 20000L, alpha = 0.05) #> Monte Carlo Confidence Intervals #>               est     se     R   2.5%  97.5% #> eta1~~eta1 1.0000 0.0000 20000 1.0000 1.0000 #> eta2~~eta2 1.0000 0.0000 20000 1.0000 1.0000 #> eta3~~eta3 1.0000 0.0000 20000 1.0000 1.0000 #> l11        0.8996 0.0803 20000 0.7404 1.0569 #> l12        0.4979 0.0766 20000 0.3486 0.6490 #> l13        0.6562 0.0745 20000 0.5116 0.8032 #> l24        0.9897 0.0565 20000 0.8785 1.1007 #> l25        1.1016 0.0620 20000 0.9796 1.2231 #> l26        0.9166 0.0538 20000 0.8100 1.0208 #> l37        0.6195 0.0701 20000 0.4799 0.7558 #> l38        0.7309 0.0654 20000 0.6050 0.8602 #> l39        0.6700 0.0647 20000 0.5442 0.7976 #> t1         0.5491 0.1121 20000 0.3279 0.7714 #> t2         1.1338 0.1018 20000 0.9389 1.3350 #> t3         0.8443 0.0904 20000 0.6671 1.0223 #> t4         0.3712 0.0475 20000 0.2779 0.4645 #> t5         0.4463 0.0585 20000 0.3325 0.5613 #> t6         0.3562 0.0432 20000 0.2722 0.4424 #> t7         0.7994 0.0816 20000 0.6391 0.9602 #> t8         0.4877 0.0740 20000 0.3411 0.6328 #> t9         0.5661 0.0711 20000 0.4262 0.7044 #> eta1~~eta2 0.4585 0.0638 20000 0.3331 0.5855 #> eta1~~eta3 0.4705 0.0728 20000 0.3275 0.6118 #> eta2~~eta3 0.2830 0.0692 20000 0.1483 0.4200 #> omega1     0.6253 0.0364 20000 0.5480 0.6911 #> omega2     0.8852 0.0116 20000 0.8597 0.9054 #> omega3     0.6878 0.0311 20000 0.6220 0.7436"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-1-std-regression.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MCStd Function Use Case 1: Standardized Regression Coefficients","text":"example, use data Kwan & Chan (2011) child’s reading ability (\\(Y_{1}\\)) regressed parental occupational status (\\(X_{1}\\)), parental educational level (\\(X_{2}\\)), child’s home possession (\\(X_{3}\\)) \\[     Y_{1}     =     \\alpha_{1}     +     \\gamma_{1}     X_{1}     +     \\gamma_{2}     X_{2}     +     \\gamma_{3}     X_{3}     +     \\zeta_{1} . \\] Note \\(\\zeta_{1}\\) stochastic error term expected value zero finite variance \\(\\psi_{1}\\), \\(\\alpha_{1}\\) intercept, \\(\\gamma_{1}\\), \\(\\gamma_{2}\\), \\(\\gamma_{3}\\) regression coefficients. Three-Regressor Multiple Regression Model (Covariance Structure)","code":"covs #>           Y1       X1      X2      X3 #> Y1 6088.8281 271.1429 49.5848 20.0337 #> X1  271.1429 226.2577 29.9232  4.8812 #> X2   49.5848  29.9232  9.0692  1.0312 #> X3   20.0337   4.8812  1.0312  0.8371 nobs #> [1] 200"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-1-std-regression.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"MCStd Function Use Case 1: Standardized Regression Coefficients","text":"regress Y1 X1, X2, X3.","code":"model <- \"   Y1 ~ X1 + X2 + X3 \""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-1-std-regression.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"MCStd Function Use Case 1: Standardized Regression Coefficients","text":"can now fit model using sem() function lavaan mimic = \"eqs\" ensure compatibility results Kwan & Chan (2011). Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(   model = model, mimic = \"eqs\", fixed.x = FALSE,   sample.cov = covs, sample.nobs = nobs )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-1-std-regression.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"MCStd Function Use Case 1: Standardized Regression Coefficients","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function.","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>           est     se     R    2.5%  97.5% #> Y1~X1  0.1207 0.0900 20000 -0.0595 0.2940 #> Y1~X2  0.0491 0.0909 20000 -0.1315 0.2267 #> Y1~X3  0.2194 0.0719 20000  0.0747 0.3551 #> Y1~~Y1 0.9002 0.0403 20000  0.7998 0.9577 #> X1~~X1 1.0000 0.0000 20000  1.0000 1.0000 #> X1~~X2 0.6606 0.0406 20000  0.5750 0.7339 #> X1~~X3 0.3547 0.0630 20000  0.2278 0.4727 #> X2~~X2 1.0000 0.0000 20000  1.0000 1.0000 #> X2~~X3 0.3743 0.0616 20000  0.2490 0.4888 #> X3~~X3 1.0000 0.0000 20000  1.0000 1.0000"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-2-difference-regression-coefficients.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MCStd Function Use Case 2: Difference of Standardized Regression Coefficients","text":"example, use data Kwan & Chan (2011) child’s reading ability (\\(Y_{1}\\)) regressed parental occupational status (\\(X_{1}\\)), parental educational level (\\(X_{2}\\)), child’s home possession (\\(X_{3}\\)) \\[     Y_{1}     =     \\alpha_{1}     +     \\gamma_{1}     X_{1}     +     \\gamma_{2}     X_{2}     +     \\gamma_{3}     X_{3}     +     \\zeta_{1} . \\] Note \\(\\zeta_{1}\\) stochastic error term expected value zero finite variance \\(\\psi_{1}\\), \\(\\alpha_{1}\\) intercept, \\(\\gamma_{1}\\), \\(\\gamma_{2}\\), \\(\\gamma_{3}\\) regression coefficients. Three-Regressor Multiple Regression Model (Covariance Structure)","code":"#>           Y1       X1      X2      X3 #> Y1 6088.8281 271.1429 49.5848 20.0337 #> X1  271.1429 226.2577 29.9232  4.8812 #> X2   49.5848  29.9232  9.0692  1.0312 #> X3   20.0337   4.8812  1.0312  0.8371 covs #>           Y1       X1      X2      X3 #> Y1 6088.8281 271.1429 49.5848 20.0337 #> X1  271.1429 226.2577 29.9232  4.8812 #> X2   49.5848  29.9232  9.0692  1.0312 #> X3   20.0337   4.8812  1.0312  0.8371 nobs #> [1] 200"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-2-difference-regression-coefficients.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"MCStd Function Use Case 2: Difference of Standardized Regression Coefficients","text":"regress Y1 X1, X2, X3. label regression coefficients gamma1, gamma2, gamma3. specify difference coefficients using := operator.","code":"model <- \"   Y1 ~ gamma1 * X1 + gamma2 * X2 + gamma3 * X3   gamma12 := gamma1 - gamma2   gamma13 := gamma1 - gamma3   gamma23 := gamma2 - gamma3 \""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-2-difference-regression-coefficients.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"MCStd Function Use Case 2: Difference of Standardized Regression Coefficients","text":"can now fit model using sem() function lavaan mimic = \"eqs\" ensure compatibility results Kwan & Chan (2011). Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(   model = model, mimic = \"eqs\", fixed.x = FALSE,   sample.cov = covs, sample.nobs = nobs )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-2-difference-regression-coefficients.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"MCStd Function Use Case 2: Difference of Standardized Regression Coefficients","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function.","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R    2.5%  97.5% #> gamma1   0.1207 0.0897 20000 -0.0570 0.2940 #> gamma2   0.0491 0.0908 20000 -0.1293 0.2259 #> gamma3   0.2194 0.0710 20000  0.0776 0.3560 #> Y1~~Y1   0.9002 0.0404 20000  0.8001 0.9574 #> X1~~X1   1.0000 0.0000 20000  1.0000 1.0000 #> X1~~X2   0.6606 0.0405 20000  0.5748 0.7345 #> X1~~X3   0.3547 0.0624 20000  0.2278 0.4723 #> X2~~X2   1.0000 0.0000 20000  1.0000 1.0000 #> X2~~X3   0.3743 0.0616 20000  0.2467 0.4903 #> X3~~X3   1.0000 0.0000 20000  1.0000 1.0000 #> gamma12  0.0716 0.1622 20000 -0.2446 0.3903 #> gamma13 -0.0987 0.1246 20000 -0.3421 0.1453 #> gamma23 -0.1703 0.1265 20000 -0.4155 0.0814"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-3-rsqr.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MCStd Function Use Case 3: R-Squared and Adjusted R-Squared","text":"example, use data Kwan & Chan (2011) child’s reading ability (\\(Y_{1}\\)) regressed home educational resources home educational resources (\\(Y_{2}\\)) regressed parental occupational status (\\(X_{1}\\)), parental educational level (\\(X_{2}\\)), child’s home possession (\\(X_{3}\\)) \\[     Y_{1}     =     \\alpha_{1}     +     \\beta_{1}     Y_{2}     +     \\zeta_{1} , \\] \\[     Y_{2}     =     \\alpha_{2}     +     \\gamma_{1}     X_{1}     +     \\gamma_{2}     X_{2}     +     \\gamma_{3}     X_{3}     +     \\zeta_{2} . \\] Note \\(\\zeta_{1}\\) \\(\\zeta_{2}\\) stochastic error terms expected value zero finite variance \\(\\psi_{1}\\) \\(\\psi_{2}\\), \\(\\alpha_{1}\\) \\(\\alpha_{2}\\) intercepts, \\(\\beta_{1}\\), \\(\\gamma_{1}\\), \\(\\gamma_{2}\\), \\(\\gamma_{3}\\) regression coefficients. Mediation Model (Covariance Structure)","code":"covs #>           Y1      Y2       X1      X2      X3 #> Y1 6088.8281 15.7012 271.1429 49.5848 20.0337 #> Y2   15.7012  0.7084   1.9878  1.0043  0.2993 #> X1  271.1429  1.9878 226.2577 29.9232  4.8812 #> X2   49.5848  1.0043  29.9232  9.0692  1.0312 #> X3   20.0337  0.2993   4.8812  1.0312  0.8371 nobs #> [1] 200"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-3-rsqr.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"MCStd Function Use Case 3: R-Squared and Adjusted R-Squared","text":"regress Y1 Y2 Y2 X1, X2, X3. label error variances psi1 psi2. \\(R^{2}\\) \\(\\bar{R}^{2}\\) defined using := operator lavaan model syntax using following equations \\[     R^{2}     =     1 - \\psi^{\\ast} \\] \\[     \\bar{R}^{2}     =     1     -     \\left(     \\frac{n - 1}{n - p + 1}     \\right)     \\left(     1 - R^2     \\right) \\] \\(\\psi^{\\ast}\\) standardized error variance, \\(n\\) sample size, \\(p\\) number regressor variables.","code":"model <- \"   Y1 ~ Y2   Y2 ~ X1 + X2 + X3   Y1 ~~ psi1 * Y1   Y2 ~~ psi2 * Y2   rsq1 := 1 - psi1   rsqbar1 := 1 - (     (200 - 1) / (200 - 1 + 1)   ) * (     1 - rsq1   )   rsq2 := 1 - psi2   rsqbar2 := 1 - (     (200 - 1) / (200 - 3 + 1)   ) * (     1 - rsq2   ) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-3-rsqr.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"MCStd Function Use Case 3: R-Squared and Adjusted R-Squared","text":"can now fit model using sem() function lavaan mimic = \"eqs\" ensure compatibility results Kwan & Chan (2011). Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(   model = model, mimic = \"eqs\", fixed.x = FALSE,   sample.cov = covs, sample.nobs = nobs )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-3-rsqr.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"MCStd Function Use Case 3: R-Squared and Adjusted R-Squared","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function. Note: parameterization \\(R^{2}\\) \\(\\bar{R}^{2}\\) interpreted using output MCStd() function since input functions defined := require standardized estimates.","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R    2.5%   97.5% #> Y1~Y2    0.2391 0.0673 20000  0.1036  0.3694 #> Y2~X1   -0.2449 0.0820 20000 -0.4060 -0.0815 #> Y2~X2    0.4419 0.0792 20000  0.2824  0.5908 #> Y2~X3    0.3101 0.0635 20000  0.1829  0.4332 #> psi1     0.9428 0.0326 20000  0.8636  0.9893 #> psi2     0.7428 0.0532 20000  0.6277  0.8354 #> X1~~X1   1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2   0.6606 0.0407 20000  0.5731  0.7343 #> X1~~X3   0.3547 0.0627 20000  0.2256  0.4732 #> X2~~X2   1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3   0.3743 0.0618 20000  0.2478  0.4886 #> X3~~X3   1.0000 0.0000 20000  1.0000  1.0000 #> rsq1     0.0572 0.0326 20000  0.0107  0.1364 #> rsqbar1  0.0619 0.0324 20000  0.0157  0.1407 #> rsq2     0.2572 0.0532 20000  0.1646  0.3723 #> rsqbar2  0.2534 0.0534 20000  0.1604  0.3692"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-4-difference-regression-coefficients-multigroup.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MCStd Function Use Case 4: Difference of Standardized Regression Coefficients in Multiple Groups","text":"example, use data Kwan & Chan (2014) three groups (Hong Kong, Japan, Korea) child’s reading ability (\\(Y_{1}\\)) regressed parental occupational status (\\(X_{1}\\)), parental educational level (\\(X_{2}\\)), child’s home possession (\\(X_{3}\\)) \\[     Y_{1}     =     \\alpha_{1}     +     \\gamma_{1}     X_{1}     +     \\gamma_{2}     X_{2}     +     \\gamma_{3}     X_{3}     +     \\zeta_{1} . \\] Note \\(\\zeta_{1}\\) stochastic error term expected value zero finite variance \\(\\psi_{1}\\), \\(\\alpha_{1}\\) intercept, \\(\\gamma_{1}\\), \\(\\gamma_{2}\\), \\(\\gamma_{3}\\) regression coefficients. Three-Regressor Multiple Regression Model (Covariance Structure) Covariance Matrix Hong Kong Covariance Matrix Japan Covariance Matrix Korea","code":"knitr::kable(   x = covs_hongkong, digits = 4,   caption = \"Covariance Matrix for Hong Kong\" ) nobs_hongkong #> [1] 4625 knitr::kable(   x = covs_japan, digits = 4,   caption = \"Covariance Matrix for Japan\" ) nobs_japan #> [1] 5943 knitr::kable(   x = covs_korea, digits = 4,   caption = \"Covariance Matrix for Korea\" ) nobs_korea #> [1] 5151"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-4-difference-regression-coefficients-multigroup.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"MCStd Function Use Case 4: Difference of Standardized Regression Coefficients in Multiple Groups","text":"regress Y1 X1, X2, X3. label regression coefficient \\(\\gamma_{1}\\) three groups gamma1.g1, gamma1.g2, gamma1.g3, \\(\\gamma_{2}\\) three groups gamma2.g1, gamma2.g2, gamma2.g3, \\(\\gamma_{3}\\) three groups gamma3.g1, gamma3.g2, gamma3.g3.","code":"model <- \"   Y1 ~ c(gamma1.g1, gamma1.g2, gamma1.g3) * X1   Y1 ~ c(gamma2.g1, gamma2.g2, gamma2.g3) * X2   Y1 ~ c(gamma3.g1, gamma3.g2, gamma3.g3) * X3   gamma1.g12 := gamma1.g1 - gamma1.g2   gamma1.g13 := gamma1.g1 - gamma1.g3   gamma1.g23 := gamma1.g2 - gamma1.g3   gamma2.g12 := gamma2.g1 - gamma2.g2   gamma2.g13 := gamma2.g1 - gamma2.g3   gamma2.g23 := gamma2.g2 - gamma2.g3   gamma3.g12 := gamma3.g1 - gamma3.g2   gamma3.g13 := gamma3.g1 - gamma3.g3   gamma3.g23 := gamma3.g2 - gamma3.g3 \""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-4-difference-regression-coefficients-multigroup.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"MCStd Function Use Case 4: Difference of Standardized Regression Coefficients in Multiple Groups","text":"can now fit model using sem() function lavaan mimic = \"eqs\" ensure compatibility results Kwan & Chan (2011). Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(   model = model, mimic = \"eqs\", fixed.x = FALSE,   sample.cov = list(covs_hongkong, covs_japan, covs_korea),   sample.nobs = list(nobs_hongkong, nobs_japan, nobs_korea) )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-4-difference-regression-coefficients-multigroup.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"MCStd Function Use Case 4: Difference of Standardized Regression Coefficients in Multiple Groups","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function.","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>                est     se     R    2.5%   97.5% #> gamma1.g1   0.0568 0.0191 20000  0.0192  0.0943 #> gamma2.g1   0.1985 0.0188 20000  0.1615  0.2358 #> gamma3.g1   0.2500 0.0150 20000  0.2203  0.2788 #> Y1~~Y1      0.8215 0.0101 20000  0.8005  0.8407 #> X1~~X1      1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2      0.6917 0.0077 20000  0.6763  0.7065 #> X1~~X3      0.4702 0.0115 20000  0.4475  0.4926 #> X2~~X2      1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3      0.4471 0.0118 20000  0.4237  0.4700 #> X3~~X3      1.0000 0.0000 20000  1.0000  1.0000 #> gamma1.g2   0.1390 0.0164 20000  0.1070  0.1713 #> gamma2.g2   0.1792 0.0158 20000  0.1483  0.2099 #> gamma3.g2   0.1688 0.0137 20000  0.1415  0.1955 #> Y1~~Y1.g2   0.8371 0.0087 20000  0.8195  0.8536 #> X1~~X1.g2   1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2.g2   0.6525 0.0075 20000  0.6376  0.6669 #> X1~~X3.g2   0.5023 0.0097 20000  0.4831  0.5212 #> X2~~X2.g2   1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3.g2   0.4452 0.0104 20000  0.4245  0.4656 #> X3~~X3.g2   1.0000 0.0000 20000  1.0000  1.0000 #> gamma1.g3   0.0863 0.0169 20000  0.0531  0.1196 #> gamma2.g3   0.2557 0.0163 20000  0.2239  0.2875 #> gamma3.g3   0.2289 0.0138 20000  0.2020  0.2561 #> Y1~~Y1.g3   0.7761 0.0102 20000  0.7553  0.7956 #> X1~~X1.g3   1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2.g3   0.6580 0.0079 20000  0.6424  0.6732 #> X1~~X3.g3   0.4738 0.0108 20000  0.4524  0.4946 #> X2~~X2.g3   1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3.g3   0.4353 0.0111 20000  0.4132  0.4568 #> X3~~X3.g3   1.0000 0.0000 20000  1.0000  1.0000 #> gamma1.g12 -0.0821 0.0251 20000 -0.1310 -0.0326 #> gamma1.g13 -0.0294 0.0256 20000 -0.0794  0.0209 #> gamma1.g23  0.0527 0.0236 20000  0.0068  0.0981 #> gamma2.g12  0.0193 0.0246 20000 -0.0294  0.0676 #> gamma2.g13 -0.0572 0.0248 20000 -0.1051 -0.0079 #> gamma2.g23 -0.0765 0.0227 20000 -0.1207 -0.0320 #> gamma3.g12  0.0811 0.0201 20000  0.0416  0.1205 #> gamma3.g13  0.0211 0.0203 20000 -0.0185  0.0606 #> gamma3.g23 -0.0601 0.0196 20000 -0.0988 -0.0216"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-5-difference-rsq-multigroup.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"MCStd Function Use Case 5: Difference of R-Squared in Multiple Groups","text":"example, use data Kwan & Chan (2014) three groups (Hong Kong, Japan, Korea) child’s reading ability (\\(Y_{1}\\)) regressed parental occupational status (\\(X_{1}\\)), parental educational level (\\(X_{2}\\)), child’s home possession (\\(X_{3}\\)) \\[     Y_{1}     =     \\alpha_{1}     +     \\gamma_{1}     X_{1}     +     \\gamma_{2}     X_{2}     +     \\gamma_{3}     X_{3}     +     \\zeta_{1} . \\] Note \\(\\zeta_{1}\\) stochastic error term expected value zero finite variance \\(\\psi_{1}\\), \\(\\alpha_{1}\\) intercept, \\(\\gamma_{1}\\), \\(\\gamma_{2}\\), \\(\\gamma_{3}\\) regression coefficients. Three-Regressor Multiple Regression Model (Covariance Structure) Covariance Matrix Hong Kong Covariance Matrix Japan Covariance Matrix Korea","code":"knitr::kable(   x = covs_hongkong, digits = 4,   caption = \"Covariance Matrix for Hong Kong\" ) nobs_hongkong #> [1] 4625 knitr::kable(   x = covs_japan, digits = 4,   caption = \"Covariance Matrix for Japan\" ) nobs_japan #> [1] 5943 nobs_korea <- 5151 covs_korea <- matrix(   data = c(     8187.6921, 31.6266, 37.3062, 30.9021,     31.6266, 0.9271, 0.6338, 0.4088,     37.3062, 0.6338, 1.0007, 0.3902,     30.9021, 0.4088, 0.3902, 0.8031   ),   nrow = 4 ) colnames(covs_korea) <- rownames(covs_korea) <- varnames knitr::kable(   x = covs_korea, digits = 4,   caption = \"Covariance Matrix for Korea\" )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-5-difference-rsq-multigroup.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"MCStd Function Use Case 5: Difference of R-Squared in Multiple Groups","text":"regress Y1 X1, X2, X3. label error variance \\(\\zeta_{1}\\) three groups psi1.g1, psi1.g2, psi1.g3. \\(R^{2}\\) defined using := operator lavaan model syntax using following equation \\[     R^{2}     =     1 - \\psi^{\\ast} \\] \\(\\psi^{\\ast}\\) standardized error variance.","code":"model <- \"   Y1 ~ X1 + X2 + X3   Y1 ~~ c(psi1.g1, psi1.g2, psi1.g3) * Y1   rsq.g1 := 1 - psi1.g1   rsq.g2 := 1 - psi1.g2   rsq.g3 := 1 - psi1.g3   rsq.g12 := rsq.g1 - rsq.g2   rsq.g13 := rsq.g1 - rsq.g3   rsq.g23 := rsq.g2 - rsq.g3 \""},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-5-difference-rsq-multigroup.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"MCStd Function Use Case 5: Difference of R-Squared in Multiple Groups","text":"can now fit model using sem() function lavaan mimic = \"eqs\" ensure compatibility results Kwan & Chan (2014). Note: recommend setting fixed.x = FALSE generating standardized estimates confidence intervals model variances covariances exogenous observed variables assumed random. fixed.x = TRUE, default setting lavaan, MC() fix variances covariances exogenous observed variables sample values.","code":"fit <- sem(   model = model, mimic = \"eqs\", fixed.x = FALSE,   sample.cov = list(covs_hongkong, covs_japan, covs_korea),   sample.nobs = list(nobs_hongkong, nobs_japan, nobs_korea) )"},{"path":"https://github.com/jeksterslab/semmcci/articles/mcstd-5-difference-rsq-multigroup.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"MCStd Function Use Case 5: Difference of R-Squared in Multiple Groups","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCStd() function. Note: parameterization \\(R^{2}\\) interpreted using output MCStd() function since input functions defined := require standardized estimates.","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05) MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>               est     se     R    2.5%   97.5% #> Y1~X1      0.0568 0.0191 20000  0.0196  0.0953 #> Y1~X2      0.1985 0.0185 20000  0.1621  0.2344 #> Y1~X3      0.2500 0.0149 20000  0.2208  0.2790 #> psi1.g1    0.8215 0.0101 20000  0.8010  0.8406 #> X1~~X1     1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2     0.6917 0.0077 20000  0.6766  0.7066 #> X1~~X3     0.4702 0.0114 20000  0.4477  0.4924 #> X2~~X2     1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3     0.4471 0.0116 20000  0.4242  0.4697 #> X3~~X3     1.0000 0.0000 20000  1.0000  1.0000 #> Y1~X1.g2   0.1390 0.0164 20000  0.1069  0.1716 #> Y1~X2.g2   0.1792 0.0158 20000  0.1484  0.2100 #> Y1~X3.g2   0.1688 0.0137 20000  0.1418  0.1956 #> psi1.g2    0.8371 0.0088 20000  0.8192  0.8537 #> X1~~X1.g2  1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2.g2  0.6525 0.0075 20000  0.6379  0.6672 #> X1~~X3.g2  0.5023 0.0097 20000  0.4829  0.5209 #> X2~~X2.g2  1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3.g2  0.4452 0.0104 20000  0.4245  0.4651 #> X3~~X3.g2  1.0000 0.0000 20000  1.0000  1.0000 #> Y1~X1.g3   0.0863 0.0171 20000  0.0530  0.1198 #> Y1~X2.g3   0.2557 0.0163 20000  0.2238  0.2876 #> Y1~X3.g3   0.2289 0.0141 20000  0.2011  0.2561 #> psi1.g3    0.7761 0.0102 20000  0.7555  0.7958 #> X1~~X1.g3  1.0000 0.0000 20000  1.0000  1.0000 #> X1~~X2.g3  0.6580 0.0079 20000  0.6421  0.6732 #> X1~~X3.g3  0.4738 0.0108 20000  0.4524  0.4947 #> X2~~X2.g3  1.0000 0.0000 20000  1.0000  1.0000 #> X2~~X3.g3  0.4353 0.0114 20000  0.4130  0.4572 #> X3~~X3.g3  1.0000 0.0000 20000  1.0000  1.0000 #> rsq.g1     0.1785 0.0101 20000  0.1594  0.1990 #> rsq.g2     0.1629 0.0088 20000  0.1463  0.1808 #> rsq.g3     0.2239 0.0102 20000  0.2042  0.2445 #> rsq.g12    0.0155 0.0134 20000 -0.0106  0.0418 #> rsq.g13   -0.0455 0.0143 20000 -0.0734 -0.0172 #> rsq.g23   -0.0610 0.0135 20000 -0.0876 -0.0345"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"semmcci: Methods (MI)","text":"","code":"summary(df) #>        X                  M                  Y            #>  Min.   :-3.19956   Min.   :-3.37128   Min.   :-3.61432   #>  1st Qu.:-0.63268   1st Qu.:-0.70516   1st Qu.:-0.66921   #>  Median : 0.02823   Median : 0.02825   Median :-0.04833   #>  Mean   : 0.00269   Mean   :-0.01992   Mean   :-0.01538   #>  3rd Qu.: 0.65754   3rd Qu.: 0.65240   3rd Qu.: 0.65293   #>  Max.   : 3.47091   Max.   : 2.93497   Max.   : 3.09950   #>  NA's   :100        NA's   :100        NA's   :100"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"multiple-imputation","dir":"Articles","previous_headings":"","what":"Multiple Imputation","title":"semmcci: Methods (MI)","text":"Perform appropriate multiple imputation approach deal missing values. example, impute multivariate missing data normal model.","code":"mi <- mice::mice(   df,   method = \"norm\",   m = 100,   print = FALSE,   seed = 42 )"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"semmcci: Methods (MI)","text":"","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"semmcci: Methods (MI)","text":"","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"semmcci: Methods (MI)","text":"","code":"unstd <- MCMI(fit, mi = mi, R = 20000L, alpha = 0.05)"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"print","dir":"Articles","previous_headings":"Methods","what":"print","title":"semmcci: Methods (MI)","text":"","code":"print(unstd) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>             est     se     R   2.5%  97.5% #> cp       0.2328 0.0297 20000 0.1738 0.2904 #> b        0.5113 0.0299 20000 0.4525 0.5699 #> a        0.4811 0.0288 20000 0.4241 0.5370 #> X~~X     1.0617 0.0492 20000 0.9657 1.1584 #> Y~~Y     0.5533 0.0270 20000 0.5006 0.6065 #> M~~M     0.7568 0.0363 20000 0.6843 0.8279 #> indirect 0.2460 0.0203 20000 0.2074 0.2868 #> direct   0.2328 0.0297 20000 0.1738 0.2904 #> total    0.4788 0.0286 20000 0.4223 0.5340"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"summary","dir":"Articles","previous_headings":"Methods","what":"summary","title":"semmcci: Methods (MI)","text":"","code":"summary(unstd) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>             est     se     R   2.5%  97.5% #> cp       0.2328 0.0297 20000 0.1738 0.2904 #> b        0.5113 0.0299 20000 0.4525 0.5699 #> a        0.4811 0.0288 20000 0.4241 0.5370 #> X~~X     1.0617 0.0492 20000 0.9657 1.1584 #> Y~~Y     0.5533 0.0270 20000 0.5006 0.6065 #> M~~M     0.7568 0.0363 20000 0.6843 0.8279 #> indirect 0.2460 0.0203 20000 0.2074 0.2868 #> direct   0.2328 0.0297 20000 0.1738 0.2904 #> total    0.4788 0.0286 20000 0.4223 0.5340"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"coef","dir":"Articles","previous_headings":"Methods","what":"coef","title":"semmcci: Methods (MI)","text":"","code":"coef(unstd) #>        cp         b         a      X~~X      Y~~Y      M~~M  indirect    direct  #> 0.2328242 0.5113353 0.4810732 1.0617011 0.5533052 0.7567771 0.2459664 0.2328242  #>     total  #> 0.4787907"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"vcov","dir":"Articles","previous_headings":"Methods","what":"vcov","title":"semmcci: Methods (MI)","text":"","code":"vcov(unstd) #>                     cp             b             a          X~~X          Y~~Y #> cp        8.793329e-04 -4.666456e-04 -2.608999e-05  2.263679e-05 -1.233791e-05 #> b        -4.666456e-04  8.942491e-04 -2.013357e-05 -2.554609e-05 -2.939115e-05 #> a        -2.608999e-05 -2.013357e-05  8.269181e-04 -1.976744e-05  2.946446e-05 #> X~~X      2.263679e-05 -2.554609e-05 -1.976744e-05  2.416974e-03 -2.907825e-05 #> Y~~Y     -1.233791e-05 -2.939115e-05  2.946446e-05 -2.907825e-05  7.292425e-04 #> M~~M     -2.007116e-06 -3.376419e-07 -7.714066e-05 -1.619647e-05 -1.862093e-05 #> indirect -2.377392e-04  4.197873e-04  4.127939e-04 -2.219222e-05  1.044598e-06 #> direct    8.793329e-04 -4.666456e-04 -2.608999e-05  2.263679e-05 -1.233791e-05 #> total     6.415938e-04 -4.685834e-05  3.867039e-04  4.445779e-07 -1.129331e-05 #>                   M~~M      indirect        direct         total #> cp       -2.007116e-06 -2.377392e-04  8.793329e-04  6.415938e-04 #> b        -3.376419e-07  4.197873e-04 -4.666456e-04 -4.685834e-05 #> a        -7.714066e-05  4.127939e-04 -2.608999e-05  3.867039e-04 #> X~~X     -1.619647e-05 -2.219222e-05  2.263679e-05  4.445779e-07 #> Y~~Y     -1.862093e-05  1.044598e-06 -1.233791e-05 -1.129331e-05 #> M~~M      1.318828e-03 -3.962831e-05 -2.007116e-06 -4.163542e-05 #> indirect -3.962831e-05  4.135146e-04 -2.377392e-04  1.757755e-04 #> direct   -2.007116e-06 -2.377392e-04  8.793329e-04  6.415938e-04 #> total    -4.163542e-05  1.757755e-04  6.415938e-04  8.173692e-04"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"confint","dir":"Articles","previous_headings":"Methods","what":"confint","title":"semmcci: Methods (MI)","text":"","code":"confint(unstd, level = 0.95) #>              2.5 %    97.5 % #> cp       0.1737572 0.2904480 #> b        0.4525156 0.5698509 #> a        0.4240534 0.5370485 #> X~~X     0.9656753 1.1583784 #> Y~~Y     0.5006379 0.6064533 #> M~~M     0.6843484 0.8279415 #> indirect 0.2073727 0.2867631 #> direct   0.1737572 0.2904480 #> total    0.4222842 0.5340370"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"semmcci: Methods (MI)","text":"","code":"fit <- sem(data = df, model = model, fixed.x = FALSE) unstd <- MCMI(fit, mi = mi, R = 20000L, alpha = 0.05) std <- MCStd(unstd, alpha = 0.05)"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"print-1","dir":"Articles","previous_headings":"Methods","what":"print","title":"semmcci: Methods (MI)","text":"","code":"print(std) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2450 0.0304 20000 0.1809 0.2997 #> b        0.5189 0.0272 20000 0.4596 0.5662 #> a        0.5031 0.0259 20000 0.4438 0.5450 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y     0.5429 0.0249 20000 0.5064 0.6043 #> M~~M     0.7469 0.0256 20000 0.7030 0.8030 #> indirect 0.2610 0.0190 20000 0.2178 0.2919 #> direct   0.2450 0.0304 20000 0.1809 0.2997 #> total    0.5060 0.0259 20000 0.4427 0.5439"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"summary-1","dir":"Articles","previous_headings":"Methods","what":"summary","title":"semmcci: Methods (MI)","text":"","code":"summary(std) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2450 0.0304 20000 0.1809 0.2997 #> b        0.5189 0.0272 20000 0.4596 0.5662 #> a        0.5031 0.0259 20000 0.4438 0.5450 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y     0.5429 0.0249 20000 0.5064 0.6043 #> M~~M     0.7469 0.0256 20000 0.7030 0.8030 #> indirect 0.2610 0.0190 20000 0.2178 0.2919 #> direct   0.2450 0.0304 20000 0.1809 0.2997 #> total    0.5060 0.0259 20000 0.4427 0.5439"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"coef-1","dir":"Articles","previous_headings":"Methods","what":"coef","title":"semmcci: Methods (MI)","text":"","code":"coef(std) #>        cp         b         a      X~~X      Y~~Y      M~~M  indirect    direct  #> 0.2449797 0.5188628 0.5030687 1.0000000 0.5428754 0.7469219 0.2610236 0.2449797  #>     total  #> 0.5060033"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"vcov-1","dir":"Articles","previous_headings":"Methods","what":"vcov","title":"semmcci: Methods (MI)","text":"","code":"vcov(std) #>                     cp             b             a          X~~X          Y~~Y #> cp        9.218588e-04 -6.008139e-04 -1.477630e-05 -5.443656e-21 -1.481787e-04 #> b        -6.008139e-04  7.419563e-04  1.736830e-06  3.137550e-21 -3.434114e-04 #> a        -1.477630e-05  1.736830e-06  6.684570e-04 -2.057509e-20 -1.518231e-04 #> X~~X     -5.443656e-21  3.137550e-21 -2.057509e-20  1.179529e-32  7.457143e-21 #> Y~~Y     -1.481787e-04 -3.434114e-04 -1.518231e-04  7.457143e-21  6.182506e-04 #> M~~M      1.478581e-05 -1.883622e-06 -6.605900e-04  1.976146e-20  1.500498e-04 #> indirect -3.051023e-04  3.683107e-04  3.442103e-04 -9.316129e-21 -2.478961e-04 #> direct    9.218588e-04 -6.008139e-04 -1.477630e-05 -5.443656e-21 -1.481787e-04 #> total     6.167566e-04 -2.325032e-04  3.294340e-04 -1.475978e-20 -3.960748e-04 #>                   M~~M      indirect        direct         total #> cp        1.478581e-05 -3.051023e-04  9.218588e-04  6.167566e-04 #> b        -1.883622e-06  3.683107e-04 -6.008139e-04 -2.325032e-04 #> a        -6.605900e-04  3.442103e-04 -1.477630e-05  3.294340e-04 #> X~~X      1.976146e-20 -9.316129e-21 -5.443656e-21 -1.475978e-20 #> Y~~Y      1.500498e-04 -2.478961e-04 -1.481787e-04 -3.960748e-04 #> M~~M      6.537163e-04 -3.402445e-04  1.478581e-05 -3.254587e-04 #> indirect -3.402445e-04  3.596889e-04 -3.051023e-04  5.458664e-05 #> direct    1.478581e-05 -3.051023e-04  9.218588e-04  6.167566e-04 #> total    -3.254587e-04  5.458664e-05  6.167566e-04  6.713432e-04"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc-mi.html","id":"confint-1","dir":"Articles","previous_headings":"Methods","what":"confint","title":"semmcci: Methods (MI)","text":"","code":"confint(std, level = 0.95) #>              2.5 %    97.5 % #> cp       0.1809029 0.2996966 #> b        0.4595835 0.5662273 #> a        0.4437916 0.5450209 #> X~~X     1.0000000 1.0000000 #> Y~~Y     0.5063916 0.6043289 #> M~~M     0.7029523 0.8030490 #> indirect 0.2178409 0.2918832 #> direct   0.1809029 0.2996966 #> total    0.4426910 0.5438598"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"semmcci: Methods (MC)","text":"","code":"summary(df) #>        X                   M                   Y            #>  Min.   :-3.199558   Min.   :-3.371276   Min.   :-3.61432   #>  1st Qu.:-0.636035   1st Qu.:-0.692640   1st Qu.:-0.66146   #>  Median : 0.011377   Median : 0.007125   Median :-0.04726   #>  Mean   :-0.003207   Mean   :-0.023968   Mean   :-0.01677   #>  3rd Qu.: 0.651951   3rd Qu.: 0.647363   3rd Qu.: 0.62640   #>  Max.   : 3.470910   Max.   : 2.963216   Max.   : 3.09950 colMeans(df) #>            X            M            Y  #> -0.003206987 -0.023968103 -0.016774294 var(df) #>           X         M         Y #> X 1.0600162 0.5108780 0.5069458 #> M 0.5108780 0.9996606 0.6272104 #> Y 0.5069458 0.6272104 0.9837255"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"model-specification","dir":"Articles","previous_headings":"","what":"Model Specification","title":"semmcci: Methods (MC)","text":"","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model Fitting","title":"semmcci: Methods (MC)","text":"","code":"fit <- sem(data = df, model = model)"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Monte Carlo Confidence Intervals","title":"semmcci: Methods (MC)","text":"","code":"unstd <- MC(fit, R = 20000L, alpha = 0.05)"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"print","dir":"Articles","previous_headings":"Methods","what":"print","title":"semmcci: Methods (MC)","text":"","code":"print(unstd) #> Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2333 0.0261 20000 0.1821 0.2844 #> b        0.5082 0.0271 20000 0.4545 0.5613 #> a        0.4820 0.0266 20000 0.4297 0.5341 #> Y~~Y     0.5462 0.0245 20000 0.4989 0.5946 #> M~~M     0.7527 0.0339 20000 0.6848 0.8179 #> X~~X     1.0590 0.0000 20000 1.0590 1.0590 #> indirect 0.2449 0.0188 20000 0.2085 0.2828 #> direct   0.2333 0.0261 20000 0.1821 0.2844 #> total    0.4782 0.0263 20000 0.4270 0.5303"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"summary","dir":"Articles","previous_headings":"Methods","what":"summary","title":"semmcci: Methods (MC)","text":"","code":"summary(unstd) #> Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2333 0.0261 20000 0.1821 0.2844 #> b        0.5082 0.0271 20000 0.4545 0.5613 #> a        0.4820 0.0266 20000 0.4297 0.5341 #> Y~~Y     0.5462 0.0245 20000 0.4989 0.5946 #> M~~M     0.7527 0.0339 20000 0.6848 0.8179 #> X~~X     1.0590 0.0000 20000 1.0590 1.0590 #> indirect 0.2449 0.0188 20000 0.2085 0.2828 #> direct   0.2333 0.0261 20000 0.1821 0.2844 #> total    0.4782 0.0263 20000 0.4270 0.5303"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"coef","dir":"Articles","previous_headings":"Methods","what":"coef","title":"semmcci: Methods (MC)","text":"","code":"coef(unstd) #>        cp         b         a      Y~~Y      M~~M      X~~X  indirect    direct  #> 0.2333230 0.5081833 0.4819530 0.5461589 0.7526879 1.0589562 0.2449205 0.2333230  #>     total  #> 0.4782435"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"vcov","dir":"Articles","previous_headings":"Methods","what":"vcov","title":"semmcci: Methods (MC)","text":"","code":"vcov(unstd) #>                     cp             b             a          Y~~Y          M~~M #> cp        6.794387e-04 -3.535206e-04 -2.360885e-06 -6.020139e-07  1.557185e-06 #> b        -3.535206e-04  7.335282e-04  5.992877e-07 -1.481191e-06  1.603625e-06 #> a        -2.360885e-06  5.992877e-07  7.079137e-04 -4.066349e-06 -8.082677e-06 #> Y~~Y     -6.020139e-07 -1.481191e-06 -4.066349e-06  6.009210e-04 -6.351888e-06 #> M~~M      1.557185e-06  1.603625e-06 -8.082677e-06 -6.351888e-06  1.146172e-03 #> X~~X      0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00 #> indirect -1.712711e-04  3.533769e-04  3.599083e-04 -2.748105e-06 -3.055264e-06 #> direct    6.794387e-04 -3.535206e-04 -2.360885e-06 -6.020139e-07  1.557185e-06 #> total     5.081676e-04 -1.436643e-07  3.575474e-04 -3.350119e-06 -1.498079e-06 #>          X~~X      indirect        direct         total #> cp          0 -1.712711e-04  6.794387e-04  5.081676e-04 #> b           0  3.533769e-04 -3.535206e-04 -1.436643e-07 #> a           0  3.599083e-04 -2.360885e-06  3.575474e-04 #> Y~~Y        0 -2.748105e-06 -6.020139e-07 -3.350119e-06 #> M~~M        0 -3.055264e-06  1.557185e-06 -1.498079e-06 #> X~~X        0  0.000000e+00  0.000000e+00  0.000000e+00 #> indirect    0  3.534500e-04 -1.712711e-04  1.821789e-04 #> direct      0 -1.712711e-04  6.794387e-04  5.081676e-04 #> total       0  1.821789e-04  5.081676e-04  6.903466e-04"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"confint","dir":"Articles","previous_headings":"Methods","what":"confint","title":"semmcci: Methods (MC)","text":"","code":"confint(unstd, level = 0.95) #>              2.5 %    97.5 % #> cp       0.1821009 0.2844149 #> b        0.4545173 0.5612571 #> a        0.4297280 0.5341494 #> Y~~Y     0.4988619 0.5946498 #> M~~M     0.6848333 0.8179039 #> X~~X     1.0589562 1.0589562 #> indirect 0.2084972 0.2827945 #> direct   0.1821009 0.2844149 #> total    0.4270461 0.5302549"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"standardized-monte-carlo-confidence-intervals","dir":"Articles","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals","title":"semmcci: Methods (MC)","text":"","code":"fit <- sem(data = df, model = model, fixed.x = FALSE) unstd <- MC(fit, R = 20000L, alpha = 0.05) std <- MCStd(unstd, alpha = 0.05)"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"print-1","dir":"Articles","previous_headings":"Methods","what":"print","title":"semmcci: Methods (MC)","text":"","code":"print(std) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2422 0.0266 20000 0.1897 0.2939 #> b        0.5123 0.0246 20000 0.4640 0.5596 #> a        0.4963 0.0237 20000 0.4483 0.5409 #> Y~~Y     0.5558 0.0234 20000 0.5097 0.6017 #> M~~M     0.7537 0.0235 20000 0.7074 0.7991 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> indirect 0.2542 0.0175 20000 0.2197 0.2881 #> direct   0.2422 0.0266 20000 0.1897 0.2939 #> total    0.4964 0.0236 20000 0.4484 0.5413"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"summary-1","dir":"Articles","previous_headings":"Methods","what":"summary","title":"semmcci: Methods (MC)","text":"","code":"summary(std) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2422 0.0266 20000 0.1897 0.2939 #> b        0.5123 0.0246 20000 0.4640 0.5596 #> a        0.4963 0.0237 20000 0.4483 0.5409 #> Y~~Y     0.5558 0.0234 20000 0.5097 0.6017 #> M~~M     0.7537 0.0235 20000 0.7074 0.7991 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> indirect 0.2542 0.0175 20000 0.2197 0.2881 #> direct   0.2422 0.0266 20000 0.1897 0.2939 #> total    0.4964 0.0236 20000 0.4484 0.5413"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"coef-1","dir":"Articles","previous_headings":"Methods","what":"coef","title":"semmcci: Methods (MC)","text":"","code":"coef(std) #>        cp         b         a      Y~~Y      M~~M      X~~X  indirect    direct  #> 0.2422015 0.5122827 0.4962890 0.5557501 0.7536972 1.0000000 0.2542403 0.2422015  #>     total  #> 0.4964418"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"vcov-1","dir":"Articles","previous_headings":"Methods","what":"vcov","title":"semmcci: Methods (MC)","text":"","code":"vcov(std) #>                     cp             b             a          Y~~Y          M~~M #> cp        7.057190e-04 -4.612544e-04  1.315697e-06 -1.167333e-04 -1.230239e-06 #> b        -4.612544e-04  6.028897e-04  2.300437e-05 -3.099691e-04 -2.267495e-05 #> a         1.315697e-06  2.300437e-05  5.640018e-04 -1.693743e-04 -5.581675e-04 #> Y~~Y     -1.167333e-04 -3.099691e-04 -1.693743e-04  5.495376e-04  1.674590e-04 #> M~~M     -1.230239e-06 -2.267495e-05 -5.581675e-04  1.674590e-04  5.530133e-04 #> X~~X      3.508938e-20  7.134938e-21 -1.856808e-20 -3.953717e-20  1.885691e-20 #> indirect -2.278640e-04  3.104586e-04  3.000479e-04 -2.401366e-04 -2.969231e-04 #> direct    7.057190e-04 -4.612544e-04  1.315697e-06 -1.167333e-04 -1.230239e-06 #> total     4.778550e-04 -1.507958e-04  3.013636e-04 -3.568698e-04 -2.981533e-04 #>                   X~~X      indirect        direct         total #> cp        3.508938e-20 -2.278640e-04  7.057190e-04  4.778550e-04 #> b         7.134938e-21  3.104586e-04 -4.612544e-04 -1.507958e-04 #> a        -1.856808e-20  3.000479e-04  1.315697e-06  3.013636e-04 #> Y~~Y     -3.953717e-20 -2.401366e-04 -1.167333e-04 -3.568698e-04 #> M~~M      1.885691e-20 -2.969231e-04 -1.230239e-06 -2.981533e-04 #> X~~X      1.179653e-32 -5.801558e-21  3.508938e-20  2.928782e-20 #> indirect -5.801558e-21  3.077177e-04 -2.278640e-04  7.985369e-05 #> direct    3.508938e-20 -2.278640e-04  7.057190e-04  4.778550e-04 #> total     2.928782e-20  7.985369e-05  4.778550e-04  5.577087e-04"},{"path":"https://github.com/jeksterslab/semmcci/articles/methods-mc.html","id":"confint-1","dir":"Articles","previous_headings":"Methods","what":"confint","title":"semmcci: Methods (MC)","text":"","code":"confint(std, level = 0.95) #>              2.5 %    97.5 % #> cp       0.1896681 0.2938544 #> b        0.4639920 0.5595600 #> a        0.4482657 0.5409423 #> Y~~Y     0.5096932 0.6016718 #> M~~M     0.7073814 0.7990579 #> X~~X     1.0000000 1.0000000 #> indirect 0.2197441 0.2880944 #> direct   0.1896681 0.2938544 #> total    0.4483979 0.5413177"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/semmcci.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"can install CRAN release semmcci : can install development version semmcci GitHub :","code":"install.packages(\"semmcci\") if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"jeksterslab/semmcci\")"},{"path":"https://github.com/jeksterslab/semmcci/articles/semmcci.html","id":"the-monte-carlo-method","dir":"Articles","previous_headings":"","what":"The Monte Carlo Method","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"Monte Carlo method, sampling distribution parameter estimates \\(\\hat{\\boldsymbol{\\theta}}^{\\ast}\\) generated multivariate normal distribution using parameter estimates \\(\\hat{\\boldsymbol{\\theta}}\\) corresponding sampling variance-covariance matrix \\(\\widehat{\\mathrm{Var}} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\). \\[\\begin{equation}     \\hat{\\boldsymbol{\\theta}}^{\\ast}     \\sim     \\mathcal{N}     \\left(     \\hat{\\boldsymbol{\\theta}},     \\widehat{\\mathrm{Var}}     \\left(     \\hat{\\boldsymbol{\\theta}}     \\right)     \\right) \\end{equation}\\] Confidence intervals defined parameters \\(\\mathbf{g} \\left( \\hat{\\boldsymbol{\\theta}} \\right)\\) generated obtaining percentiles corresponding \\(100(1 - \\alpha)\\%\\) generated sampling distribution, \\(\\alpha\\) significance level.","code":""},{"path":"https://github.com/jeksterslab/semmcci/articles/semmcci.html","id":"semmcci","dir":"Articles","previous_headings":"","what":"semmcci","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"Monte Carlo confidence intervals free defined parameters Monte Carlo confidence intervals free defined parameters models fitted structural equation modeling package lavaan can generated using semmcci package. package three main functions, namely, MC(), MCMI(), MCStd(). output lavaan passed first argument MC() function MCMI() function generate Monte Carlo confidence intervals. Monte Carlo confidence intervals standardized estimates can also generated passing output MC() function MCMI() function MCStd() function. description package code examples presented Pesigan Cheung (2023: https://doi.org/10.3758/s13428-023-02114-4).","code":""},{"path":"https://github.com/jeksterslab/semmcci/articles/semmcci.html","id":"citation","dir":"Articles","previous_headings":"","what":"Citation","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"cite semmcci publications, please cite Pesigan & Cheung (2023).","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/articles/session/session.html","id":"session","dir":"Articles > Session","previous_headings":"","what":"Session","title":"semmcci: Session","text":"","code":"sessionInfo() #> R version 4.3.1 (2023-06-16) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] semmcci_1.1.0 #>  #> loaded via a namespace (and not attached): #>  [1] vctrs_0.6.3       cli_3.6.1         knitr_1.43        rlang_1.1.1       #>  [5] xfun_0.39         stringi_1.7.12    purrr_1.0.1       textshaping_0.3.6 #>  [9] jsonlite_1.8.7    glue_1.6.2        rprojroot_2.0.3   htmltools_0.5.5   #> [13] ragg_1.2.5        sass_0.4.7        rmarkdown_2.23    evaluate_0.21     #> [17] jquerylib_0.1.4   fastmap_1.1.1     yaml_2.3.7        lifecycle_1.0.3   #> [21] memoise_2.0.1     stringr_1.5.0     compiler_4.3.1    fs_1.6.3          #> [25] systemfonts_1.0.4 digest_0.6.33     R6_2.5.1          magrittr_2.0.3    #> [29] bslib_0.5.0       tools_4.3.1       pkgdown_2.0.7     cachem_1.0.8      #> [33] desc_1.4.2"},{"path":"https://github.com/jeksterslab/semmcci/articles/session/session.html","id":"packages","dir":"Articles > Session","previous_headings":"","what":"Packages","title":"semmcci: Session","text":"","code":"installed.packages() #>             Package       LibPath                           Version      #> abind       \"abind\"       \"/home/runner/work/_temp/Library\" \"1.4-5\"      #> Amelia      \"Amelia\"      \"/home/runner/work/_temp/Library\" \"1.8.1\"      #> arm         \"arm\"         \"/home/runner/work/_temp/Library\" \"1.13-1\"     #> askpass     \"askpass\"     \"/home/runner/work/_temp/Library\" \"1.1\"        #> backports   \"backports\"   \"/home/runner/work/_temp/Library\" \"1.4.1\"      #> base64enc   \"base64enc\"   \"/home/runner/work/_temp/Library\" \"0.1-3\"      #> bit         \"bit\"         \"/home/runner/work/_temp/Library\" \"4.0.5\"      #> bit64       \"bit64\"       \"/home/runner/work/_temp/Library\" \"4.0.5\"      #> bmemLavaan  \"bmemLavaan\"  \"/home/runner/work/_temp/Library\" \"0.5\"        #> brio        \"brio\"        \"/home/runner/work/_temp/Library\" \"1.1.3\"      #> broom       \"broom\"       \"/home/runner/work/_temp/Library\" \"1.0.5\"      #> bslib       \"bslib\"       \"/home/runner/work/_temp/Library\" \"0.5.0\"      #> cachem      \"cachem\"      \"/home/runner/work/_temp/Library\" \"1.0.8\"      #> callr       \"callr\"       \"/home/runner/work/_temp/Library\" \"3.7.3\"      #> cli         \"cli\"         \"/home/runner/work/_temp/Library\" \"3.6.1\"      #> clipr       \"clipr\"       \"/home/runner/work/_temp/Library\" \"0.8.0\"      #> coda        \"coda\"        \"/home/runner/work/_temp/Library\" \"0.19-4\"     #> crayon      \"crayon\"      \"/home/runner/work/_temp/Library\" \"1.5.2\"      #> curl        \"curl\"        \"/home/runner/work/_temp/Library\" \"5.0.1\"      #> desc        \"desc\"        \"/home/runner/work/_temp/Library\" \"1.4.2\"      #> diffobj     \"diffobj\"     \"/home/runner/work/_temp/Library\" \"0.3.5\"      #> digest      \"digest\"      \"/home/runner/work/_temp/Library\" \"0.6.33\"     #> downlit     \"downlit\"     \"/home/runner/work/_temp/Library\" \"0.4.3\"      #> dplyr       \"dplyr\"       \"/home/runner/work/_temp/Library\" \"1.1.2\"      #> ellipsis    \"ellipsis\"    \"/home/runner/work/_temp/Library\" \"0.3.2\"      #> evaluate    \"evaluate\"    \"/home/runner/work/_temp/Library\" \"0.21\"       #> fansi       \"fansi\"       \"/home/runner/work/_temp/Library\" \"1.0.4\"      #> fastmap     \"fastmap\"     \"/home/runner/work/_temp/Library\" \"1.1.1\"      #> fontawesome \"fontawesome\" \"/home/runner/work/_temp/Library\" \"0.5.1\"      #> forcats     \"forcats\"     \"/home/runner/work/_temp/Library\" \"1.0.0\"      #> foreach     \"foreach\"     \"/home/runner/work/_temp/Library\" \"1.5.2\"      #> fs          \"fs\"          \"/home/runner/work/_temp/Library\" \"1.6.3\"      #> generics    \"generics\"    \"/home/runner/work/_temp/Library\" \"0.1.3\"      #> glmnet      \"glmnet\"      \"/home/runner/work/_temp/Library\" \"4.1-7\"      #> glue        \"glue\"        \"/home/runner/work/_temp/Library\" \"1.6.2\"      #> haven       \"haven\"       \"/home/runner/work/_temp/Library\" \"2.5.3\"      #> highr       \"highr\"       \"/home/runner/work/_temp/Library\" \"0.10\"       #> hms         \"hms\"         \"/home/runner/work/_temp/Library\" \"1.1.3\"      #> htmltools   \"htmltools\"   \"/home/runner/work/_temp/Library\" \"0.5.5\"      #> httr        \"httr\"        \"/home/runner/work/_temp/Library\" \"1.4.6\"      #> iterators   \"iterators\"   \"/home/runner/work/_temp/Library\" \"1.0.14\"     #> jomo        \"jomo\"        \"/home/runner/work/_temp/Library\" \"2.7-6\"      #> jquerylib   \"jquerylib\"   \"/home/runner/work/_temp/Library\" \"0.1.4\"      #> jsonlite    \"jsonlite\"    \"/home/runner/work/_temp/Library\" \"1.8.7\"      #> knitr       \"knitr\"       \"/home/runner/work/_temp/Library\" \"1.43\"       #> lavaan      \"lavaan\"      \"/home/runner/work/_temp/Library\" \"0.6-16\"     #> lifecycle   \"lifecycle\"   \"/home/runner/work/_temp/Library\" \"1.0.3\"      #> lme4        \"lme4\"        \"/home/runner/work/_temp/Library\" \"1.1-34\"     #> magrittr    \"magrittr\"    \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> memoise     \"memoise\"     \"/home/runner/work/_temp/Library\" \"2.0.1\"      #> mi          \"mi\"          \"/home/runner/work/_temp/Library\" \"1.1\"        #> mice        \"mice\"        \"/home/runner/work/_temp/Library\" \"3.16.0\"     #> mime        \"mime\"        \"/home/runner/work/_temp/Library\" \"0.12\"       #> minqa       \"minqa\"       \"/home/runner/work/_temp/Library\" \"1.2.5\"      #> mitml       \"mitml\"       \"/home/runner/work/_temp/Library\" \"0.4-5\"      #> mnormt      \"mnormt\"      \"/home/runner/work/_temp/Library\" \"2.1.1\"      #> nloptr      \"nloptr\"      \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> numDeriv    \"numDeriv\"    \"/home/runner/work/_temp/Library\" \"2016.8-1.1\" #> openssl     \"openssl\"     \"/home/runner/work/_temp/Library\" \"2.1.0\"      #> ordinal     \"ordinal\"     \"/home/runner/work/_temp/Library\" \"2022.11-16\" #> pan         \"pan\"         \"/home/runner/work/_temp/Library\" \"1.8\"        #> pbivnorm    \"pbivnorm\"    \"/home/runner/work/_temp/Library\" \"0.6.0\"      #> pillar      \"pillar\"      \"/home/runner/work/_temp/Library\" \"1.9.0\"      #> pkgconfig   \"pkgconfig\"   \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> pkgdown     \"pkgdown\"     \"/home/runner/work/_temp/Library\" \"2.0.7\"      #> pkgload     \"pkgload\"     \"/home/runner/work/_temp/Library\" \"1.3.2.1\"    #> praise      \"praise\"      \"/home/runner/work/_temp/Library\" \"1.0.0\"      #> processx    \"processx\"    \"/home/runner/work/_temp/Library\" \"3.8.2\"      #> ps          \"ps\"          \"/home/runner/work/_temp/Library\" \"1.7.5\"      #> psych       \"psych\"       \"/home/runner/work/_temp/Library\" \"2.3.6\"      #> purrr       \"purrr\"       \"/home/runner/work/_temp/Library\" \"1.0.1\"      #> quadprog    \"quadprog\"    \"/home/runner/work/_temp/Library\" \"1.5-8\"      #> R6          \"R6\"          \"/home/runner/work/_temp/Library\" \"2.5.1\"      #> ragg        \"ragg\"        \"/home/runner/work/_temp/Library\" \"1.2.5\"      #> rappdirs    \"rappdirs\"    \"/home/runner/work/_temp/Library\" \"0.3.3\"      #> Rcpp        \"Rcpp\"        \"/home/runner/work/_temp/Library\" \"1.0.11\"     #> readr       \"readr\"       \"/home/runner/work/_temp/Library\" \"2.1.4\"      #> rematch2    \"rematch2\"    \"/home/runner/work/_temp/Library\" \"2.1.2\"      #> rlang       \"rlang\"       \"/home/runner/work/_temp/Library\" \"1.1.1\"      #> rmarkdown   \"rmarkdown\"   \"/home/runner/work/_temp/Library\" \"2.23\"       #> rprojroot   \"rprojroot\"   \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> rsem        \"rsem\"        \"/home/runner/work/_temp/Library\" \"0.5.0\"      #> sass        \"sass\"        \"/home/runner/work/_temp/Library\" \"0.4.7\"      #> sem         \"sem\"         \"/home/runner/work/_temp/Library\" \"3.1-15\"     #> semmcci     \"semmcci\"     \"/home/runner/work/_temp/Library\" \"1.1.0\"      #> sessioninfo \"sessioninfo\" \"/home/runner/work/_temp/Library\" \"1.2.2\"      #> shape       \"shape\"       \"/home/runner/work/_temp/Library\" \"1.4.6\"      #> snow        \"snow\"        \"/home/runner/work/_temp/Library\" \"0.4-4\"      #> snowfall    \"snowfall\"    \"/home/runner/work/_temp/Library\" \"1.84-6.2\"   #> stringi     \"stringi\"     \"/home/runner/work/_temp/Library\" \"1.7.12\"     #> stringr     \"stringr\"     \"/home/runner/work/_temp/Library\" \"1.5.0\"      #> sys         \"sys\"         \"/home/runner/work/_temp/Library\" \"3.4.2\"      #> systemfonts \"systemfonts\" \"/home/runner/work/_temp/Library\" \"1.0.4\"      #> testthat    \"testthat\"    \"/home/runner/work/_temp/Library\" \"3.1.10\"     #> textshaping \"textshaping\" \"/home/runner/work/_temp/Library\" \"0.3.6\"      #> tibble      \"tibble\"      \"/home/runner/work/_temp/Library\" \"3.2.1\"      #> tidyr       \"tidyr\"       \"/home/runner/work/_temp/Library\" \"1.3.0\"      #> tidyselect  \"tidyselect\"  \"/home/runner/work/_temp/Library\" \"1.2.0\"      #> tinytex     \"tinytex\"     \"/home/runner/work/_temp/Library\" \"0.45\"       #> tzdb        \"tzdb\"        \"/home/runner/work/_temp/Library\" \"0.4.0\"      #> ucminf      \"ucminf\"      \"/home/runner/work/_temp/Library\" \"1.2.0\"      #> utf8        \"utf8\"        \"/home/runner/work/_temp/Library\" \"1.2.3\"      #> vctrs       \"vctrs\"       \"/home/runner/work/_temp/Library\" \"0.6.3\"      #> vroom       \"vroom\"       \"/home/runner/work/_temp/Library\" \"1.6.3\"      #> waldo       \"waldo\"       \"/home/runner/work/_temp/Library\" \"0.5.1\"      #> whisker     \"whisker\"     \"/home/runner/work/_temp/Library\" \"0.4.1\"      #> withr       \"withr\"       \"/home/runner/work/_temp/Library\" \"2.5.0\"      #> xfun        \"xfun\"        \"/home/runner/work/_temp/Library\" \"0.39\"       #> xml2        \"xml2\"        \"/home/runner/work/_temp/Library\" \"1.3.5\"      #> yaml        \"yaml\"        \"/home/runner/work/_temp/Library\" \"2.3.7\"      #> pak         \"pak\"         \"/opt/R/4.3.1/lib/R/site-library\" \"0.5.1\"      #> base        \"base\"        \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> boot        \"boot\"        \"/opt/R/4.3.1/lib/R/library\"      \"1.3-28.1\"   #> class       \"class\"       \"/opt/R/4.3.1/lib/R/library\"      \"7.3-22\"     #> cluster     \"cluster\"     \"/opt/R/4.3.1/lib/R/library\"      \"2.1.4\"      #> codetools   \"codetools\"   \"/opt/R/4.3.1/lib/R/library\"      \"0.2-19\"     #> compiler    \"compiler\"    \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> datasets    \"datasets\"    \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> foreign     \"foreign\"     \"/opt/R/4.3.1/lib/R/library\"      \"0.8-84\"     #> graphics    \"graphics\"    \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> grDevices   \"grDevices\"   \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> grid        \"grid\"        \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> KernSmooth  \"KernSmooth\"  \"/opt/R/4.3.1/lib/R/library\"      \"2.23-21\"    #> lattice     \"lattice\"     \"/opt/R/4.3.1/lib/R/library\"      \"0.21-8\"     #> MASS        \"MASS\"        \"/opt/R/4.3.1/lib/R/library\"      \"7.3-60\"     #> Matrix      \"Matrix\"      \"/opt/R/4.3.1/lib/R/library\"      \"1.5-4.1\"    #> methods     \"methods\"     \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> mgcv        \"mgcv\"        \"/opt/R/4.3.1/lib/R/library\"      \"1.8-42\"     #> nlme        \"nlme\"        \"/opt/R/4.3.1/lib/R/library\"      \"3.1-162\"    #> nnet        \"nnet\"        \"/opt/R/4.3.1/lib/R/library\"      \"7.3-19\"     #> parallel    \"parallel\"    \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> rpart       \"rpart\"       \"/opt/R/4.3.1/lib/R/library\"      \"4.1.19\"     #> spatial     \"spatial\"     \"/opt/R/4.3.1/lib/R/library\"      \"7.3-16\"     #> splines     \"splines\"     \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> stats       \"stats\"       \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> stats4      \"stats4\"      \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> survival    \"survival\"    \"/opt/R/4.3.1/lib/R/library\"      \"3.5-5\"      #> tcltk       \"tcltk\"       \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> tools       \"tools\"       \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> utils       \"utils\"       \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #>             Priority      #> abind       NA            #> Amelia      NA            #> arm         NA            #> askpass     NA            #> backports   NA            #> base64enc   NA            #> bit         NA            #> bit64       NA            #> bmemLavaan  NA            #> brio        NA            #> broom       NA            #> bslib       NA            #> cachem      NA            #> callr       NA            #> cli         NA            #> clipr       NA            #> coda        NA            #> crayon      NA            #> curl        NA            #> desc        NA            #> diffobj     NA            #> digest      NA            #> downlit     NA            #> dplyr       NA            #> ellipsis    NA            #> evaluate    NA            #> fansi       NA            #> fastmap     NA            #> fontawesome NA            #> forcats     NA            #> foreach     NA            #> fs          NA            #> generics    NA            #> glmnet      NA            #> glue        NA            #> haven       NA            #> highr       NA            #> hms         NA            #> htmltools   NA            #> httr        NA            #> iterators   NA            #> jomo        NA            #> jquerylib   NA            #> jsonlite    NA            #> knitr       NA            #> lavaan      NA            #> lifecycle   NA            #> lme4        NA            #> magrittr    NA            #> memoise     NA            #> mi          NA            #> mice        NA            #> mime        NA            #> minqa       NA            #> mitml       NA            #> mnormt      NA            #> nloptr      NA            #> numDeriv    NA            #> openssl     NA            #> ordinal     NA            #> pan         NA            #> pbivnorm    NA            #> pillar      NA            #> pkgconfig   NA            #> pkgdown     NA            #> pkgload     NA            #> praise      NA            #> processx    NA            #> ps          NA            #> psych       NA            #> purrr       NA            #> quadprog    NA            #> R6          NA            #> ragg        NA            #> rappdirs    NA            #> Rcpp        NA            #> readr       NA            #> rematch2    NA            #> rlang       NA            #> rmarkdown   NA            #> rprojroot   NA            #> rsem        NA            #> sass        NA            #> sem         NA            #> semmcci     NA            #> sessioninfo NA            #> shape       NA            #> snow        NA            #> snowfall    NA            #> stringi     NA            #> stringr     NA            #> sys         NA            #> systemfonts NA            #> testthat    NA            #> textshaping NA            #> tibble      NA            #> tidyr       NA            #> tidyselect  NA            #> tinytex     NA            #> tzdb        NA            #> ucminf      NA            #> utf8        NA            #> vctrs       NA            #> vroom       NA            #> waldo       NA            #> whisker     NA            #> withr       NA            #> xfun        NA            #> xml2        NA            #> yaml        NA            #> pak         NA            #> base        \"base\"        #> boot        \"recommended\" #> class       \"recommended\" #> cluster     \"recommended\" #> codetools   \"recommended\" #> compiler    \"base\"        #> datasets    \"base\"        #> foreign     \"recommended\" #> graphics    \"base\"        #> grDevices   \"base\"        #> grid        \"base\"        #> KernSmooth  \"recommended\" #> lattice     \"recommended\" #> MASS        \"recommended\" #> Matrix      \"recommended\" #> methods     \"base\"        #> mgcv        \"recommended\" #> nlme        \"recommended\" #> nnet        \"recommended\" #> parallel    \"base\"        #> rpart       \"recommended\" #> spatial     \"recommended\" #> splines     \"base\"        #> stats       \"base\"        #> stats4      \"base\"        #> survival    \"recommended\" #> tcltk       \"base\"        #> tools       \"base\"        #> utils       \"base\"        #>             Depends                                                     #> abind       \"R (>= 1.5.0)\"                                              #> Amelia      \"R (>= 3.0.2), Rcpp (>= 0.11)\"                              #> arm         \"R (>= 3.1.0), MASS, Matrix (>= 1.0), stats, lme4 (>= 1.0)\" #> askpass     NA                                                          #> backports   \"R (>= 3.0.0)\"                                              #> base64enc   \"R (>= 2.9.0)\"                                              #> bit         \"R (>= 2.9.2)\"                                              #> bit64       \"R (>= 3.0.1), bit (>= 4.0.0), utils, methods, stats\"       #> bmemLavaan  \"R (>= 3.5.0), Amelia, MASS, snowfall, rsem\"                #> brio        NA                                                          #> broom       \"R (>= 3.5)\"                                                #> bslib       \"R (>= 2.10)\"                                               #> cachem      NA                                                          #> callr       \"R (>= 3.4)\"                                                #> cli         \"R (>= 3.4)\"                                                #> clipr       NA                                                          #> coda        \"R (>= 2.14.0)\"                                             #> crayon      NA                                                          #> curl        \"R (>= 3.0.0)\"                                              #> desc        \"R (>= 3.4)\"                                                #> diffobj     \"R (>= 3.1.0)\"                                              #> digest      \"R (>= 3.3.0)\"                                              #> downlit     \"R (>= 3.4.0)\"                                              #> dplyr       \"R (>= 3.5.0)\"                                              #> ellipsis    \"R (>= 3.2)\"                                                #> evaluate    \"R (>= 3.0.2)\"                                              #> fansi       \"R (>= 3.1.0)\"                                              #> fastmap     NA                                                          #> fontawesome \"R (>= 3.3.0)\"                                              #> forcats     \"R (>= 3.4)\"                                                #> foreach     \"R (>= 2.5.0)\"                                              #> fs          \"R (>= 3.4)\"                                                #> generics    \"R (>= 3.2)\"                                                #> glmnet      \"R (>= 3.6.0), Matrix (>= 1.0-6)\"                           #> glue        \"R (>= 3.4)\"                                                #> haven       \"R (>= 3.6)\"                                                #> highr       \"R (>= 3.3.0)\"                                              #> hms         NA                                                          #> htmltools   \"R (>= 2.14.1)\"                                             #> httr        \"R (>= 3.5)\"                                                #> iterators   \"R (>= 2.5.0), utils\"                                       #> jomo        NA                                                          #> jquerylib   NA                                                          #> jsonlite    \"methods\"                                                   #> knitr       \"R (>= 3.3.0)\"                                              #> lavaan      \"R(>= 3.4)\"                                                 #> lifecycle   \"R (>= 3.4)\"                                                #> lme4        \"R (>= 3.5.0), Matrix (>= 1.2-1), methods, stats\"           #> magrittr    \"R (>= 3.4.0)\"                                              #> memoise     NA                                                          #> mi          \"R (>= 3.0.0), methods, Matrix, stats4\"                     #> mice        \"R (>= 2.10.0)\"                                             #> mime        NA                                                          #> minqa       NA                                                          #> mitml       NA                                                          #> mnormt      \"R (>= 2.2.0)\"                                              #> nloptr      NA                                                          #> numDeriv    \"R (>= 2.11.1)\"                                             #> openssl     NA                                                          #> ordinal     \"R (>= 2.13.0), stats, methods\"                             #> pan         NA                                                          #> pbivnorm    NA                                                          #> pillar      NA                                                          #> pkgconfig   NA                                                          #> pkgdown     \"R (>= 3.1.0)\"                                              #> pkgload     \"R (>= 3.4.0)\"                                              #> praise      NA                                                          #> processx    \"R (>= 3.4.0)\"                                              #> ps          \"R (>= 3.4)\"                                                #> psych       NA                                                          #> purrr       \"R (>= 3.4.0)\"                                              #> quadprog    \"R (>= 3.1.0)\"                                              #> R6          \"R (>= 3.0)\"                                                #> ragg        NA                                                          #> rappdirs    \"R (>= 3.2)\"                                                #> Rcpp        NA                                                          #> readr       \"R (>= 3.5)\"                                                #> rematch2    NA                                                          #> rlang       \"R (>= 3.5.0)\"                                              #> rmarkdown   \"R (>= 3.0)\"                                                #> rprojroot   \"R (>= 3.0.0)\"                                              #> rsem        \"R (>= 2.7), MASS, lavaan\"                                  #> sass        NA                                                          #> sem         \"R (>= 3.5.0), stats\"                                       #> semmcci     \"R (>= 3.0.0)\"                                              #> sessioninfo \"R (>= 2.10)\"                                               #> shape       \"R (>= 2.01)\"                                               #> snow        \"R (>= 2.13.1), utils\"                                      #> snowfall    \"R (>= 2.10), snow\"                                         #> stringi     \"R (>= 3.1)\"                                                #> stringr     \"R (>= 3.3)\"                                                #> sys         NA                                                          #> systemfonts \"R (>= 3.2.0)\"                                              #> testthat    \"R (>= 3.1)\"                                                #> textshaping \"R (>= 3.2.0)\"                                              #> tibble      \"R (>= 3.4.0)\"                                              #> tidyr       \"R (>= 3.4.0)\"                                              #> tidyselect  \"R (>= 3.4)\"                                                #> tinytex     NA                                                          #> tzdb        \"R (>= 3.5.0)\"                                              #> ucminf      \"R (>= 3.5.0)\"                                              #> utf8        \"R (>= 2.10)\"                                               #> vctrs       \"R (>= 3.5.0)\"                                              #> vroom       \"R (>= 3.4)\"                                                #> waldo       NA                                                          #> whisker     NA                                                          #> withr       \"R (>= 3.2.0)\"                                              #> xfun        NA                                                          #> xml2        \"R (>= 3.1.0)\"                                              #> yaml        NA                                                          #> pak         \"R (>= 3.2)\"                                                #> base        NA                                                          #> boot        \"R (>= 3.0.0), graphics, stats\"                             #> class       \"R (>= 3.0.0), stats, utils\"                                #> cluster     \"R (>= 3.5.0)\"                                              #> codetools   \"R (>= 2.1)\"                                                #> compiler    NA                                                          #> datasets    NA                                                          #> foreign     \"R (>= 4.0.0)\"                                              #> graphics    NA                                                          #> grDevices   NA                                                          #> grid        NA                                                          #> KernSmooth  \"R (>= 2.5.0), stats\"                                       #> lattice     \"R (>= 4.0.0)\"                                              #> MASS        \"R (>= 4.0), grDevices, graphics, stats, utils\"             #> Matrix      \"R (>= 3.5.0), methods\"                                     #> methods     NA                                                          #> mgcv        \"R (>= 3.6.0), nlme (>= 3.1-64)\"                            #> nlme        \"R (>= 3.5.0)\"                                              #> nnet        \"R (>= 3.0.0), stats, utils\"                                #> parallel    NA                                                          #> rpart       \"R (>= 2.15.0), graphics, stats, grDevices\"                 #> spatial     \"R (>= 3.0.0), graphics, stats, utils\"                      #> splines     NA                                                          #> stats       NA                                                          #> stats4      NA                                                          #> survival    \"R (>= 3.5.0)\"                                              #> tcltk       NA                                                          #> tools       NA                                                          #> utils       NA                                                          #>             Imports                                                                                                                                                                                                                                                                       #> abind       \"methods, utils\"                                                                                                                                                                                                                                                              #> Amelia      \"foreign, utils, grDevices, graphics, methods, stats, rlang\"                                                                                                                                                                                                                  #> arm         \"abind, coda, graphics, grDevices, methods, nlme, utils\"                                                                                                                                                                                                                      #> askpass     \"sys (>= 2.1)\"                                                                                                                                                                                                                                                                #> backports   NA                                                                                                                                                                                                                                                                            #> base64enc   NA                                                                                                                                                                                                                                                                            #> bit         NA                                                                                                                                                                                                                                                                            #> bit64       NA                                                                                                                                                                                                                                                                            #> bmemLavaan  \"lavaan, sem\"                                                                                                                                                                                                                                                                 #> brio        NA                                                                                                                                                                                                                                                                            #> broom       \"backports, dplyr (>= 1.0.0), ellipsis, generics (>= 0.0.2),\\nglue, lifecycle, purrr, rlang, stringr, tibble (>= 3.0.0),\\ntidyr (>= 1.0.0)\"                                                                                                                                   #> bslib       \"base64enc, cachem, grDevices, htmltools (>= 0.5.4), jquerylib\\n(>= 0.1.3), jsonlite, memoise (>= 2.0.1), mime, rlang, sass (>=\\n0.4.0)\"                                                                                                                                      #> cachem      \"rlang, fastmap (>= 1.1.1)\"                                                                                                                                                                                                                                                   #> callr       \"processx (>= 3.6.1), R6, utils\"                                                                                                                                                                                                                                              #> cli         \"utils\"                                                                                                                                                                                                                                                                       #> clipr       \"utils\"                                                                                                                                                                                                                                                                       #> coda        \"lattice\"                                                                                                                                                                                                                                                                     #> crayon      \"grDevices, methods, utils\"                                                                                                                                                                                                                                                   #> curl        NA                                                                                                                                                                                                                                                                            #> desc        \"cli, R6, rprojroot, utils\"                                                                                                                                                                                                                                                   #> diffobj     \"crayon (>= 1.3.2), tools, methods, utils, stats\"                                                                                                                                                                                                                             #> digest      \"utils\"                                                                                                                                                                                                                                                                       #> downlit     \"brio, desc, digest, evaluate, fansi, memoise, rlang, vctrs,\\nwithr, yaml\"                                                                                                                                                                                                    #> dplyr       \"cli (>= 3.4.0), generics, glue (>= 1.3.2), lifecycle (>=\\n1.0.3), magrittr (>= 1.5), methods, pillar (>= 1.9.0), R6,\\nrlang (>= 1.1.0), tibble (>= 3.2.0), tidyselect (>= 1.2.0),\\nutils, vctrs (>= 0.6.0)\"                                                                  #> ellipsis    \"rlang (>= 0.3.0)\"                                                                                                                                                                                                                                                            #> evaluate    \"methods\"                                                                                                                                                                                                                                                                     #> fansi       \"grDevices, utils\"                                                                                                                                                                                                                                                            #> fastmap     NA                                                                                                                                                                                                                                                                            #> fontawesome \"rlang (>= 1.0.6), htmltools (>= 0.5.1.1)\"                                                                                                                                                                                                                                    #> forcats     \"cli (>= 3.4.0), glue, lifecycle, magrittr, rlang (>= 1.0.0),\\ntibble\"                                                                                                                                                                                                        #> foreach     \"codetools, utils, iterators\"                                                                                                                                                                                                                                                 #> fs          \"methods\"                                                                                                                                                                                                                                                                     #> generics    \"methods\"                                                                                                                                                                                                                                                                     #> glmnet      \"methods, utils, foreach, shape, survival, Rcpp\"                                                                                                                                                                                                                              #> glue        \"methods\"                                                                                                                                                                                                                                                                     #> haven       \"cli (>= 3.0.0), forcats (>= 0.2.0), hms, lifecycle, methods,\\nreadr (>= 0.1.0), rlang (>= 0.4.0), tibble, tidyselect, vctrs\\n(>= 0.3.0)\"                                                                                                                                     #> highr       \"xfun (>= 0.18)\"                                                                                                                                                                                                                                                              #> hms         \"lifecycle, methods, pkgconfig, rlang (>= 1.0.2), vctrs (>=\\n0.3.8)\"                                                                                                                                                                                                          #> htmltools   \"utils, digest, grDevices, base64enc, rlang (>= 0.4.10),\\nfastmap (>= 1.1.0), ellipsis\"                                                                                                                                                                                       #> httr        \"curl (>= 3.0.0), jsonlite, mime, openssl (>= 0.8), R6\"                                                                                                                                                                                                                       #> iterators   NA                                                                                                                                                                                                                                                                            #> jomo        \"stats, lme4, survival, MASS, ordinal, tibble\"                                                                                                                                                                                                                                #> jquerylib   \"htmltools\"                                                                                                                                                                                                                                                                   #> jsonlite    NA                                                                                                                                                                                                                                                                            #> knitr       \"evaluate (>= 0.15), highr, methods, tools, xfun (>= 0.39),\\nyaml (>= 2.1.19)\"                                                                                                                                                                                                #> lavaan      \"methods, stats4, stats, utils, graphics, MASS, mnormt,\\npbivnorm, numDeriv, quadprog\"                                                                                                                                                                                        #> lifecycle   \"cli (>= 3.4.0), glue, rlang (>= 1.0.6)\"                                                                                                                                                                                                                                      #> lme4        \"graphics, grid, splines, utils, parallel, MASS, lattice, boot,\\nnlme (>= 3.1-123), minqa (>= 1.1.15), nloptr (>= 1.0.4)\"                                                                                                                                                     #> magrittr    NA                                                                                                                                                                                                                                                                            #> memoise     \"rlang (>= 0.4.10), cachem\"                                                                                                                                                                                                                                                   #> mi          \"arm (>= 1.4-11)\"                                                                                                                                                                                                                                                             #> mice        \"broom, dplyr, generics, glmnet, graphics, grDevices, lattice,\\nmethods, mitml, nnet, Rcpp, rpart, rlang, stats, tidyr, utils\"                                                                                                                                                #> mime        \"tools\"                                                                                                                                                                                                                                                                       #> minqa       \"Rcpp (>= 0.9.10)\"                                                                                                                                                                                                                                                            #> mitml       \"pan, jomo, haven, grDevices, graphics, stats, methods, utils\"                                                                                                                                                                                                                #> mnormt      NA                                                                                                                                                                                                                                                                            #> nloptr      NA                                                                                                                                                                                                                                                                            #> numDeriv    NA                                                                                                                                                                                                                                                                            #> openssl     \"askpass\"                                                                                                                                                                                                                                                                     #> ordinal     \"ucminf, MASS, Matrix, numDeriv, nlme\"                                                                                                                                                                                                                                        #> pan         NA                                                                                                                                                                                                                                                                            #> pbivnorm    NA                                                                                                                                                                                                                                                                            #> pillar      \"cli (>= 2.3.0), fansi, glue, lifecycle, rlang (>= 1.0.2), utf8\\n(>= 1.1.0), utils, vctrs (>= 0.5.0)\"                                                                                                                                                                         #> pkgconfig   \"utils\"                                                                                                                                                                                                                                                                       #> pkgdown     \"bslib (>= 0.3.1), callr (>= 3.7.3), cli, desc, digest, downlit\\n(>= 0.4.0), fs (>= 1.4.0), httr (>= 1.4.2), jsonlite, magrittr,\\nmemoise, purrr, ragg, rlang (>= 1.0.0), rmarkdown (>=\\n1.1.9007), tibble, whisker, withr (>= 2.4.3), xml2 (>= 1.3.1),\\nyaml\"                #> pkgload     \"cli (>= 3.3.0), crayon, desc, fs, glue, methods, rlang (>=\\n1.0.3), rprojroot, utils, withr (>= 2.4.3)\"                                                                                                                                                                      #> praise      NA                                                                                                                                                                                                                                                                            #> processx    \"ps (>= 1.2.0), R6, utils\"                                                                                                                                                                                                                                                    #> ps          \"utils\"                                                                                                                                                                                                                                                                       #> psych       \"mnormt,parallel,stats,graphics,grDevices,methods,lattice,nlme\"                                                                                                                                                                                                               #> purrr       \"cli (>= 3.4.0), lifecycle (>= 1.0.3), magrittr (>= 1.5.0),\\nrlang (>= 0.4.10), vctrs (>= 0.5.0)\"                                                                                                                                                                             #> quadprogragg        \"systemfonts (>= 1.0.3), textshaping (>= 0.3.0)\"                                                                                                                                                                                                                              #> rappdirs    NA                                                                                                                                                                                                                                                                            #> Rcpp        \"methods, utils\"                                                                                                                                                                                                                                                              #> readr       \"cli (>= 3.2.0), clipr, crayon, hms (>= 0.4.1), lifecycle (>=\\n0.2.0), methods, R6, rlang, tibble, utils, vroom (>= 1.6.0)\"                                                                                                                                                   #> rematch2    \"tibble\"                                                                                                                                                                                                                                                                      #> rlang       \"utils\"                                                                                                                                                                                                                                                                       #> rmarkdown   \"bslib (>= 0.2.5.1), evaluate (>= 0.13), fontawesome (>=\\n0.5.0), htmltools (>= 0.5.1), jquerylib, jsonlite, knitr (>=\\n1.22), methods, stringr (>= 1.2.0), tinytex (>= 0.31), tools,\\nutils, xfun (>= 0.36), yaml (>= 2.1.19)\"                                               #> rprojroot   NA                                                                                                                                                                                                                                                                            #> rsem        NA                                                                                                                                                                                                                                                                            #> sass        \"fs (>= 1.2.4), rlang (>= 0.4.10), htmltools (>= 0.5.1), R6,\\nrappdirs\"                                                                                                                                                                                                       #> sem         \"MASS, boot, mi (>= 0.9-99), utils\"                                                                                                                                                                                                                                           #> semmcci     \"stats, lavaan, mice\"                                                                                                                                                                                                                                                         #> sessioninfo \"cli (>= 3.1.0), tools, utils\"                                                                                                                                                                                                                                                #> shape       \"stats, graphics, grDevices\"                                                                                                                                                                                                                                                  #> snow        NA                                                                                                                                                                                                                                                                            #> snowfall    NA                                                                                                                                                                                                                                                                            #> stringi     \"tools, utils, stats\"                                                                                                                                                                                                                                                         #> stringr     \"cli, glue (>= 1.6.1), lifecycle (>= 1.0.3), magrittr, rlang\\n(>= 1.0.0), stringi (>= 1.5.3), vctrs\"                                                                                                                                                                          #> sys         NA                                                                                                                                                                                                                                                                            #> systemfonts NA                                                                                                                                                                                                                                                                            #> testthat    \"brio, callr (>= 3.5.1), cli (>= 3.4.0), desc, digest, ellipsis\\n(>= 0.2.0), evaluate, jsonlite, lifecycle, magrittr, methods,\\npkgload (>= 1.3.0), praise, processx (>= 3.8.2), ps (>= 1.3.4),\\nR6 (>= 2.2.0), rlang (>= 1.1.0), utils, waldo (>= 0.5.0), withr\\n(>= 2.4.3)\" #> textshaping \"systemfonts (>= 1.0.0)\"                                                                                                                                                                                                                                                      #> tibble      \"fansi (>= 0.4.0), lifecycle (>= 1.0.0), magrittr, methods,\\npillar (>= 1.8.1), pkgconfig, rlang (>= 1.0.2), utils, vctrs\\n(>= 0.4.2)\"                                                                                                                                        #> tidyr       \"cli (>= 3.4.1), dplyr (>= 1.0.10), glue, lifecycle (>= 1.0.3),\\nmagrittr, purrr (>= 1.0.1), rlang (>= 1.0.4), stringr (>=\\n1.5.0), tibble (>= 2.1.1), tidyselect (>= 1.2.0), utils, vctrs\\n(>= 0.5.2)\"                                                                       #> tidyselect  \"cli (>= 3.3.0), glue (>= 1.3.0), lifecycle (>= 1.0.3), rlang\\n(>= 1.0.4), vctrs (>= 0.4.1), withr\"                                                                                                                                                                           #> tinytex     \"xfun (>= 0.29)\"                                                                                                                                                                                                                                                              #> tzdb        NA                                                                                                                                                                                                                                                                            #> ucminf      NA                                                                                                                                                                                                                                                                            #> utf8        NA                                                                                                                                                                                                                                                                            #> vctrs       \"cli (>= 3.4.0), glue, lifecycle (>= 1.0.3), rlang (>= 1.1.0)\"                                                                                                                                                                                                                #> vroom       \"bit64, cli (>= 3.2.0), crayon, glue, hms, lifecycle (>=\\n1.0.3), methods, rlang (>= 0.4.2), stats, tibble (>= 2.0.0),\\ntidyselect, tzdb (>= 0.1.1), vctrs (>= 0.2.0), withr\"                                                                                                 #> waldo       \"cli, diffobj (>= 0.3.4), fansi, glue, methods, rematch2, rlang\\n(>= 1.0.0), tibble\"                                                                                                                                                                                          #> whisker     NA                                                                                                                                                                                                                                                                            #> withr       \"graphics, grDevices, stats\"                                                                                                                                                                                                                                                  #> xfun        \"stats, tools\"                                                                                                                                                                                                                                                                #> xml2        \"methods\"                                                                                                                                                                                                                                                                     #> yaml        NA                                                                                                                                                                                                                                                                            #> pak         \"tools,\\nutils\"                                                                                                                                                                                                                                                               #> base        NA                                                                                                                                                                                                                                                                            #> boot        NA                                                                                                                                                                                                                                                                            #> class       \"MASS\"                                                                                                                                                                                                                                                                        #> cluster     \"graphics, grDevices, stats, utils\"                                                                                                                                                                                                                                           #> codetools   NA                                                                                                                                                                                                                                                                            #> compiler    NA                                                                                                                                                                                                                                                                            #> datasets    NA                                                                                                                                                                                                                                                                            #> foreign     \"methods, utils, stats\"                                                                                                                                                                                                                                                       #> graphics    \"grDevices\"                                                                                                                                                                                                                                                                   #> grDevices   NA                                                                                                                                                                                                                                                                            #> grid        \"grDevices, utils\"                                                                                                                                                                                                                                                            #> KernSmooth  NA                                                                                                                                                                                                                                                                            #> lattice     \"grid, grDevices, graphics, stats, utils\"                                                                                                                                                                                                                                     #> MASS        \"methods\"                                                                                                                                                                                                                                                                     #> Matrix      \"graphics, grid, lattice, stats, utils\"                                                                                                                                                                                                                                       #> methods     \"utils, stats\"                                                                                                                                                                                                                                                                #> mgcv        \"methods, stats, graphics, Matrix, splines, utils\"                                                                                                                                                                                                                            #> nlme        \"graphics, stats, utils, lattice\"                                                                                                                                                                                                                                             #> nnet        NA                                                                                                                                                                                                                                                                            #> parallel    \"tools, compiler\"                                                                                                                                                                                                                                                             #> rpart       NA                                                                                                                                                                                                                                                                            #> spatial     NA                                                                                                                                                                                                                                                                            #> splines     \"graphics, stats\"                                                                                                                                                                                                                                                             #> stats       \"utils, grDevices, graphics\"                                                                                                                                                                                                                                                  #> stats4      \"graphics, methods, stats\"                                                                                                                                                                                                                                                    #> survival    \"graphics, Matrix, methods, splines, stats, utils\"                                                                                                                                                                                                                            #> tcltk       \"utils\"                                                                                                                                                                                                                                                                       #> tools       NA                                                                                                                                                                                                                                                                            #> utils       NA                                                                                                                                                                                                                                                                            #>             LinkingTo                                                #> abind       NA                                                       #> Amelia      \"Rcpp (>= 0.11), RcppArmadillo\"                          #> arm         NA                                                       #> askpass     NA                                                       #> backports   NA                                                       #> base64enc   NA                                                       #> bit         NA                                                       #> bit64       NA                                                       #> bmemLavaan  NA                                                       #> brio        NA                                                       #> broom       NA                                                       #> bslib       NA                                                       #> cachem      NA                                                       #> callr       NA                                                       #> cli         NA                                                       #> clipr       NA                                                       #> coda        NA                                                       #> crayon      NA                                                       #> curl        NA                                                       #> desc        NA                                                       #> diffobj     NA                                                       #> digest      NA                                                       #> downlit     NA                                                       #> dplyr       NA                                                       #> ellipsis    NA                                                       #> evaluate    NA                                                       #> fansi       NA                                                       #> fastmap     NA                                                       #> fontawesome NA                                                       #> forcats     NA                                                       #> foreach     NA                                                       #> fs          NA                                                       #> generics    NA                                                       #> glmnet      \"RcppEigen, Rcpp\"                                        #> glue        NA                                                       #> haven       \"cpp11\"                                                  #> highr       NA                                                       #> hms         NA                                                       #> htmltools   NA                                                       #> httr        NA                                                       #> iterators   NA                                                       #> jomo        NA                                                       #> jquerylib   NA                                                       #> jsonlite    NA                                                       #> knitr       NA                                                       #> lavaan      NA                                                       #> lifecycle   NA                                                       #> lme4        \"Rcpp (>= 0.10.5), RcppEigen\"                            #> magrittr    NA                                                       #> memoise     NA                                                       #> mi          NA                                                       #> mice        \"cpp11, Rcpp\"                                            #> mime        NA                                                       #> minqa       \"Rcpp\"                                                   #> mitml       NA                                                       #> mnormt      NA                                                       #> nloptr      \"testthat\"                                               #> numDeriv    NA                                                       #> openssl     NA                                                       #> ordinal     NA                                                       #> pan         NA                                                       #> pbivnorm    NA                                                       #> pillar      NA                                                       #> pkgconfig   NA                                                       #> pkgdown     NA                                                       #> pkgload     NA                                                       #> praise      NA                                                       #> processx    NA                                                       #> ps          NA                                                       #> psych       NA                                                       #> purrr       \"cli\"                                                    #> quadprog    NA                                                       #> R6          NA                                                       #> ragg        \"systemfonts, textshaping\"                               #> rappdirs    NA                                                       #> Rcpp        NA                                                       #> readr       \"cpp11, tzdb (>= 0.1.1)\"                                 #> rematch2    NA                                                       #> rlang       NA                                                       #> rmarkdown   NA                                                       #> rprojroot   NA                                                       #> rsem        NA                                                       #> sass        NA                                                       #> sem         NA                                                       #> semmcci     NA                                                       #> sessioninfo NA                                                       #> shape       NA                                                       #> snow        NA                                                       #> snowfall    NA                                                       #> stringi     NA                                                       #> stringr     NA                                                       #> sys         NA                                                       #> systemfonts \"cpp11 (>= 0.2.1)\"                                       #> testthat    NA                                                       #> textshaping \"cpp11 (>= 0.2.1), systemfonts (>= 1.0.0)\"               #> tibble      NA                                                       #> tidyr       \"cpp11 (>= 0.4.0)\"                                       #> tidyselect  NA                                                       #> tinytex     NA                                                       #> tzdb        \"cpp11 (>= 0.4.2)\"                                       #> ucminf      NA                                                       #> utf8        NA                                                       #> vctrs       NA                                                       #> vroom       \"cpp11 (>= 0.2.0), progress (>= 1.2.1), tzdb (>= 0.1.1)\" #> waldo       NA                                                       #> whisker     NA                                                       #> withr       NA                                                       #> xfun        NA                                                       #> xml2        NA                                                       #> yaml        NA                                                       #> pak         NA                                                       #> base        NA                                                       #> boot        NA                                                       #> class       NA                                                       #> cluster     NA                                                       #> codetools   NA                                                       #> compiler    NA                                                       #> datasets    NA                                                       #> foreign     NA                                                       #> graphics    NA                                                       #> grDevices   NA                                                       #> grid        NA                                                       #> KernSmooth  NA                                                       #> lattice     NA                                                       #> MASS        NA                                                       #> Matrix      NA                                                       #> methods     NA                                                       #> mgcv        NA                                                       #> nlme        NA                                                       #> nnet        NA                                                       #> parallel    NA                                                       #> rpart       NA                                                       #> spatial     NA                                                       #> splines     NA                                                       #> stats       NA                                                       #> stats4      NA                                                       #> survival    NA                                                       #> tcltk       NA                                                       #> tools       NA                                                       #> utils       NA                                                       #>             Suggests                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              #> abindmelia      \"tcltk, broom, rmarkdown, knitr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      #> armaskpass     \"testthat\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            #> backportsbase64encbit         \"testthat (>= 0.11.0), roxygen2, knitr, rmarkdown,\\nmicrobenchmark, bit64 (>= 4.0.0), ffbitbmemLavaan  \"R.rspbrio        \"covr, testthatbroom       \"AER, AUC, bbmle, betareg, biglm, binGroup, boot, btergm (>=\\n1.10.6), car, carData, caret, cluster, cmprsk, coda, covr, drc,\\ne1071, emmeans, epiR, ergm (>= 3.10.4), fixest (>= 0.9.0), gam\\n(>= 1.15), gee, geepack, ggplot2, glmnet, glmnetUtils, gmm,\\nHmisc, irlba, interp, joineRML, Kendall, knitr, ks, Lahman,\\nlavaan, leaps, lfe, lm.beta, lme4, lmodel2, lmtest (>= 0.9.38),\\nlsmeans, maps, margins, MASS, mclust, mediation, metafor, mfx,\\nmgcv, mlogit, modeldata, modeltests, muhaz, multcomp, network,\\nnnet, orcutt (>= 2.2), ordinal, plm, poLCA, psych, quantreg,\\nrmarkdown, robust, robustbase, rsample, sandwich, sp, spdep (>=\\n1.1), spatialreg, speedglm, spelling, survey, survival,\\nsystemfit, testthat (>= 2.1.0), tseries, vars, zoo\" #> bslib       \"bsicons, curl, fontawesome, ggplot2, knitr, magrittr,\\nrappdirs, rmarkdown (>= 2.7), shiny (>= 1.6.0), testthat,\\nthematic, withrcachem      \"testthatcallr       \"asciicast, cli (>= 1.1.0), covr, mockery, ps, rprojroot,\\nspelling, testthat (>= 3.0.0), withrcli         \"callr, covr, crayon, digest, glue (>= 1.6.0), grDevices,\\nhtmltools, htmlwidgets, knitr, methods, mockery, processx, ps\\n(>= 1.3.4.9000), rlang (>= 1.0.2.9003), rmarkdown, rprojroot,\\nrstudioapi, testthat, tibble, whoami, withrclipr       \"covr, knitr, rmarkdown, rstudioapi (>= 0.5), testthat (>=\\ncodacrayon      \"mockery, rstudioapi, testthat, withrcurl        \"spelling, testthat (>= 1.0.0), knitr, jsonlite, rmarkdown,\\nmagrittr, httpuv (>= 1.4.4), webutilsdesc        \"callr, covr, gh, spelling, testthat, whoami, withrdiffobj     \"knitr, rmarkdowndigest      \"tinytest, simplermarkdowndownlit     \"covr, htmltools, jsonlite, MASS, MassSpecWavelet, pkgload,\\nrmarkdown, testthat (>= 3.0.0), xmldplyr       \"bench, broom, callr, covr, DBI, dbplyr (>= 2.2.1), ggplot2,\\nknitr, Lahman, lobstr, microbenchmark, nycflights13, purrr,\\nrmarkdown, RMySQL, RPostgreSQL, RSQLite, stringi (>= 1.7.6),\\ntestthat (>= 3.1.5), tidyr (>= 1.3.0), withrellipsis    \"covr, testthatevaluate    \"covr, ggplot2, lattice, rlang, testthat (>= 3.0.0), withrfansi       \"unitizer, knitr, rmarkdownfastmap     \"testthatfontawesome \"covr, dplyr (>= 1.0.8), knitr (>= 1.31), testthat (>= 3.0.0),\\nrsvgforcats     \"covr, dplyr, ggplot2, knitr, readr, rmarkdown, testthat (>=\\n3.0.0), withrforeach     \"randomForest, doMC, doParallel, testthat, knitr, rmarkdown\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          #> fs          \"covr, crayon, knitr, pillar (>= 1.0.0), rmarkdown, spelling,\\ntestthat (>= 3.0.0), tibble (>= 1.1.0), vctrs (>= 0.3.0), withrgenerics    \"covr, pkgload, testthat (>= 3.0.0), tibble, withrglmnet      \"knitr, lars, testthat, xfun, rmarkdownglue        \"covr, crayon, DBI, dplyr, forcats, ggplot2, knitr, magrittr,\\nmicrobenchmark, R.utils, rmarkdown, rprintf, RSQLite, stringr,\\ntestthat (>= 3.0.0), vctrs (>= 0.3.0), waldo (>= 0.3.0), withr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        #> haven       \"covr, crayon, fs, knitr, pillar (>= 1.4.0), rmarkdown,\\ntestthat (>= 3.0.0), utf8\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   #> highr       \"knitr, markdown, testithms         \"crayon, lubridate, pillar (>= 1.1.0), testthathtmltools   \"markdown, testthat, withr, Cairo, ragg, shinyhttr        \"covr, httpuv, jpeg, knitr, png, readr, rmarkdown, testthat\\n(>= 0.8.0), xmliterators   \"RUnit, foreachjomo        \"mitmljquerylib   \"testthatjsonlite    \"httr, vctrs, testthat, knitr, rmarkdown, R.rsp, sfknitr       \"bslib, codetools, DBI (>= 0.4-1), digest, formatR, gifski,\\ngridSVG, htmlwidgets (>= 0.7), curl, jpeg, JuliaCall (>=\\n0.11.1), magick, markdown (>= 1.3), png, ragg, reticulate (>=\\n1.4), rgl (>= 0.95.1201), rlang, rmarkdown, sass, showtext,\\nstyler (>= 1.2.0), targets (>= 0.6.0), testit, tibble,\\ntikzDevice (>= 0.10), tinytex, webshot, rstudioapi, xml2 (>=\\n1.2.0)\"                                                                                                                                                                                                                                                                                                                                                                                      #> lavaanlifecycle   \"covr, crayon, knitr, lintr, rmarkdown, testthat (>= 3.0.1),\\ntibble, tidyverse, tools, vctrs, withrlme4        \"knitr, rmarkdown, MEMSS, testthat (>= 0.8.1), ggplot2,\\nmlmRev, optimx (>= 2013.8.6), gamm4, pbkrtest, HSAUR3,\\nnumDeriv, car, dfoptim, mgcv, statmod, rr2, semEff, tibble,\\nmerDerivmagrittr    \"covr, knitr, rlang, rmarkdown, testthatmemoise     \"digest, aws.s3, covr, googleAuthR, googleCloudStorageR, httr,\\ntestthatmi          \"betareg, lattice, knitr, MASS, nnet, parallel, sn, survival,\\ntruncnorm, foreignmice        \"broom.mixed, future, furrr, haven, knitr, lme4, MASS,\\nmiceadds, pan, parallelly, purrr, ranger, randomForest,\\nrmarkdown, rstan, survival, testthatmime        NA                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #> minqa       NA                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #> mitml       \"mice, miceadds, Amelia, lme4, nlme, lavaan, geepack, glmmTMB,\\nsurvival, knitr, rmarkdownmnormt      NA                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #> nloptr      \"knitr, rmarkdown, xml2, testthat (>= 3.0.0), covrnumDerivopenssl     \"curl, testthat (>= 2.1.0), digest, knitr, rmarkdown,\\njsonlite, jose, sodiumordinal     \"lme4, nnet, xtable, testthat (>= 0.8), toolspan         \"mitools, lmepbivnormpillar      \"bit64, DBI, debugme, DiagrammeR, dplyr, formattable, ggplot2,\\nknitr, lubridate, nanotime, nycflights13, palmerpenguins,\\nrmarkdown, scales, stringi, survival, testthat (>= 3.1.1),\\ntibble, units (>= 0.7.2), vdiffr, withrpkgconfig   \"covr, testthat, disposables (>= 1.0.3)\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              #> pkgdown     \"covr, diffviewer, evaluate, htmltools, htmlwidgets, knitr,\\nlifecycle, methods, openssl, pkgload (>= 1.0.2), rsconnect,\\nrstudioapi, rticles, sass, testthat (>= 3.1.3), toolspkgload     \"bitops, covr, mathjaxr, mockr, pak, pkgbuild, Rcpp, remotes,\\nrstudioapi, testthatpraise      \"testthatprocessx    \"callr (>= 3.7.3), cli (>= 3.3.0), codetools, covr, curl,\\ndebugme, parallel, rlang (>= 1.0.2), testthat (>= 3.0.0),\\nwebfakes, withrps          \"callr, covr, curl, pillar, pingr, processx (>= 3.1.0), R6,\\nrlang, testthat (>= 3.0.0), webfakespsych       \"psychTools, GPArotation, lavaan, lme4, Rcsdp, graph, knitr,\\nRgraphviz\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              #> purrr       \"covr, dplyr (>= 0.7.8), httr, knitr, lubridate, rmarkdown,\\ntestthat (>= 3.0.0), tibble, tidyselectquadprogtestthat, pryrragg        \"covr, graphics, grid, testthatrappdirs    \"roxygen2, testthat (>= 3.0.0), covr, withrcpp        \"tinytest, inline, rbenchmark, pkgKittenreadr       \"covr, curl, datasets, knitr, rmarkdown, spelling, stringi,\\ntestthat (>= 3.1.2), tzdb (>= 0.1.1), waldo, withr, xmlrematch2    \"covr, testthatrlang       \"cli (>= 3.1.0), covr, crayon, fs, glue, knitr, magrittr,\\nmethods, pillar, rmarkdown, stats, testthat (>= 3.0.0), tibble,\\nusethis, vctrs (>= 0.2.3), withrrmarkdown   \"digest, dygraphs, fs, rsconnect, downlit (>= 0.4.0), katex\\n(>= 1.4.0), sass (>= 0.4.0), shiny (>= 1.6.0), testthat (>=\\n3.0.3), tibble, vctrs, cleanrmd, withrrprojroot   \"covr, knitr, lifecycle, mockr, rmarkdown, testthat (>=\\n3.0.0), withrrsemsass        \"testthat, knitr, rmarkdown, withr, shiny, curlsem         \"polycor, Diagrammesemmcci     \"knitr, rmarkdown, testthat, MASS, psych, Amelia, bmemLavaansessioninfo \"callr, covr, mockery, reticulate, rmarkdown, testthat, withrshapesnow        \"rlecuyersnowfall    \"Rmpistringistringr     \"covr, htmltools, htmlwidgets, knitr, rmarkdown, testthat (>=\\nsys         \"unix (>= 1.4), spelling, testthatsystemfonts \"testthat (>= 2.1.0), covr, knitr, rmarkdown, toolstestthat    \"covr, curl (>= 0.9.5), diffviewer (>= 0.1.0), knitr,\\nrmarkdown, rstudioapi, shiny, usethis, vctrs (>= 0.1.0), xml2\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 #> textshaping \"covr, knitr, rmarkdowntibble      \"bench, bit64, blob, brio, callr, cli, covr, crayon (>=\\n1.3.4), DiagrammeR, dplyr, evaluate, formattable, ggplot2,\\nhere, hms, htmltools, knitr, lubridate, mockr, nycflights13,\\npkgbuild, pkgload, purrr, rmarkdown, stringi, testthat (>=\\n3.0.2), tidyr, withr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  #> tidyr       \"covr, data.table, knitr, readr, repurrrsive (>= 1.1.0),\\nrmarkdown, testthattidyselect  \"covr, crayon, dplyr, knitr, magrittr, rmarkdown, stringr,\\ntestthat (>= 3.1.1), tibbletinytex     \"testit, rstudioapi\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  #> tzdb        \"covr, testthatucminf      \"numDerivutf8        \"cli, covr, knitr, rlang, rmarkdown, testthat (>= 3.0.0),\\nwithrvctrs       \"bit64, covr, crayon, dplyr (>= 0.8.5), generics, knitr,\\npillar (>= 1.4.4), pkgdown (>= 2.0.1), rmarkdown, testthat (>=\\n3.0.0), tibble (>= 3.1.3), waldo (>= 0.2.0), withr, xml2,\\nzeallotvroom       \"archive, bench (>= 1.1.0), covr, curl, dplyr, forcats, fs,\\nggplot2, knitr, patchwork, prettyunits, purrr, rmarkdown,\\nrstudioapi, scales, spelling, testthat (>= 2.1.0), tidyr,\\nutils, waldo, xmlwaldo       \"covr, R6, testthat (>= 3.0.0), withr, xmlwhisker     \"markdownwithr       \"callr, covr, DBI, knitr, lattice, methods, rlang, rmarkdown\\n(>= 2.12), RSQLite, testthatxfun        \"testit, parallel, codetools, rstudioapi, tinytex (>= 0.30),\\nmime, markdown (>= 1.5), knitr (>= 1.42), htmltools, remotes,\\npak, rhub, renv, curl, jsonlite, magick, yaml, rmarkdownxml2        \"covr, curl, httr, knitr, magrittr, mockery, rmarkdown,\\ntestthatyaml        \"RUnit\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               #> pak         \"callr (>= 3.7.0),\\ncli (>= 3.2.0),\\ncovr,\\ncurl (>= 4.3.2),\\ndesc (>= 1.4.1),\\ndigest,\\ndistro,\\nfilelock (>= 1.0.2),\\ngitcreds,\\nglue (>= 1.6.2),\\nmockery,\\npingr,\\njsonlite (>= 1.8.0),\\npkgcache (>= 2.0.4),\\npkgdepends (>= 0.4.0),\\npkgsearch (>= 3.1.0),\\nprettyunits,\\nprocessx (>= 3.8.1),\\nps (>= 1.6.0),\\nrprojroot (>= 2.0.2),\\nrstudioapi,\\ntestthat,\\nwithr\"                                                                                                                                                                                                                                                                                                                                                                                           #> base        \"methodsboot        \"MASS, survivalclasscluster     \"MASS, Matrix\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        #> codetools   NA                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #> compilerdatasetsforeigngraphicsgrDevices   \"KernSmoothgridernSmooth  \"MASS, carData\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       #> lattice     \"KernSmooth, MASS, latticeExtra, colorspacelattice, nlme, nnet, survivalatrix      \"MASS, expmmethods     \"codetoolsmgcv        \"parallel, survivalnlme        \"Hmisc, MASS, SASmixednnetparallel    \"methodsrpart       \"survivalspatialsplines     \"Matrix, methodsstats       \"MASS, Matrix, SuppDists, methods, statsstatssurvivaltcltktools       \"codetools, methods, xml2, curl, commonmark, knitr, xfun,\\nmathjaxrutils       \"methods, xml2, commonmark, knitr\"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #>             Enhances                                                              #> abind       NA                                                                    #> Amelia      NA                                                                    #> arm         NA                                                                    #> askpass     NA                                                                    #> backports   NA                                                                    #> base64enc   \"png\"                                                                 #> bit         NA                                                                    #> bit64       NA                                                                    #> bmemLavaan  NA                                                                    #> brio        NA                                                                    #> broom       NA                                                                    #> bslib       NA                                                                    #> cachem      NA                                                                    #> callr       NA                                                                    #> cli         NA                                                                    #> clipr       NA                                                                    #> coda        NA                                                                    #> crayon      NA                                                                    #> curl        NA                                                                    #> desc        NA                                                                    #> diffobj     NA                                                                    #> digest      NA                                                                    #> downlit     NA                                                                    #> dplyr       NA                                                                    #> ellipsis    NA                                                                    #> evaluate    NA                                                                    #> fansi       NA                                                                    #> fastmap     NA                                                                    #> fontawesome NA                                                                    #> forcats     NA                                                                    #> foreach     NA                                                                    #> fs          NA                                                                    #> generics    NA                                                                    #> glmnet      NA                                                                    #> glue        NA                                                                    #> haven       NA                                                                    #> highr       NA                                                                    #> hms         NA                                                                    #> htmltools   \"knitr\"                                                               #> httr        NA                                                                    #> iterators   NA                                                                    #> jomo        NA                                                                    #> jquerylib   NA                                                                    #> jsonlite    NA                                                                    #> knitr       NA                                                                    #> lavaan      NA                                                                    #> lifecycle   NA                                                                    #> lme4        NA                                                                    #> magrittr    NA                                                                    #> memoise     NA                                                                    #> mi          NA                                                                    #> mice        NA                                                                    #> mime        NA                                                                    #> minqa       NA                                                                    #> mitml       NA                                                                    #> mnormt      NA                                                                    #> nloptr      NA                                                                    #> numDeriv    NA                                                                    #> openssl     NA                                                                    #> ordinal     NA                                                                    #> pan         NA                                                                    #> pbivnorm    NA                                                                    #> pillar      NA                                                                    #> pkgconfig   NA                                                                    #> pkgdown     NA                                                                    #> pkgload     NA                                                                    #> praise      NA                                                                    #> processx    NA                                                                    #> ps          NA                                                                    #> psych       NA                                                                    #> purrr       NA                                                                    #> quadprog    NA                                                                    #> R6          NA                                                                    #> ragg        NA                                                                    #> rappdirs    NA                                                                    #> Rcpp        NA                                                                    #> readr       NA                                                                    #> rematch2    NA                                                                    #> rlang       \"winch\"                                                               #> rmarkdown   NA                                                                    #> rprojroot   NA                                                                    #> rsem        NA                                                                    #> sass        NA                                                                    #> sem         NA                                                                    #> semmcci     NA                                                                    #> sessioninfo NA                                                                    #> shape       NA                                                                    #> snow        \"Rmpi\"                                                                #> snowfall    NA                                                                    #> stringi     NA                                                                    #> stringr     NA                                                                    #> sys         NA                                                                    #> systemfonts NA                                                                    #> testthat    NA                                                                    #> textshaping NA                                                                    #> tibble      NA                                                                    #> tidyr       NA                                                                    #> tidyselect  NA                                                                    #> tinytex     NA                                                                    #> tzdb        NA                                                                    #> ucminf      NA                                                                    #> utf8        NA                                                                    #> vctrs       NA                                                                    #> vroom       NA                                                                    #> waldo       NA                                                                    #> whisker     NA                                                                    #> withr       NA                                                                    #> xfun        NA                                                                    #> xml2        NA                                                                    #> yaml        NA                                                                    #> pak         NA                                                                    #> base        NA                                                                    #> boot        NA                                                                    #> class       NA                                                                    #> cluster     NA                                                                    #> codetools   NA                                                                    #> compiler    NA                                                                    #> datasets    NA                                                                    #> foreign     NA                                                                    #> graphics    NA                                                                    #> grDevices   NA                                                                    #> grid        NA                                                                    #> KernSmooth  NA                                                                    #> lattice     \"chron\"                                                               #> MASS        NA                                                                    #> Matrix      \"MatrixModels, SparseM, graph, igraph, maptools, sfsmisc, sp,\\nspdep\" #> methods     NA                                                                    #> mgcv        NA                                                                    #> nlme        NA                                                                    #> nnet        NA                                                                    #> parallel    \"snow, Rmpi\"                                                          #> rpart       NA                                                                    #> spatial     NA                                                                    #> splines     NA                                                                    #> stats       NA                                                                    #> stats4      NA                                                                    #> survival    NA                                                                    #> tcltk       NA                                                                    #> tools       NA                                                                    #> utils       NA                                                                    #>             License                                  License_is_FOSS #> abind       \"LGPL (>= 2)\"                            NA              #> Amelia      \"GPL (>= 2)\"                             NA              #> arm         \"GPL (> 2)\"                              NA              #> askpass     \"MIT + file LICENSE\"                     NA              #> backports   \"GPL-2 | GPL-3\"                          NA              #> base64enc   \"GPL-2 | GPL-3\"                          NA              #> bit         \"GPL-2 | GPL-3\"                          NA              #> bit64       \"GPL-2 | GPL-3\"                          NA              #> bmemLavaan  \"GPL-2\"                                  NA              #> brio        \"MIT + file LICENSE\"                     NA              #> broom       \"MIT + file LICENSE\"                     NA              #> bslib       \"MIT + file LICENSE\"                     NA              #> cachem      \"MIT + file LICENSE\"                     NA              #> callr       \"MIT + file LICENSE\"                     NA              #> cli         \"MIT + file LICENSE\"                     NA              #> clipr       \"GPL-3\"                                  NA              #> coda        \"GPL (>= 2)\"                             NA              #> crayon      \"MIT + file LICENSE\"                     NA              #> curl        \"MIT + file LICENSE\"                     NA              #> desc        \"MIT + file LICENSE\"                     NA              #> diffobj     \"GPL-2 | GPL-3\"                          NA              #> digest      \"GPL (>= 2)\"                             NA              #> downlit     \"MIT + file LICENSE\"                     NA              #> dplyr       \"MIT + file LICENSE\"                     NA              #> ellipsis    \"MIT + file LICENSE\"                     NA              #> evaluate    \"MIT + file LICENSE\"                     NA              #> fansi       \"GPL-2 | GPL-3\"                          NA              #> fastmap     \"MIT + file LICENSE\"                     NA              #> fontawesome \"MIT + file LICENSE\"                     NA              #> forcats     \"MIT + file LICENSE\"                     NA              #> foreach     \"Apache License (== 2.0)\"                NA              #> fs          \"MIT + file LICENSE\"                     NA              #> generics    \"MIT + file LICENSE\"                     NA              #> glmnet      \"GPL-2\"                                  NA              #> glue        \"MIT + file LICENSE\"                     NA              #> haven       \"MIT + file LICENSE\"                     NA              #> highr       \"GPL\"                                    NA              #> hms         \"MIT + file LICENSE\"                     NA              #> htmltools   \"GPL (>= 2)\"                             NA              #> httr        \"MIT + file LICENSE\"                     NA              #> iterators   \"Apache License (== 2.0)\"                NA              #> jomo        \"GPL-2\"                                  NA              #> jquerylib   \"MIT + file LICENSE\"                     NA              #> jsonlite    \"MIT + file LICENSE\"                     NA              #> knitr       \"GPL\"                                    NA              #> lavaan      \"GPL (>= 2)\"                             NA              #> lifecycle   \"MIT + file LICENSE\"                     NA              #> lme4        \"GPL (>= 2)\"                             NA              #> magrittr    \"MIT + file LICENSE\"                     NA              #> memoise     \"MIT + file LICENSE\"                     NA              #> mi          \"GPL (>= 2)\"                             NA              #> mice        \"GPL (>= 2)\"                             NA              #> mime        \"GPL\"                                    NA              #> minqa       \"GPL-2\"                                  NA              #> mitml       \"GPL (>= 2)\"                             NA              #> mnormt      \"GPL-2 | GPL-3\"                          NA              #> nloptr      \"LGPL (>= 3)\"                            NA              #> numDeriv    \"GPL-2\"                                  NA              #> openssl     \"MIT + file LICENSE\"                     NA              #> ordinal     \"GPL (>= 2)\"                             NA              #> pan         \"GPL-3\"                                  NA              #> pbivnorm    \"GPL (>= 2)\"                             NA              #> pillar      \"MIT + file LICENSE\"                     NA              #> pkgconfig   \"MIT + file LICENSE\"                     NA              #> pkgdown     \"MIT + file LICENSE\"                     NA              #> pkgload     \"GPL-3\"                                  NA              #> praise      \"MIT + file LICENSE\"                     NA              #> processx    \"MIT + file LICENSE\"                     NA              #> ps          \"MIT + file LICENSE\"                     NA              #> psych       \"GPL (>= 2)\"                             NA              #> purrr       \"MIT + file LICENSE\"                     NA              #> quadprog    \"GPL (>= 2)\"                             NA              #> R6          \"MIT + file LICENSE\"                     NA              #> ragg        \"MIT + file LICENSE\"                     NA              #> rappdirs    \"MIT + file LICENSE\"                     NA              #> Rcpp        \"GPL (>= 2)\"                             NA              #> readr       \"MIT + file LICENSE\"                     NA              #> rematch2    \"MIT + file LICENSE\"                     NA              #> rlang       \"MIT + file LICENSE\"                     NA              #> rmarkdown   \"GPL-3\"                                  NA              #> rprojroot   \"MIT + file LICENSE\"                     NA              #> rsem        \"GPL-2\"                                  NA              #> sass        \"MIT + file LICENSE\"                     NA              #> sem         \"GPL (>= 2)\"                             NA              #> semmcci     \"MIT + file LICENSE\"                     NA              #> sessioninfo \"GPL-2\"                                  NA              #> shape       \"GPL (>= 3)\"                             NA              #> snow        \"GPL\"                                    NA              #> snowfall    \"GPL\"                                    NA              #> stringi     \"file LICENSE\"                           \"yes\"           #> stringr     \"MIT + file LICENSE\"                     NA              #> sys         \"MIT + file LICENSE\"                     NA              #> systemfonts \"MIT + file LICENSE\"                     NA              #> testthat    \"MIT + file LICENSE\"                     NA              #> textshaping \"MIT + file LICENSE\"                     NA              #> tibble      \"MIT + file LICENSE\"                     NA              #> tidyr       \"MIT + file LICENSE\"                     NA              #> tidyselect  \"MIT + file LICENSE\"                     NA              #> tinytex     \"MIT + file LICENSE\"                     NA              #> tzdb        \"MIT + file LICENSE\"                     NA              #> ucminf      \"GPL (>= 2)\"                             NA              #> utf8        \"Apache License (== 2.0) | file LICENSE\" NA              #> vctrs       \"MIT + file LICENSE\"                     NA              #> vroom       \"MIT + file LICENSE\"                     NA              #> waldo       \"MIT + file LICENSE\"                     NA              #> whisker     \"GPL-3\"                                  NA              #> withr       \"MIT + file LICENSE\"                     NA              #> xfun        \"MIT + file LICENSE\"                     NA              #> xml2        \"MIT + file LICENSE\"                     NA              #> yaml        \"BSD_3_clause + file LICENSE\"            NA              #> pak         \"GPL-3\"                                  NA              #> base        \"Part of R 4.3.1\"                        NA              #> boot        \"Unlimited\"                              NA              #> class       \"GPL-2 | GPL-3\"                          NA              #> cluster     \"GPL (>= 2)\"                             NA              #> codetools   \"GPL\"                                    NA              #> compiler    \"Part of R 4.3.1\"                        NA              #> datasets    \"Part of R 4.3.1\"                        NA              #> foreign     \"GPL (>= 2)\"                             NA              #> graphics    \"Part of R 4.3.1\"                        NA              #> grDevices   \"Part of R 4.3.1\"                        NA              #> grid        \"Part of R 4.3.1\"                        NA              #> KernSmooth  \"Unlimited\"                              NA              #> lattice     \"GPL (>= 2)\"                             NA              #> MASS        \"GPL-2 | GPL-3\"                          NA              #> Matrix      \"GPL (>= 2) | file LICENCE\"              NA              #> methods     \"Part of R 4.3.1\"                        NA              #> mgcv        \"GPL (>= 2)\"                             NA              #> nlme        \"GPL (>= 2)\"                             NA              #> nnet        \"GPL-2 | GPL-3\"                          NA              #> parallel    \"Part of R 4.3.1\"                        NA              #> rpart       \"GPL-2 | GPL-3\"                          NA              #> spatial     \"GPL-2 | GPL-3\"                          NA              #> splines     \"Part of R 4.3.1\"                        NA              #> stats       \"Part of R 4.3.1\"                        NA              #> stats4      \"Part of R 4.3.1\"                        NA              #> survival    \"LGPL (>= 2)\"                            NA              #> tcltk       \"Part of R 4.3.1\"                        NA              #> tools       \"Part of R 4.3.1\"                        NA              #> utils       \"Part of R 4.3.1\"                        NA              #>             License_restricts_use OS_type MD5sum NeedsCompilation Built   #> abind       NA                    NA      NA     \"no\"             \"4.3.0\" #> Amelia      NA                    NA      NA     \"yes\"            \"4.3.0\" #> arm         NA                    NA      NA     \"no\"             \"4.3.0\" #> askpass     NA                    NA      NA     \"yes\"            \"4.3.0\" #> backports   NA                    NA      NA     \"yes\"            \"4.3.0\" #> base64enc   NA                    NA      NA     \"yes\"            \"4.3.0\" #> bit         NA                    NA      NA     \"yes\"            \"4.3.0\" #> bit64       NA                    NA      NA     \"yes\"            \"4.3.0\" #> bmemLavaan  NA                    NA      NA     \"no\"             \"4.3.0\" #> brio        NA                    NA      NA     \"yes\"            \"4.3.0\" #> broom       NA                    NA      NA     \"no\"             \"4.3.0\" #> bslib       NA                    NA      NA     \"no\"             \"4.3.0\" #> cachem      NA                    NA      NA     \"yes\"            \"4.3.0\" #> callr       NA                    NA      NA     \"no\"             \"4.3.0\" #> cli         NA                    NA      NA     \"yes\"            \"4.3.0\" #> clipr       NA                    NA      NA     \"no\"             \"4.3.0\" #> coda        NA                    NA      NA     \"no\"             \"4.3.0\" #> crayon      NA                    NA      NA     \"no\"             \"4.3.0\" #> curl        NA                    NA      NA     \"yes\"            \"4.3.0\" #> desc        NA                    NA      NA     \"no\"             \"4.3.0\" #> diffobj     NA                    NA      NA     \"yes\"            \"4.3.0\" #> digest      NA                    NA      NA     \"yes\"            \"4.3.0\" #> downlit     NA                    NA      NA     \"no\"             \"4.3.0\" #> dplyr       NA                    NA      NA     \"yes\"            \"4.3.0\" #> ellipsis    NA                    NA      NA     \"yes\"            \"4.3.0\" #> evaluate    NA                    NA      NA     \"no\"             \"4.3.0\" #> fansi       NA                    NA      NA     \"yes\"            \"4.3.0\" #> fastmap     NA                    NA      NA     \"yes\"            \"4.3.0\" #> fontawesome NA                    NA      NA     \"no\"             \"4.3.0\" #> forcats     NA                    NA      NA     \"no\"             \"4.3.0\" #> foreach     NA                    NA      NA     \"no\"             \"4.3.0\" #> fs          NA                    NA      NA     \"yes\"            \"4.3.0\" #> generics    NA                    NA      NA     \"no\"             \"4.3.0\" #> glmnet      NA                    NA      NA     \"yes\"            \"4.3.0\" #> glue        NA                    NA      NA     \"yes\"            \"4.3.0\" #> haven       NA                    NA      NA     \"yes\"            \"4.3.0\" #> highr       NA                    NA      NA     \"no\"             \"4.3.0\" #> hms         NA                    NA      NA     \"no\"             \"4.3.0\" #> htmltools   NA                    NA      NA     \"yes\"            \"4.3.0\" #> httr        NA                    NA      NA     \"no\"             \"4.3.0\" #> iterators   NA                    NA      NA     \"no\"             \"4.3.0\" #> jomo        NA                    NA      NA     \"yes\"            \"4.3.0\" #> jquerylib   NA                    NA      NA     \"no\"             \"4.3.0\" #> jsonlite    NA                    NA      NA     \"yes\"            \"4.3.0\" #> knitr       NA                    NA      NA     \"no\"             \"4.3.0\" #> lavaan      NA                    NA      NA     \"no\"             \"4.3.0\" #> lifecycle   NA                    NA      NA     \"no\"             \"4.3.0\" #> lme4        NA                    NA      NA     \"yes\"            \"4.3.0\" #> magrittr    NA                    NA      NA     \"yes\"            \"4.3.0\" #> memoise     NA                    NA      NA     \"no\"             \"4.3.0\" #> mi          NA                    NA      NA     \"no\"             \"4.3.0\" #> mice        NA                    NA      NA     \"yes\"            \"4.3.0\" #> mime        NA                    NA      NA     \"yes\"            \"4.3.0\" #> minqa       NA                    NA      NA     \"yes\"            \"4.3.0\" #> mitml       NA                    NA      NA     \"no\"             \"4.3.0\" #> mnormt      NA                    NA      NA     \"yes\"            \"4.3.0\" #> nloptr      NA                    NA      NA     \"yes\"            \"4.3.0\" #> numDeriv    NA                    NA      NA     \"no\"             \"4.3.0\" #> openssl     NA                    NA      NA     \"yes\"            \"4.3.0\" #> ordinal     NA                    NA      NA     \"yes\"            \"4.3.0\" #> pan         \"no\"                  NA      NA     \"yes\"            \"4.3.0\" #> pbivnorm    NA                    NA      NA     \"yes\"            \"4.3.0\" #> pillar      NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgconfig   NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgdown     NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgload     NA                    NA      NA     \"no\"             \"4.3.0\" #> praise      NA                    NA      NA     \"no\"             \"4.3.0\" #> processx    NA                    NA      NA     \"yes\"            \"4.3.0\" #> ps          NA                    NA      NA     \"yes\"            \"4.3.0\" #> psych       NA                    NA      NA     \"no\"             \"4.3.0\" #> purrr       NA                    NA      NA     \"yes\"            \"4.3.0\" #> quadprog    NA                    NA      NA     \"yes\"            \"4.3.0\" #> R6          NA                    NA      NA     \"no\"             \"4.3.0\" #> ragg        NA                    NA      NA     \"yes\"            \"4.3.0\" #> rappdirs    NA                    NA      NA     \"yes\"            \"4.3.0\" #> Rcpp        NA                    NA      NA     \"yes\"            \"4.3.0\" #> readr       NA                    NA      NA     \"yes\"            \"4.3.0\" #> rematch2    NA                    NA      NA     \"no\"             \"4.3.0\" #> rlang       NA                    NA      NA     \"yes\"            \"4.3.0\" #> rmarkdown   NA                    NA      NA     \"no\"             \"4.3.0\" #> rprojroot   NA                    NA      NA     \"no\"             \"4.3.0\" #> rsem        NA                    NA      NA     \"no\"             \"4.3.0\" #> sass        NA                    NA      NA     \"yes\"            \"4.3.0\" #> sem         NA                    NA      NA     \"yes\"            \"4.3.0\" #> semmcci     NA                    NA      NA     \"no\"             \"4.3.1\" #> sessioninfo NA                    NA      NA     \"no\"             \"4.3.0\" #> shape       NA                    NA      NA     \"no\"             \"4.3.0\" #> snow        NA                    NA      NA     \"no\"             \"4.3.0\" #> snowfall    NA                    NA      NA     \"no\"             \"4.3.0\" #> stringi     NA                    NA      NA     \"yes\"            \"4.3.0\" #> stringr     NA                    NA      NA     \"no\"             \"4.3.0\" #> sys         NA                    NA      NA     \"yes\"            \"4.3.0\" #> systemfonts NA                    NA      NA     \"yes\"            \"4.3.0\" #> testthat    NA                    NA      NA     \"yes\"            \"4.3.0\" #> textshaping NA                    NA      NA     \"yes\"            \"4.3.0\" #> tibble      NA                    NA      NA     \"yes\"            \"4.3.0\" #> tidyr       NA                    NA      NA     \"yes\"            \"4.3.0\" #> tidyselect  NA                    NA      NA     \"no\"             \"4.3.0\" #> tinytex     NA                    NA      NA     \"no\"             \"4.3.0\" #> tzdb        NA                    NA      NA     \"yes\"            \"4.3.0\" #> ucminf      NA                    NA      NA     \"yes\"            \"4.3.0\" #> utf8        NA                    NA      NA     \"yes\"            \"4.3.0\" #> vctrs       NA                    NA      NA     \"yes\"            \"4.3.0\" #> vroom       NA                    NA      NA     \"yes\"            \"4.3.0\" #> waldo       NA                    NA      NA     \"no\"             \"4.3.0\" #> whisker     NA                    NA      NA     \"no\"             \"4.3.0\" #> withr       NA                    NA      NA     \"no\"             \"4.3.0\" #> xfun        NA                    NA      NA     \"yes\"            \"4.3.0\" #> xml2        NA                    NA      NA     \"yes\"            \"4.3.0\" #> yaml        NA                    NA      NA     \"yes\"            \"4.3.0\" #> pak         NA                    NA      NA     NA               \"4.3.0\" #> base        NA                    NA      NA     NA               \"4.3.1\" #> boot        NA                    NA      NA     \"no\"             \"4.3.1\" #> class       NA                    NA      NA     \"yes\"            \"4.3.1\" #> cluster     NA                    NA      NA     \"yes\"            \"4.3.1\" #> codetools   NA                    NA      NA     \"no\"             \"4.3.1\" #> compiler    NA                    NA      NA     NA               \"4.3.1\" #> datasets    NA                    NA      NA     NA               \"4.3.1\" #> foreign     NA                    NA      NA     \"yes\"            \"4.3.1\" #> graphics    NA                    NA      NA     \"yes\"            \"4.3.1\" #> grDevices   NA                    NA      NA     \"yes\"            \"4.3.1\" #> grid        NA                    NA      NA     \"yes\"            \"4.3.1\" #> KernSmooth  NA                    NA      NA     \"yes\"            \"4.3.1\" #> lattice     NA                    NA      NA     \"yes\"            \"4.3.1\" #> MASS        NA                    NA      NA     \"yes\"            \"4.3.1\" #> Matrix      NA                    NA      NA     \"yes\"            \"4.3.1\" #> methods     NA                    NA      NA     \"yes\"            \"4.3.1\" #> mgcv        NA                    NA      NA     \"yes\"            \"4.3.1\" #> nlme        NA                    NA      NA     \"yes\"            \"4.3.1\" #> nnet        NA                    NA      NA     \"yes\"            \"4.3.1\" #> parallel    NA                    NA      NA     \"yes\"            \"4.3.1\" #> rpart       NA                    NA      NA     \"yes\"            \"4.3.1\" #> spatial     NA                    NA      NA     \"yes\"            \"4.3.1\" #> splines     NA                    NA      NA     \"yes\"            \"4.3.1\" #> stats       NA                    NA      NA     \"yes\"            \"4.3.1\" #> stats4      NA                    NA      NA     NA               \"4.3.1\" #> survival    NA                    NA      NA     \"yes\"            \"4.3.1\" #> tcltk       NA                    NA      NA     \"yes\"            \"4.3.1\" #> tools       NA                    NA      NA     \"yes\"            \"4.3.1\" #> utils       NA                    NA      NA     \"yes\"            \"4.3.1\""},{"path":"https://github.com/jeksterslab/semmcci/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ivan Jacob Agaloos Pesigan. Author, maintainer, copyright holder. Shu Fai Cheung. Contributor.","code":""},{"path":"https://github.com/jeksterslab/semmcci/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pesigan, . J. . & Cheung, S. F. (2023). Monte Carlo Confidence Intervals Structural Equation Modeling. Behavior Research Methods. https://doi.org/10.3758/s13428-023-02114-4","code":"@Article{,   author = {Ivan Jacob Agaloos Pesigan and Shu Fai Cheung},   title = {Monte Carlo Confidence Intervals in Structural Equation Modeling},   year = {2023},   doi = {10.3758/s13428-023-02114-4},   journal = {Behavior Research Methods},   note = {R package version 1.1.0}, }"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"semmcci","dir":"","previous_headings":"","what":"Monte Carlo Confidence Intervals in Structural Equation Modeling","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"Ivan Jacob Agaloos Pesigan 2023-08-08","code":""},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"can install CRAN release semmcci : can install development version semmcci GitHub :","code":"install.packages(\"semmcci\") if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"jeksterslab/semmcci\")"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"Monte Carlo method, sampling distribution parameter estimates generated multivariate normal distribution using parameter estimates sampling variance-covariance matrix. Confidence intervals defined parameters generated obtaining percentiles corresponding 100(1 - α)% generated sampling distribution, α significance level. Monte Carlo confidence intervals free defined parameters models fitted structural equation modeling package lavaan can generated using semmcci package. package three main functions, namely, MC(), MCMI(), MCStd(). output lavaan passed first argument MC() function MCMI() function generate Monte Carlo confidence intervals. Monte Carlo confidence intervals standardized estimates can also generated passing output MC() function MCMI() function MCStd() function. description package code examples presented Pesigan Cheung (2023: https://doi.org/10.3758/s13428-023-02114-4).","code":""},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"common application Monte Carlo method generate confidence intervals indirect effect. simple mediation model, variable X effect variable Y, mediating variable M. mediating indirect effect product path coefficients fitted model.","code":"library(semmcci) library(lavaan)"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"data","dir":"","previous_headings":"Example","what":"Data","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"","code":"summary(df) #>        X                  M                  Y            #>  Min.   :-4.08024   Min.   :-2.85992   Min.   :-3.45490   #>  1st Qu.:-0.65910   1st Qu.:-0.67969   1st Qu.:-0.56484   #>  Median :-0.01140   Median : 0.03271   Median : 0.02257   #>  Mean   :-0.03456   Mean   : 0.03400   Mean   : 0.03935   #>  3rd Qu.: 0.62021   3rd Qu.: 0.71500   3rd Qu.: 0.68422   #>  Max.   : 2.98641   Max.   : 3.09469   Max.   : 2.90955   #>  NA's   :100        NA's   :100        NA's   :100"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"model-specification","dir":"","previous_headings":"Example","what":"Model Specification","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"indirect effect defined product slopes paths X M labeled M Y labeled b. example, interested confidence intervals indirect defined product b using := operator lavaan model syntax.","code":"model <- \"   Y ~ cp * X + b * M   M ~ a * X   X ~~ X   indirect := a * b   direct := cp   total := cp + (a * b) \""},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"monte-carlo-confidence-intervals","dir":"","previous_headings":"Example","what":"Monte Carlo Confidence Intervals","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"can now fit model using sem() function lavaan. use full-information maximum likelihood deal missing values. fit lavaan object can passed MC() function generate Monte Carlo confidence intervals.","code":"fit <- sem(data = df, model = model, missing = \"fiml\") mc <- MC(fit, R = 20000L, alpha = 0.05) mc #> Monte Carlo Confidence Intervals #>              est     se     R    2.5%  97.5% #> cp        0.2103 0.0306 20000  0.1501 0.2694 #> b         0.4896 0.0291 20000  0.4326 0.5473 #> a         0.5036 0.0311 20000  0.4420 0.5636 #> X~~X      0.9543 0.0450 20000  0.8670 1.0437 #> Y~~Y      0.5492 0.0268 20000  0.4967 0.6018 #> M~~M      0.7860 0.0377 20000  0.7121 0.8596 #> Y~1       0.0243 0.0252 20000 -0.0254 0.0737 #> M~1       0.0455 0.0293 20000 -0.0113 0.1025 #> X~1      -0.0279 0.0317 20000 -0.0894 0.0344 #> indirect  0.2465 0.0211 20000  0.2064 0.2891 #> direct    0.2103 0.0306 20000  0.1501 0.2694 #> total     0.4568 0.0299 20000  0.3973 0.5155"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"monte-carlo-confidence-intervals---multiple-imputation","dir":"","previous_headings":"Example","what":"Monte Carlo Confidence Intervals - Multiple Imputation","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"MCMI() function can used handle missing values using multiple imputation. MCMI() accepts output mice::mice(), Amelia::amelia(), list multiply imputed data sets. example, impute multivariate missing data normal model. fit model using lavaan using default listwise deletion. fit lavaan object mi object can passed MCMI() function generate Monte Carlo confidence intervals.","code":"mi <- mice::mice(   df,   method = \"norm\",   m = 100,   print = FALSE,   seed = 42 ) fit <- sem(data = df, model = model) mcmi <- MCMI(fit, mi = mi, R = 20000L, alpha = 0.05, seed = 42) mcmi #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>             est     se     R   2.5%  97.5% #> cp       0.2084 0.0304 20000 0.1493 0.2679 #> b        0.4890 0.0289 20000 0.4328 0.5458 #> a        0.5038 0.0312 20000 0.4426 0.5649 #> X~~X     0.9553 0.0454 20000 0.8663 1.0442 #> Y~~Y     0.5488 0.0274 20000 0.4950 0.6023 #> M~~M     0.7865 0.0387 20000 0.7115 0.8623 #> indirect 0.2463 0.0209 20000 0.2072 0.2889 #> direct   0.2084 0.0304 20000 0.1493 0.2679 #> total    0.4547 0.0299 20000 0.3961 0.5131"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"standardized-monte-carlo-confidence-intervals","dir":"","previous_headings":"Example","what":"Standardized Monte Carlo Confidence Intervals","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"Standardized Monte Carlo Confidence intervals can generated passing result MC() function MCMI() function MCStd().","code":"MCStd(mc, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>              est     se     R   2.5%  97.5% #> cp        0.2123 0.0306 20000 0.1517 0.2707 #> b         0.5129 0.0276 20000 0.4576 0.5662 #> a         0.4852 0.0263 20000 0.4332 0.5351 #> X~~X      1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y      0.5863 0.0258 20000 0.5344 0.6365 #> M~~M      0.7646 0.0255 20000 0.7137 0.8124 #> indirect  0.0251 0.0193 20000 0.2111 0.2870 #> direct    0.0448 0.0306 20000 0.1517 0.2707 #> total    -0.0285 0.0268 20000 0.4060 0.5124 MCStd(mcmi, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>             est     se     R   2.5%  97.5% #> cp       0.2124 0.0303 20000 0.1517 0.2703 #> b        0.5162 0.0279 20000 0.4577 0.5671 #> a        0.4710 0.0269 20000 0.4308 0.5358 #> X~~X     1.0000 0.0000 20000 1.0000 1.0000 #> Y~~Y     0.5851 0.0263 20000 0.5346 0.6376 #> M~~M     0.7781 0.0260 20000 0.7129 0.8144 #> indirect 0.2431 0.0193 20000 0.2119 0.2877 #> direct   0.2124 0.0303 20000 0.1517 0.2703 #> total    0.4556 0.0271 20000 0.4057 0.5113"},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"See GitHub Pages package documentation.","code":""},{"path":"https://github.com/jeksterslab/semmcci/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Monte Carlo Confidence Intervals in Structural Equation Modeling","text":"cite semmcci publications, please cite Pesigan & Cheung (2023).","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Confidence Intervals — MC","title":"Monte Carlo Confidence Intervals — MC","text":"Calculates Monte Carlo confidence intervals free defined parameters.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Confidence Intervals — MC","text":"","code":"MC(   lav,   R = 20000L,   alpha = c(0.001, 0.01, 0.05),   decomposition = \"eigen\",   pd = TRUE,   tol = 1e-06,   seed = NULL )"},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Confidence Intervals — MC","text":"lav Object class lavaan. R Positive integer. Number Monte Carlo replications. alpha Numeric vector. Significance level \\(\\alpha\\). decomposition Character string. Matrix decomposition sampling variance-covariance matrix data generation. decomposition = \"chol\", use Cholesky decomposition. decomposition = \"eigen\", use eigenvalue decomposition. decomposition = \"svd\", use singular value decomposition. pd Logical. pd = TRUE, check sampling variance-covariance matrix positive definite using tol. tol Numeric. Tolerance used pd. seed Integer. Random seed reproducibility.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Confidence Intervals — MC","text":"Returns object class semmcci list following elements: call Function call. args List function arguments. thetahat Parameter estimates \\(\\hat{\\theta}\\). thetahatstar Sampling distribution parameter estimates \\(\\hat{\\theta}^{\\ast}\\). fun Function used (\"MC\").","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Monte Carlo Confidence Intervals — MC","text":"sampling distribution parameter estimates generated multivariate normal distribution using parameter estimates sampling variance-covariance matrix. Confidence intervals free defined parameters generated using simulated sampling distribution. Parameters can defined using := operator lavaan model syntax.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Monte Carlo Confidence Intervals — MC","text":"MacKinnon, D. P., Lockwood, C. M., & Williams, J. (2004). Confidence limits indirect effect: Distribution product resampling methods. Multivariate Behavioral Research, 39(1), 99-128. doi:10.1207/s15327906mbr3901_4 Pesigan, . J. ., & Cheung, S. F. (2023). Monte Carlo confidence intervals indirect effect missing data. Behavior Research Methods. doi:10.3758/s13428-023-02114-4 Preacher, K. J., & Selig, J. P. (2012). Advantages Monte Carlo confidence intervals indirect effects. Communication Methods Measures, 6(2), 77–98. doi:10.1080/19312458.2012.679848","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Monte Carlo Confidence Intervals — MC","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte Carlo Confidence Intervals — MC","text":"","code":"library(semmcci) library(lavaan) #> This is lavaan 0.6-16 #> lavaan is FREE software! Please report any bugs.  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- MC(   fit,   R = 100L, # use a large value e.g., 20000L for actual research   alpha = 0.05 ) #> Monte Carlo Confidence Intervals #>                       est     se   R    2.5%  97.5% #> cp                 0.3572 0.2606 100 -0.1037 0.8724 #> b                  0.4478 0.1062 100  0.2432 0.6661 #> a                  0.5551 0.2540 100  0.0247 0.9740 #> cond~~cond         0.2459 0.0342 100  0.1654 0.3098 #> reaction~~reaction 1.9383 0.2850 100  1.3498 2.4630 #> pmi~~pmi           1.5502 0.2058 100  1.1019 1.9336 #> reaction~1         0.7632 0.5915 100 -0.4470 1.8980 #> pmi~1              5.3796 0.1570 100  5.1013 5.6232 #> cond~1             0.4456 0.0498 100  0.3423 0.5271 #> indirect           0.2486 0.1329 100  0.0126 0.5439 #> direct             0.3572 0.2606 100 -0.1037 0.8724 #> total              0.6058 0.2715 100  0.1008 1.1543"},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"Calculates Monte Carlo confidence intervals free defined parameters. Missing values handled using multilple imputation.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"","code":"MCMI(   lav,   mi,   R = 20000L,   alpha = c(0.001, 0.01, 0.05),   decomposition = \"eigen\",   pd = TRUE,   tol = 1e-06,   seed = NULL )"},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"lav Object class lavaan. mi Object class mids (output mice::mice()), object class amelia (output Amelia::amelia()), list multiply imputed data sets. R Positive integer. Number Monte Carlo replications. alpha Numeric vector. Significance level \\(\\alpha\\). decomposition Character string. Matrix decomposition sampling variance-covariance matrix data generation. decomposition = \"chol\", use Cholesky decomposition. decomposition = \"eigen\", use eigenvalue decomposition. decomposition = \"svd\", use singular value decomposition. pd Logical. pd = TRUE, check sampling variance-covariance matrix positive definite using tol. tol Numeric. Tolerance used pd. seed Integer. Random seed reproducibility.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"Returns object class semmcci list following elements: call Function call. args List function arguments. thetahat Parameter estimates \\(\\hat{\\theta}\\). thetahatstar Sampling distribution parameter estimates \\(\\hat{\\theta}^{\\ast}\\). fun Function used (\"MCMI\").","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"sampling distribution parameter estimates generated multivariate normal distribution using parameter estimates sampling variance-covariance matrix obtained using multiple imputation. Confidence intervals free defined parameters generated using simulated sampling distribution. Parameters can defined using := operator lavaan model syntax.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"Pesigan, . J. ., & Cheung, S. F. (2023). Monte Carlo confidence intervals indirect effect missing data. Behavior Research Methods. doi:10.3758/s13428-023-02114-4 Rubin, D. B. (1987). Multiple imputation nonresponse surveys. John Wiley & Sons, Inc.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/reference/MCMI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte Carlo Confidence Intervals (Multiple Imputation) — MCMI","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ MCMI(   fit,   mi = mi,   R = 100L, # use a large value e.g., 20000L for actual research   alpha = 0.05 ) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>                       est     se   R    2.5%  97.5% #> cp                 0.2798 0.2615 100 -0.1885 0.8488 #> b                  0.4615 0.0942 100  0.2829 0.6621 #> a                  0.4223 0.2500 100 -0.0549 0.9437 #> cond~~cond         0.2470 0.0338 100  0.1750 0.3135 #> reaction~~reaction 1.9336 0.3182 100  1.2032 2.5354 #> pmi~~pmi           1.6828 0.2382 100  1.1678 2.1917 #> indirect           0.1944 0.1141 100 -0.0242 0.4088 #> direct             0.2798 0.2615 100 -0.1885 0.8488 #> total              0.4742 0.2954 100 -0.0513 1.0473"},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardized Monte Carlo Confidence Intervals — MCStd","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"Calculates standardized Monte Carlo confidence intervals free defined parameters.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"","code":"MCStd(mc, alpha = c(0.001, 0.01, 0.05))"},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"mc Output MC() MCMI() function. alpha Numeric vector. Significance level \\(\\alpha\\).","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"Returns object class semmcci list following elements: call Function call. args List function arguments. thetahat Parameter estimates \\(\\hat{\\theta}\\). thetahatstar Sampling distribution parameter estimates \\(\\hat{\\theta}^{\\ast}\\). fun Function used (\"MCStd\").","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"empirical sampling distribution parameter estimates argument mc standardized, , randomly generated vector parameters standardized. Defined parameters computed standardized component parameters. Confidence intervals generated using standardized empirical sampling distribution.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"Pesigan, . J. ., & Cheung, S. F. (2023). Monte Carlo confidence intervals indirect effect missing data. Behavior Research Methods. doi:10.3758/s13428-023-02114-4","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/MCStd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardized Monte Carlo Confidence Intervals — MCStd","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 100L, # use a large value e.g., 20000L for actual research   alpha = 0.05 )  ## Standardized Monte Carlo ------------------------------------------------ MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>                       est     se   R    2.5%  97.5% #> cp                 0.1024 0.0904 100 -0.0700 0.2702 #> b                  0.3954 0.0697 100  0.2850 0.5430 #> a                  0.1826 0.0928 100  0.0139 0.3596 #> cond~~cond         1.0000 0.0000 100  1.0000 1.0000 #> reaction~~reaction 0.8184 0.0657 100  0.6571 0.9025 #> pmi~~pmi           0.9667 0.0352 100  0.8706 0.9993 #> indirect           0.5179 0.0396 100  0.0068 0.1472 #> direct             4.0543 0.0904 100 -0.0700 0.2702 #> total              0.9840 0.1053 100 -0.0388 0.3663  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 100L, # use a large value e.g., 20000L for actual research   alpha = 0.05 )  ## Standardized Monte Carlo ------------------------------------------------ MCStd(unstd, alpha = 0.05) #> Standardized Monte Carlo Confidence Intervals #>                       est     se   R    2.5%  97.5% #> cp                 0.0939 0.0846 100 -0.0599 0.2527 #> b                  0.3939 0.0826 100  0.2548 0.5742 #> a                  0.1626 0.0928 100  0.0175 0.3129 #> cond~~cond         1.0000 0.0000 100  1.0000 1.0000 #> reaction~~reaction 0.8240 0.0621 100  0.6739 0.9264 #> pmi~~pmi           0.9736 0.0333 100  0.9021 0.9996 #> indirect           0.0640 0.0398 100  0.0055 0.1378 #> direct             0.0939 0.0846 100 -0.0599 0.2527 #> total              0.1579 0.0870 100 -0.0072 0.3127"},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Estimates — coef.semmcci","title":"Parameter Estimates — coef.semmcci","text":"Parameter Estimates","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Estimates — coef.semmcci","text":"","code":"# S3 method for semmcci coef(object, ...)"},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Estimates — coef.semmcci","text":"object Object class semmcci. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Estimates — coef.semmcci","text":"Returns vector parameter estimates.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parameter Estimates — coef.semmcci","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/coef.semmcci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter Estimates — coef.semmcci","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 100L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) coef(unstd) #>                 cp                  b                  a         cond~~cond  #>         0.06533011         0.49073465         0.49157929         0.24898797  #> reaction~~reaction           pmi~~pmi         reaction~1              pmi~1  #>         1.90811079         1.75091176         0.65150158         5.38851688  #>             cond~1           indirect             direct              total  #>         0.47719781         0.24123499         0.06533011         0.30656510  coef(std) #>                 cp                  b                  a         cond~~cond  #>         0.02125085         0.43051587         0.18226949         1.00000000  #> reaction~~reaction           pmi~~pmi         reaction~1              pmi~1  #>         0.81086938         0.96677783         0.42470672         4.00405893  #>             cond~1           indirect             direct              total  #>         0.95633326         0.07846991         0.02125085         0.09972075   # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 100L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) coef(unstd) #>                 cp                  b                  a         cond~~cond  #>         0.02894086         0.49508751         0.48364536         0.24889948  #> reaction~~reaction           pmi~~pmi           indirect             direct  #>         1.90093206         1.72456209         0.23942769         0.02894086  #>              total  #>         0.26836855  coef(std) #>                 cp                  b                  a         cond~~cond  #>        -0.01923593         0.42020949         0.13129036         1.00000000  #> reaction~~reaction           pmi~~pmi           indirect             direct  #>         0.82517644         0.98276284         0.05516945        -0.01923593  #>              total  #>         0.03593353"},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"Monte Carlo Confidence Intervals Parameter Estimates","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"","code":"# S3 method for semmcci confint(object, parm = NULL, level = 0.95, ...)"},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"object Object class semmcci. parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. level confidence level required. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"Returns matrix confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/confint.semmcci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monte Carlo Confidence Intervals for the Parameter Estimates — confint.semmcci","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 100L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) confint(unstd) #>                          2.5 %    97.5 % #> cp                  0.02737613 1.0452950 #> b                   0.26232664 0.6167336 #> a                  -0.26620184 0.9103874 #> cond~~cond          0.18426132 0.3152624 #> reaction~~reaction  1.38301685 2.3090299 #> pmi~~pmi            1.26242863 1.9816597 #> reaction~1         -0.19987877 1.8821649 #> pmi~1               5.16390768 5.8900034 #> cond~1              0.39699815 0.5591144 #> indirect           -0.12979908 0.4408150 #> direct              0.02737613 1.0452950 #> total               0.05451531 1.1091746 confint(std) #>                           2.5 %    97.5 % #> cp                  0.008476417 0.3478438 #> b                   0.214505006 0.5373789 #> a                  -0.110472307 0.3404188 #> cond~~cond          1.000000000 1.0000000 #> reaction~~reaction  0.648802352 0.9273501 #> pmi~~pmi            0.884111062 0.9999592 #> indirect           -0.044102623 0.1363784 #> direct              0.008476417 0.3478438 #> total               0.018146557 0.3644821  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 100L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) confint(unstd) #>                          2.5 %    97.5 % #> cp                 -0.21435391 1.0624214 #> b                   0.21728594 0.6557372 #> a                  -0.16809860 0.7397489 #> cond~~cond          0.20176764 0.2997567 #> reaction~~reaction  1.40162965 2.4772927 #> pmi~~pmi            1.27199169 1.9933528 #> indirect           -0.06924028 0.3574150 #> direct             -0.21435391 1.0624214 #> total              -0.08539429 1.1393255 confint(std) #>                          2.5 %    97.5 % #> cp                 -0.06413959 0.3515443 #> b                   0.19034397 0.5293639 #> a                  -0.06693582 0.2867457 #> cond~~cond          1.00000000 1.0000000 #> reaction~~reaction  0.68831659 0.9360740 #> pmi~~pmi            0.91777662 0.9999067 #> indirect           -0.02184892 0.1258902 #> direct             -0.06413959 0.3515443 #> total              -0.02844563 0.3758570"},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for Object of Class semmcci — print.semmcci","title":"Print Method for Object of Class semmcci — print.semmcci","text":"Print Method Object Class semmcci","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for Object of Class semmcci — print.semmcci","text":"","code":"# S3 method for semmcci print(x, alpha = NULL, digits = 4, ...)"},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for Object of Class semmcci — print.semmcci","text":"x object class semmcci. alpha Numeric vector. Significance level \\(\\alpha\\). alpha = NULL, use argument alpha used x. digits Integer indicating number decimal places display. ... arguments.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Method for Object of Class semmcci — print.semmcci","text":"Returns matrix estimates, standard errors, number Monte Carlo replications, confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print Method for Object of Class semmcci — print.semmcci","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/print.semmcci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Method for Object of Class semmcci — print.semmcci","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 100L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) print(unstd) #> Monte Carlo Confidence Intervals #>                       est     se   R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.1385 0.2744 100 -0.4258 -0.4180 -0.3787 0.6582 0.9123 #> b                  0.4923 0.0915 100  0.2615  0.2672  0.3209 0.6546 0.6982 #> a                  0.5307 0.2409 100  0.0521  0.0631  0.0845 1.0432 1.1676 #> cond~~cond         0.2469 0.0355 100  0.1488  0.1538  0.1729 0.2970 0.3261 #> reaction~~reaction 1.8260 0.2787 100  1.2366  1.2516  1.3237 2.3821 2.5939 #> pmi~~pmi           1.6592 0.2158 100  1.1996  1.2085  1.2689 2.1160 2.2420 #> reaction~1         0.6123 0.5448 100 -0.6097 -0.5276 -0.3976 1.7177 1.9910 #> pmi~1              5.4107 0.1476 100  5.0073  5.0542  5.1641 5.7363 5.8153 #> cond~1             0.4519 0.0516 100  0.3136  0.3321  0.3642 0.5482 0.5869 #> indirect           0.2613 0.1298 100  0.0328  0.0345  0.0396 0.5125 0.6193 #> direct             0.1385 0.2744 100 -0.4258 -0.4180 -0.3787 0.6582 0.9123 #> total              0.3998 0.3055 100 -0.2923 -0.2776 -0.2185 1.0004 1.2959 #>                    99.95% #> cp                 0.9410 #> b                  0.7020 #> a                  1.2041 #> cond~~cond         0.3387 #> reaction~~reaction 2.6626 #> pmi~~pmi           2.2717 #> reaction~1         2.0107 #> pmi~1              5.8411 #> cond~1             0.5896 #> indirect           0.6207 #> direct             0.9410 #> total              1.4262 print(std) #> Standardized Monte Carlo Confidence Intervals #>                       est     se   R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.0457 0.0864 100 -0.1611 -0.1522 -0.1220 0.1980 0.2529 #> b                  0.4298 0.0787 100  0.2339  0.2370  0.2591 0.5577 0.5835 #> a                  0.2005 0.0849 100  0.0215  0.0271  0.0339 0.3799 0.4203 #> cond~~cond         1.0000 0.0000 100  1.0000  1.0000  1.0000 1.0000 1.0000 #> reaction~~reaction 0.8053 0.0680 100  0.6456  0.6458  0.6666 0.9247 0.9422 #> pmi~~pmi           0.9598 0.0356 100  0.8186  0.8233  0.8554 0.9989 0.9992 #> indirect           0.4066 0.0417 100  0.0107  0.0115  0.0128 0.1648 0.2024 #> direct             4.1152 0.0864 100 -0.1611 -0.1522 -0.1220 0.1980 0.2529 #> total              0.9095 0.0934 100 -0.1105 -0.1000 -0.0667 0.3104 0.3548 #>                    99.95% #> cp                 0.2756 #> b                  0.5915 #> a                  0.4259 #> cond~~cond         1.0000 #> reaction~~reaction 0.9468 #> pmi~~pmi           0.9995 #> indirect           0.2105 #> direct             0.2756 #> total              0.3622  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 100L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) print(unstd) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>                       est     se   R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.1344 0.2782 100 -0.5369 -0.5267 -0.4571 0.6521 0.6996 #> b                  0.4827 0.1026 100  0.2402  0.2451  0.2778 0.6840 0.7224 #> a                  0.5398 0.2079 100  0.0720  0.1036  0.1798 0.9240 1.0281 #> cond~~cond         0.2477 0.0324 100  0.1710  0.1724  0.1893 0.3041 0.3243 #> reaction~~reaction 1.8482 0.2716 100  1.0695  1.1088  1.2635 2.3555 2.4240 #> pmi~~pmi           1.6078 0.1762 100  1.2346  1.2500  1.2829 1.9587 2.0354 #> indirect           0.2609 0.1180 100  0.0354  0.0492  0.0785 0.5179 0.5669 #> direct             0.1344 0.2782 100 -0.5369 -0.5267 -0.4571 0.6521 0.6996 #> total              0.3953 0.2894 100 -0.3216 -0.2925 -0.1787 0.8592 0.9869 #>                    99.95% #> cp                 0.7097 #> b                  0.7234 #> a                  1.0581 #> cond~~cond         0.3243 #> reaction~~reaction 2.4438 #> pmi~~pmi           2.0500 #> indirect           0.5846 #> direct             0.7097 #> total              1.0075 print(std) #> Standardized Monte Carlo Confidence Intervals #>                        est     se   R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 -0.0093 0.0920 100 -0.2116 -0.1964 -0.1383 0.2062 0.2266 #> b                   0.4506 0.0856 100  0.2178  0.2232  0.2367 0.5805 0.5978 #> a                   0.1634 0.0746 100  0.0291  0.0392  0.0713 0.3570 0.3674 #> cond~~cond          1.0000 0.0000 100  1.0000  1.0000  1.0000 1.0000 1.0000 #> reaction~~reaction  0.7982 0.0731 100  0.6162  0.6191  0.6402 0.9340 0.9422 #> pmi~~pmi            0.9733 0.0321 100  0.8594  0.8650  0.8726 0.9949 0.9983 #> indirect            0.0736 0.0381 100  0.0113  0.0161  0.0252 0.1724 0.1923 #> direct             -0.0093 0.0920 100 -0.2116 -0.1964 -0.1383 0.2062 0.2266 #> total               0.0644 0.0947 100 -0.1125 -0.1080 -0.0570 0.2764 0.3189 #>                    99.95% #> cp                 0.2303 #> b                  0.6027 #> a                  0.3750 #> cond~~cond         1.0000 #> reaction~~reaction 0.9460 #> pmi~~pmi           0.9991 #> indirect           0.1991 #> direct             0.2303 #> total              0.3424"},{"path":"https://github.com/jeksterslab/semmcci/reference/semmcci-package.html","id":null,"dir":"Reference","previous_headings":"","what":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling — semmcci-package","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling — semmcci-package","text":"Monte Carlo confidence intervals free defined parameters models fitted structural equation modeling package 'lavaan' can generated using 'semmcci' package. 'semmcci' three main functions, namely, MC(), MCMI(), MCStd(). output 'lavaan' passed first argument MC() function MCMI() function generate Monte Carlo confidence intervals. Monte Carlo confidence intervals standardized estimates can also generated passing output MC() function MCMI() function MCStd() function. description package code examples presented Pesigan Cheung (2023) doi:10.3758/s13428-023-02114-4 .","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/reference/semmcci-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"semmcci: Monte Carlo Confidence Intervals in Structural Equation Modeling — semmcci-package","text":"Maintainer: Ivan Jacob Agaloos Pesigan r.jeksterslab@gmail.com (ORCID) [copyright holder] contributors: Shu Fai Cheung shufai.cheung@gmail.com (ORCID) [contributor]","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Method for an Object of Class semmcci — summary.semmcci","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"Summary Method Object Class semmcci","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"","code":"# S3 method for semmcci summary(object, alpha = NULL, digits = 4, ...)"},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"object Object class semmcci. alpha Numeric vector. Significance level \\(\\alpha\\). alpha = NULL, use argument alpha used object. digits Digits print. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"Returns matrix estimates, standard errors, number Monte Carlo replications, confidence intervals.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/summary.semmcci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Method for an Object of Class semmcci — summary.semmcci","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 100L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) summary(unstd) #> Monte Carlo Confidence Intervals #>                       est     se   R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.3336 0.2387 100 -0.3262 -0.2338 -0.1200 0.7705 0.8291 #> b                  0.4850 0.0950 100  0.1547  0.2098  0.2870 0.6349 0.6477 #> a                  0.4943 0.2464 100 -0.2217 -0.0924  0.0845 0.9405 1.3979 #> cond~~cond         0.2488 0.0347 100  0.1610  0.1691  0.1813 0.3079 0.3333 #> reaction~~reaction 1.7533 0.2297 100  1.1992  1.2142  1.3049 2.1336 2.3209 #> pmi~~pmi           1.7630 0.2380 100  1.2477  1.2671  1.3486 2.2410 2.3275 #> reaction~1         0.6328 0.5493 100 -0.2926 -0.2837 -0.2532 1.8911 2.2180 #> pmi~1              5.3597 0.1875 100  4.7358  4.8321  5.0031 5.7298 5.8388 #> cond~1             0.5005 0.0519 100  0.3913  0.3924  0.4178 0.6012 0.6160 #> indirect           0.2397 0.1350 100 -0.1182 -0.0489  0.0409 0.5472 0.6747 #> direct             0.3336 0.2387 100 -0.3262 -0.2338 -0.1200 0.7705 0.8291 #> total              0.5734 0.2674 100 -0.1401 -0.0667  0.1367 1.0806 1.1723 #>                    99.95% #> cp                 0.8377 #> b                  0.6545 #> a                  1.4423 #> cond~~cond         0.3446 #> reaction~~reaction 2.4642 #> pmi~~pmi           2.3283 #> reaction~1         2.4338 #> pmi~1              5.8471 #> cond~1             0.6184 #> indirect           0.7306 #> direct             0.8377 #> total              1.2211 summary(std) #> Standardized Monte Carlo Confidence Intervals #>                       est     se   R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.1109 0.0808 100 -0.1149 -0.0800 -0.0391 0.2596 0.3063 #> b                  0.4367 0.0815 100  0.1633  0.2061  0.2648 0.5641 0.5721 #> a                  0.1826 0.0873 100 -0.0986 -0.0419  0.0311 0.3364 0.4722 #> cond~~cond         1.0000 0.0000 100  1.0000  1.0000  1.0000 1.0000 1.0000 #> reaction~~reaction 0.7793 0.0742 100  0.6077  0.6079  0.6253 0.9141 0.9263 #> pmi~~pmi           0.9667 0.0374 100  0.7619  0.7767  0.8867 0.9980 0.9994 #> indirect           0.4219 0.0434 100 -0.0435 -0.0186  0.0141 0.1789 0.2205 #> direct             3.9688 0.0808 100 -0.1149 -0.0800 -0.0391 0.2596 0.3063 #> total              1.0034 0.0889 100 -0.0495 -0.0237  0.0410 0.3610 0.3989 #>                    99.95% #> cp                 0.3068 #> b                  0.5744 #> a                  0.4879 #> cond~~cond         1.0000 #> reaction~~reaction 0.9271 #> pmi~~pmi           0.9995 #> indirect           0.2423 #> direct             0.3068 #> total              0.4156  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 100L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) summary(unstd) #> Monte Carlo Confidence Intervals (Multiple Imputation Estimates) #>                       est     se   R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.3423 0.2801 100 -0.4221 -0.3460 -0.1470 0.8601 1.0743 #> b                  0.4682 0.0977 100  0.2177  0.2282  0.2729 0.6565 0.6736 #> a                  0.4486 0.2121 100 -0.0496 -0.0434  0.0162 0.8512 0.9158 #> cond~~cond         0.2496 0.0366 100  0.1592  0.1633  0.1853 0.3269 0.3351 #> reaction~~reaction 1.7619 0.2173 100  1.1504  1.2655  1.4285 2.2048 2.3059 #> pmi~~pmi           1.7295 0.2215 100  1.2215  1.2242  1.3296 2.2188 2.3200 #> indirect           0.2105 0.1103 100 -0.0231 -0.0224  0.0064 0.4329 0.5381 #> direct             0.3423 0.2801 100 -0.4221 -0.3460 -0.1470 0.8601 1.0743 #> total              0.5528 0.3016 100 -0.1965 -0.1917  0.0729 1.1774 1.2995 #>                    99.95% #> cp                 1.1106 #> b                  0.6741 #> a                  0.9691 #> cond~~cond         0.3369 #> reaction~~reaction 2.3827 #> pmi~~pmi           2.3259 #> indirect           0.5628 #> direct             1.1106 #> total              1.3315 summary(std) #> Standardized Monte Carlo Confidence Intervals #>                       est     se   R   0.05%    0.5%    2.5%  97.5%  99.5% #> cp                 0.1165 0.0919 100 -0.1437 -0.1226 -0.0504 0.2910 0.3490 #> b                  0.4757 0.0771 100  0.2073  0.2240  0.2541 0.5469 0.5626 #> a                  0.1598 0.0768 100 -0.0180 -0.0153  0.0061 0.3053 0.3336 #> cond~~cond         1.0000 0.0000 100  1.0000  1.0000  1.0000 1.0000 1.0000 #> reaction~~reaction 0.7424 0.0679 100  0.6261  0.6360  0.6534 0.8979 0.9225 #> pmi~~pmi           0.9745 0.0259 100  0.8879  0.8887  0.9067 0.9996 0.9999 #> indirect           0.0760 0.0347 100 -0.0076 -0.0071  0.0021 0.1322 0.1609 #> direct             0.1165 0.0919 100 -0.1437 -0.1226 -0.0504 0.2910 0.3490 #> total              0.1925 0.0982 100 -0.0706 -0.0688  0.0253 0.3847 0.4107 #>                    99.95% #> cp                 0.3525 #> b                  0.5658 #> a                  0.3348 #> cond~~cond         1.0000 #> reaction~~reaction 0.9271 #> pmi~~pmi           0.9999 #> indirect           0.1693 #> direct             0.3525 #> total              0.4130"},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"Sampling Covariance Matrix Parameter Estimates","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"","code":"# S3 method for semmcci vcov(object, ...)"},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"object Object class semmcci. ... additional arguments.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"Returns matrix variance-covariance matrix parameter estimates.","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/jeksterslab/semmcci/reference/vcov.semmcci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling Covariance Matrix of the Parameter Estimates — vcov.semmcci","text":"","code":"library(semmcci) library(lavaan)  # Data --------------------------------------------------------------------- data(\"Tal.Or\", package = \"psych\") df <- mice::ampute(Tal.Or)$amp  # Monte Carlo -------------------------------------------------------------- ## Fit Model in lavaan ----------------------------------------------------- model <- \"   reaction ~ cp * cond + b * pmi   pmi ~ a * cond   cond ~~ cond   indirect := a * b   direct := cp   total := cp + (a * b) \" fit <- sem(data = df, model = model, missing = \"fiml\")  ## MC() -------------------------------------------------------------------- unstd <- MC(   fit,   R = 100L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) vcov(unstd) #>                               cp             b            a    cond~~cond #> cp                  0.0828119658 -0.0037935308 -0.004154421  1.697395e-03 #> b                  -0.0037935308  0.0103922046  0.001749543 -1.856963e-04 #> a                  -0.0041544215  0.0017495429  0.053492058  1.730577e-03 #> cond~~cond          0.0016973952 -0.0001856963  0.001730577  9.808899e-04 #> reaction~~reaction -0.0011162783 -0.0008979491  0.012993880  5.312005e-04 #> pmi~~pmi            0.0001203122 -0.0011263838  0.002434528  7.609865e-04 #> reaction~1         -0.0099722399 -0.0558321385 -0.009354315  1.053855e-03 #> pmi~1               0.0127064204 -0.0004510761 -0.024157990 -5.576603e-04 #> cond~1              0.0005165763 -0.0002626466 -0.001364125 -4.232272e-05 #> indirect           -0.0044438051  0.0047176459  0.029370702  8.758662e-04 #> direct              0.0828119658 -0.0037935308 -0.004154421  1.697395e-03 #> total               0.0783681607  0.0009241152  0.025216281  2.573261e-03 #>                    reaction~~reaction      pmi~~pmi   reaction~1         pmi~1 #> cp                      -0.0011162783  0.0001203122 -0.009972240  0.0127064204 #> b                       -0.0008979491 -0.0011263838 -0.055832139 -0.0004510761 #> a                        0.0129938799  0.0024345283 -0.009354315 -0.0241579904 #> cond~~cond               0.0005312005  0.0007609865  0.001053855 -0.0005576603 #> reaction~~reaction       0.0819991468  0.0020668128  0.006928121 -0.0046968937 #> pmi~~pmi                 0.0020668128  0.0380324504  0.005586017  0.0011683974 #> reaction~1               0.0069281213  0.0055860166  0.326394869 -0.0028643333 #> pmi~1                   -0.0046968937  0.0011683974 -0.002864333  0.0252159491 #> cond~1                   0.0025435414 -0.0011559335  0.001146356  0.0008764433 #> indirect                 0.0066647431  0.0008506319 -0.024649185 -0.0130528415 #> direct                  -0.0011162783  0.0001203122 -0.009972240  0.0127064204 #> total                    0.0055484648  0.0009709441 -0.034621425 -0.0003464211 #>                           cond~1      indirect        direct         total #> cp                  5.165763e-04 -0.0044438051  0.0828119658  0.0783681607 #> b                  -2.626466e-04  0.0047176459 -0.0037935308  0.0009241152 #> a                  -1.364125e-03  0.0293707023 -0.0041544215  0.0252162809 #> cond~~cond         -4.232272e-05  0.0008758662  0.0016973952  0.0025732614 #> reaction~~reaction  2.543541e-03  0.0066647431 -0.0011162783  0.0055484648 #> pmi~~pmi           -1.155933e-03  0.0008506319  0.0001203122  0.0009709441 #> reaction~1          1.146356e-03 -0.0246491855 -0.0099722399 -0.0346214253 #> pmi~1               8.764433e-04 -0.0130528415  0.0127064204 -0.0003464211 #> cond~1              2.388163e-03 -0.0006531768  0.0005165763 -0.0001366005 #> indirect           -6.531768e-04  0.0179783493 -0.0044438051  0.0135345441 #> direct              5.165763e-04 -0.0044438051  0.0828119658  0.0783681607 #> total              -1.366005e-04  0.0135345441  0.0783681607  0.0919027048 vcov(std) #>                               cp             b             a    cond~~cond #> cp                  8.143928e-03 -9.686716e-04 -1.866216e-04  1.208212e-18 #> b                  -9.686716e-04  5.819748e-03  5.454921e-04 -4.670918e-19 #> a                  -1.866216e-04  5.454921e-04  8.400308e-03 -1.885424e-18 #> cond~~cond          1.208212e-18 -4.670918e-19 -1.885424e-18  1.307298e-32 #> reaction~~reaction -6.311147e-04 -4.480227e-03 -1.658824e-04  2.981898e-19 #> pmi~~pmi            2.981495e-04 -2.012895e-04 -3.078271e-03  9.104441e-19 #> indirect           -3.202786e-04  1.090880e-03  3.726285e-03 -8.855745e-19 #> direct              8.143928e-03 -9.686716e-04 -1.866216e-04  1.208212e-18 #> total               7.823650e-03  1.222085e-04  3.539664e-03  3.226378e-19 #>                    reaction~~reaction      pmi~~pmi      indirect        direct #> cp                      -6.311147e-04  2.981495e-04 -3.202786e-04  8.143928e-03 #> b                       -4.480227e-03 -2.012895e-04  1.090880e-03 -9.686716e-04 #> a                       -1.658824e-04 -3.078271e-03  3.726285e-03 -1.866216e-04 #> cond~~cond               2.981898e-19  9.104441e-19 -8.855745e-19  1.208212e-18 #> reaction~~reaction       3.904822e-03  2.609617e-05 -7.139409e-04 -6.311147e-04 #> pmi~~pmi                 2.609617e-05  1.239988e-03 -1.382190e-03  2.981495e-04 #> indirect                -7.139409e-04 -1.382190e-03  1.817139e-03 -3.202786e-04 #> direct                  -6.311147e-04  2.981495e-04 -3.202786e-04  8.143928e-03 #> total                   -1.345056e-03 -1.084040e-03  1.496860e-03  7.823650e-03 #>                            total #> cp                  7.823650e-03 #> b                   1.222085e-04 #> a                   3.539664e-03 #> cond~~cond          3.226378e-19 #> reaction~~reaction -1.345056e-03 #> pmi~~pmi           -1.084040e-03 #> indirect            1.496860e-03 #> direct              7.823650e-03 #> total               9.320510e-03  # Monte Carlo (Multiple Imputation) ---------------------------------------- ## Multiple Imputation ----------------------------------------------------- mi <- mice::mice(   data = df,   print = FALSE,   m = 5L, # use a large value e.g., 100L for actual research,   seed = 42 )  ## Fit Model in lavaan ----------------------------------------------------- fit <- sem(data = df, model = model) # use default listwise deletion  ## MCMI() ------------------------------------------------------------------ unstd <- MCMI(   fit,   mi = mi,   R = 100L # use a large value e.g., 20000L for actual research )  ## Standardized Monte Carlo ------------------------------------------------ std <- MCStd(unstd) vcov(unstd) #>                               cp             b             a    cond~~cond #> cp                  0.0618661771 -0.0028215525 -6.542752e-03 -0.0004091418 #> b                  -0.0028215525  0.0108291679 -2.700317e-03 -0.0004461445 #> a                  -0.0065427520 -0.0027003166  6.477712e-02 -0.0001188940 #> cond~~cond         -0.0004091418 -0.0004461445 -1.188940e-04  0.0008711714 #> reaction~~reaction -0.0040541069 -0.0036004779 -4.073405e-03 -0.0001052837 #> pmi~~pmi           -0.0061535841  0.0008038818 -9.251767e-05  0.0001811239 #> indirect           -0.0051317091  0.0031399780  3.109472e-02 -0.0002896304 #> direct              0.0618661771 -0.0028215525 -6.542752e-03 -0.0004091418 #> total               0.0567344680  0.0003184255  2.455197e-02 -0.0006987721 #>                    reaction~~reaction      pmi~~pmi      indirect        direct #> cp                      -0.0040541069 -6.153584e-03 -0.0051317091  0.0618661771 #> b                       -0.0036004779  8.038818e-04  0.0031399780 -0.0028215525 #> a                       -0.0040734048 -9.251767e-05  0.0310947193 -0.0065427520 #> cond~~cond              -0.0001052837  1.811239e-04 -0.0002896304 -0.0004091418 #> reaction~~reaction       0.0526901364 -1.713681e-03 -0.0043037148 -0.0040541069 #> pmi~~pmi                -0.0017136809  3.990311e-02  0.0007869256 -0.0061535841 #> indirect                -0.0043037148  7.869256e-04  0.0179120191 -0.0051317091 #> direct                  -0.0040541069 -6.153584e-03 -0.0051317091  0.0618661771 #> total                   -0.0083578217 -5.366659e-03  0.0127803100  0.0567344680 #>                            total #> cp                  0.0567344680 #> b                   0.0003184255 #> a                   0.0245519673 #> cond~~cond         -0.0006987721 #> reaction~~reaction -0.0083578217 #> pmi~~pmi           -0.0053666586 #> indirect            0.0127803100 #> direct              0.0567344680 #> total               0.0695147781 vcov(std) #>                               cp             b             a    cond~~cond #> cp                  6.130989e-03 -1.045960e-03 -6.942456e-04  1.953934e-18 #> b                  -1.045960e-03  6.535884e-03 -3.375784e-04 -9.629280e-19 #> a                  -6.942456e-04 -3.375784e-04  9.511080e-03 -2.086230e-18 #> cond~~cond          1.953934e-18 -9.629280e-19 -2.086230e-18  1.767965e-32 #> reaction~~reaction -1.859009e-04 -5.112936e-03  2.923318e-04  5.215873e-19 #> pmi~~pmi            8.228919e-05  2.293051e-04 -3.155050e-03  7.829487e-19 #> indirect           -5.150056e-04  1.010084e-03  3.718879e-03 -1.169590e-18 #> direct              6.130989e-03 -1.045960e-03 -6.942456e-04  1.953934e-18 #> total               5.615984e-03 -3.587555e-05  3.024634e-03  7.843440e-19 #>                    reaction~~reaction      pmi~~pmi      indirect        direct #> cp                      -1.859009e-04  8.228919e-05 -5.150056e-04  6.130989e-03 #> b                       -5.112936e-03  2.293051e-04  1.010084e-03 -1.045960e-03 #> a                        2.923318e-04 -3.155050e-03  3.718879e-03 -6.942456e-04 #> cond~~cond               5.215873e-19  7.829487e-19 -1.169590e-18  1.953934e-18 #> reaction~~reaction       4.298269e-03 -1.635249e-04 -7.860483e-04 -1.859009e-04 #> pmi~~pmi                -1.635249e-04  1.230236e-03 -1.233145e-03  8.228919e-05 #> indirect                -7.860483e-04 -1.233145e-03  1.745717e-03 -5.150056e-04 #> direct                  -1.859009e-04  8.228919e-05 -5.150056e-04  6.130989e-03 #> total                   -9.719492e-04 -1.150856e-03  1.230712e-03  5.615984e-03 #>                            total #> cp                  5.615984e-03 #> b                  -3.587555e-05 #> a                   3.024634e-03 #> cond~~cond          7.843440e-19 #> reaction~~reaction -9.719492e-04 #> pmi~~pmi           -1.150856e-03 #> indirect            1.230712e-03 #> direct              5.615984e-03 #> total               6.846695e-03"},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"minor-1-1-0","dir":"Changelog","previous_headings":"","what":"Minor","title":"semmcci 1.1.0","text":"Added MCMI() function.","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"semmcci-104","dir":"Changelog","previous_headings":"","what":"semmcci 1.0.4","title":"semmcci 1.0.4","text":"CRAN release: 2022-12-17","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"patch-1-0-4","dir":"Changelog","previous_headings":"","what":"Patch","title":"semmcci 1.0.4","text":"Minor refactoring data generation functions.","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"semmcci-103","dir":"Changelog","previous_headings":"","what":"semmcci 1.0.3","title":"semmcci 1.0.3","text":"CRAN release: 2022-10-16","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"patch-1-0-3","dir":"Changelog","previous_headings":"","what":"Patch","title":"semmcci 1.0.3","text":"Added decomposition, pd, tol arguments MC().","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"semmcci-102","dir":"Changelog","previous_headings":"","what":"semmcci 1.0.2","title":"semmcci 1.0.2","text":"CRAN release: 2022-10-04","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"patch-1-0-2","dir":"Changelog","previous_headings":"","what":"Patch","title":"semmcci 1.0.2","text":"Random variates multivatiate normal distribution generated using Cholesky decomposition sampling variance-covariance matrix. Eigen decomposition used Cholesky decomposition fails. NA returned calculation defined parameter fails MC(). NA returned standardization fails MCStd(). Added methods.","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"semmcci-101","dir":"Changelog","previous_headings":"","what":"semmcci 1.0.1","title":"semmcci 1.0.1","text":"CRAN release: 2022-09-13","code":""},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"patch-1-0-1","dir":"Changelog","previous_headings":"","what":"Patch","title":"semmcci 1.0.1","text":"Initial CRAN release.","code":""},{"path":[]},{"path":"https://github.com/jeksterslab/semmcci/news/index.html","id":"major-1-0-0","dir":"Changelog","previous_headings":"","what":"Major","title":"semmcci 1.0.0","text":"Initial CRAN submission.","code":""}]
